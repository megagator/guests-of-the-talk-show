[00:00.000 --> 00:04.220]  first guest ever. We're up on episode This is Episode 272. First time I've ever had a
[00:04.220 --> 00:12.380]  guest who I've worked for. And it'll never happen again. Well, maybe you'll come back.
[00:12.380 --> 00:17.660]  But I've run out. I was gonna say that sounded a little ominous. I've run out of former employers
[00:17.660 --> 00:24.940]  I believe who who I can. There are there's not a long list anyway. But anyway, I thought
[00:24.940 --> 00:31.640]  what better time BB edit 13 came out recently. I actually don't have the date in front of
[00:31.640 --> 00:36.160]  me. But I've always liked the idea of having I need to do it more often is have some of
[00:36.160 --> 00:40.760]  my developers come out and you know, movie stars come out with a movie. What do they
[00:40.760 --> 00:47.120]  do? They go on shows talk about it. Why don't developers do it when there's a major release?
[00:47.120 --> 00:52.360]  And you know, that's, that's a sort of an old school big co thing to do. From back in
[00:52.360 --> 00:58.040]  the day is whenever there was a major release, the company would would go out on tour, they
[00:58.040 --> 01:03.560]  do a press tour, they go around everywhere and meet with everybody. And, and that's how
[01:03.560 --> 01:05.880]  it used to work.
[01:05.880 --> 01:12.840]  Your BB edits career. BB doesn't have a career, but your career leading co founding bare bones
[01:12.840 --> 01:17.440]  with your longtime partner, Patrick. How's Patrick doing? By the way, he's he's great.
[01:17.440 --> 01:25.560]  He's the same as he ever was unchanged. 13 is a big number, you've always been relatively
[01:25.560 --> 01:31.560]  conservative, I would say in the grand scheme of version numbers that if it's a dado, it's
[01:31.560 --> 01:39.220]  pretty significant 13. But how long how old is BB edit now? So the first commercial version
[01:39.220 --> 01:47.080]  of BB edit was 2.5. And that shipped back in May of 1993. You and I used to always talk
[01:47.080 --> 01:51.040]  about it, you've always said that one of the it's sort of like, people who say that they
[01:51.040 --> 01:56.600]  were at the Don Larson's perfect game at Yankee Stadium, you know, there's Yankee Stadium
[01:56.600 --> 02:01.480]  seated 56,000 people, there's 500,000 people in the New York area who were there at the
[02:01.480 --> 02:07.800]  game. A lot of people misremember that they had BB at 1.0.
[02:07.800 --> 02:13.920]  Yeah, it's a funny thing how how memory works. Of course, over enough time, you you sort
[02:13.920 --> 02:19.460]  of fuzz out the details. And that's how it goes. It happens to all of us. There there
[02:19.460 --> 02:27.920]  was a BB at 1.0 at one point, but it never left the building in general release. But,
[02:27.920 --> 02:32.240]  you know, 1.0 is a shorthand for since the very beginning. That's that's something we
[02:32.240 --> 02:37.760]  hear a lot of. And so when somebody says 1.0, we're like, Yeah, absolutely. Awesome. Great
[02:37.760 --> 02:41.080]  to hear from you. And yeah, and there might be a kernel of truth to it where they might
[02:41.080 --> 02:46.020]  distinctly remember reading a review in Mac world or Mac user or one of the magazines
[02:46.020 --> 02:51.400]  at the time that would say something to the effect of BB at 2.0 is 2.5 is the first commercial
[02:51.400 --> 02:56.480]  release of barebone software's award winning text editor, blah, blah, blah. And then they
[02:56.480 --> 03:02.520]  just file that away in their head as first release. Yep.
[03:02.520 --> 03:08.880]  Still going strong. I I looked back my friend Daniel Bogan runs a site called uses this.
[03:08.880 --> 03:14.520]  I remember Daniel. Well, and he's still going strong. You know, he I didn't realize how
[03:14.520 --> 03:21.560]  how diligent he is with uses this. There's 1040 interviews on Daniels uses this site.
[03:21.560 --> 03:27.320]  And basically, he just talks to creative people of all slants, maybe someone like me, like
[03:27.320 --> 03:33.360]  a blogger type person, a developer, individual, creative artists of various sorts, and talks
[03:33.360 --> 03:40.960]  to them about what tools they use to do their work. I was on I was an interviewee over 10
[03:40.960 --> 03:49.380]  years ago. And I looked back on it this last week, because my friend Andy Baio of waxy.org
[03:49.380 --> 03:56.200]  fame was asked to be on back then to in 2009, and it put it off until like last week. So
[03:56.200 --> 04:02.120]  it was like, so I read his I thought, well, I should go back and reread mine. And boy,
[04:02.120 --> 04:06.680]  either I'm either on the luckiest sob on the planet, or I've got really good taste in software
[04:06.680 --> 04:15.080]  because the list of my most used and the ones I had most affection for software are still
[04:15.080 --> 04:23.520]  going strong. And at the top of the list was BB edit your Jimbo still on the list. P calc
[04:23.520 --> 04:28.960]  on the outliner. There's an awful lot. There's an awful lot of apps from 2009 that are not
[04:28.960 --> 04:33.040]  around anymore. But the funny thing is, if I went back to 1999, BB edit still would have
[04:33.040 --> 04:34.920]  been at the top of the list.
[04:34.920 --> 04:43.540]  Yeah, and I'm gonna go with good taste on that one. Because what we found is that you
[04:43.540 --> 04:53.120]  you don't stick around for very long without having some amount of perseverance, some degree
[04:53.120 --> 05:01.720]  of of willingness to just sort of dig in and do what needs to be done. And for us to it's,
[05:01.720 --> 05:05.000]  you know, we're committed. Well, we should be but
[05:05.000 --> 05:15.520]  I'd be I'd be I'd be neglect if I don't mention another one from the top of my list is acorn
[05:15.520 --> 05:22.880]  from flying meat software, and our guest Mueller and his wife, and so do I. But it's funny
[05:22.880 --> 05:28.960]  because I look at that list. And I think well, you know, 10 years ago, and I think BB edit
[05:28.960 --> 05:34.720]  and p calc and omni outliner, those are apps have been along around a long time, I still
[05:34.720 --> 05:42.640]  think of acorn is like a newish app. I think it was at the time, I think it was relatively
[05:42.640 --> 05:47.960]  a very low version number in 2009. But it's, you know, been a solid 10 years. And it's
[05:47.960 --> 05:54.600]  sort of that same formula of, for lack of a better word, craftsmanship.
[05:54.600 --> 06:03.840]  Yeah. Yeah, I absolutely agree. And I think you've really nailed it with that one is there
[06:03.840 --> 06:12.560]  is a craft to this, right? And you don't to go back on what I said a minute ago, and build
[06:12.560 --> 06:18.360]  on it, you don't endure without a dedication to that.
[06:18.360 --> 06:23.400]  So again, I don't want to spend the whole show reminiscent about the good old days,
[06:23.400 --> 06:28.600]  quote, unquote, except I kind of do want to talk about the good old. But one of the things
[06:28.600 --> 06:37.560]  that I found most I find most inspiring about the BB edit story is it not that there haven't
[06:37.560 --> 06:44.120]  been ups and downs along with the fairing of Apple itself, for sure. I mean, talking
[06:44.120 --> 06:49.080]  about an app that first came out in 1993. There was some rough years. Oh, yes, there
[06:49.080 --> 06:59.560]  were as a Mac developer. But in hindsight, there's never really been a time in that period
[06:59.560 --> 07:06.480]  when BB edit wasn't completely relevant to the needs of somebody who needs a professional
[07:06.480 --> 07:13.760]  strength text editor for the Mac platform that did things the Mac way that supported
[07:13.760 --> 07:22.440]  the Mac technologies in the OS that that would be applicable to a text editor. With professionals,
[07:22.440 --> 07:26.320]  there was no there's never been a period where BB edit really hasn't been relevant to that.
[07:26.320 --> 07:30.840]  Like it's for lack of a better word, I would say, you've never taken your eye off the ball
[07:30.840 --> 07:37.680]  on where that should be. Yeah, and I think a central reason for that
[07:37.680 --> 07:45.920]  is that underneath it all, there has always been text. Right?
[07:45.920 --> 07:50.480]  It's true. It doesn't matter. It almost doesn't matter
[07:50.480 --> 07:57.460]  what you do for a living. Underneath it, there is text. At the very beginning, when we started
[07:57.460 --> 08:06.960]  doing this, I was writing Mac software and of course, text, right? Source code. And then
[08:06.960 --> 08:14.320]  the World Wide Web started to grow and it was HTML and it was text. Web 2.0, remember
[08:14.320 --> 08:15.840]  that? Yeah.
[08:15.840 --> 08:26.100]  Came along and it was JavaScript and CSS and even as we move forward into newer stuff,
[08:26.100 --> 08:30.840]  it's still all text underneath and that's kind of what the plumbing of the world is
[08:30.840 --> 08:35.920]  built on as far as our industry is concerned, as far as the web is concerned.
[08:35.920 --> 08:41.720]  It is in some ways, Brent Simmons and I have talked about this a bit and I feel like I
[08:41.720 --> 08:46.520]  have a long, daring fireball rant on this that I've been sitting on literally could
[08:46.520 --> 08:57.320]  be 10 years. But basically, how plain text won the war. It's hard to remember, like when
[08:57.320 --> 09:04.520]  BB first appeared in 1993, 94, 95, I think you had to do an awful lot of explaining on
[09:04.520 --> 09:09.680]  a regular basis to customers that no, you can't just hit command I to make the text
[09:09.680 --> 09:11.400]  italic. Indeed.
[09:11.400 --> 09:16.840]  No, there is. You can change the font, but you'd be changing the font for everything
[09:16.840 --> 09:24.760]  because it's plain text. And I think that that was very hard. It seems ridiculous. Today's
[09:24.760 --> 09:32.420]  world where plain text is so prevalent in so many ways, but on the Macintosh, really
[09:32.420 --> 09:37.120]  from the get go with the software that really took off in the 80s, you know, your Mac writes
[09:37.120 --> 09:44.440]  the original, the early versions of Microsoft word. I was going to call it text edit. But
[09:44.440 --> 09:50.600]  of course, at the time it was teach text, which in hindsight, what a strange name. I
[09:50.600 --> 09:55.920]  know that I used to know the backstory on how it became teach text, but what a weird,
[09:55.920 --> 10:00.760]  you know, but what we now know is, well, the equivalent role of text edit, the default
[10:00.760 --> 10:06.680]  text editor for the platform was an app called teach text, but it defaulted to styled text.
[10:06.680 --> 10:11.680]  And so you could change the font, you could make it bold, you could make it italic. And
[10:11.680 --> 10:18.320]  that sort of was sort of the baseline that Mac users form for how text should work. And
[10:18.320 --> 10:22.040]  not having it, I think was it was hard to explain.
[10:22.040 --> 10:28.080]  It was for a less technical user. And so the story that we always used to tell, and it's
[10:28.080 --> 10:33.800]  an interesting point you make, because we have to answer the question very seldom these
[10:33.800 --> 10:41.480]  days. But the story we always used to tell is, there are two ways to look at text. There's
[10:41.480 --> 10:47.680]  text as the content of a finished document, something you'd produce with Word or PageMaker,
[10:47.680 --> 10:57.780]  remember that, or InDesign, or any modern, yeah, right. So the document is itself the
[10:57.780 --> 11:05.600]  finished work. And then there's text, which is data. And it's fed into another program.
[11:05.600 --> 11:14.160]  And that might be a compiler, it might be a web browser, or a web server, or an interpreter,
[11:14.160 --> 11:22.940]  or God help us a markdown to HTML renderer. And so what we built Bbetta to do as part
[11:22.940 --> 11:28.560]  of this story, what we built Bbetta to do was to function to handle the second class
[11:28.560 --> 11:30.980]  of text.
[11:30.980 --> 11:38.320]  And it, you know, it was it, there was a niche to be filled there, that that role really
[11:38.320 --> 11:44.680]  didn't it. I know that there were other plain text editors of that era. But there was none
[11:44.680 --> 11:49.960]  that really seemed like it was the king of the hill to supplant. I mean, for the most
[11:49.960 --> 11:54.120]  part, I think in the early days, Bbetta was competing against the built in text editors
[11:54.120 --> 11:59.320]  in think, see and think Pascal.
[11:59.320 --> 12:06.520]  With the term competing being used loosely, in those specific cases, think, see and think
[12:06.520 --> 12:11.920]  Pascal had their own built in editors, but they were also purpose built for working within
[12:11.920 --> 12:21.040]  those IDEs. And that was sort of Bbetta at its earliest market opportunity was, okay,
[12:21.040 --> 12:28.080]  so we need a text, I kept hearing we need a text editor that isn't tied to an IDE. The
[12:28.080 --> 12:37.320]  original Consulair Mac editor was sort of come and gone. MPW was from Apple, and it
[12:37.320 --> 12:44.440]  was part of a tool chain that cost around $1,000 or more. Yep. And was not really it
[12:44.440 --> 12:52.800]  was a weird beast. I mean, we can't go into a long thing on MPW. But MPW didn't act like
[12:52.800 --> 12:57.120]  I mean, that was part of the commercial appeal. Well, there was MPW was a commercial product
[12:57.120 --> 13:01.360]  too, which is crazy when you think about it, that it was $1,000. But part of what the think
[13:01.360 --> 13:05.920]  product stepped in and did is we could do this in a very Macintosh way, whereas MPW
[13:05.920 --> 13:12.160]  was this weird sort of Moonman mismatch of Unix command line isms, but not really Unix
[13:12.160 --> 13:20.640]  Unix, just sort of Unix inspired in a Mac app. Yeah. And at the same time, there were
[13:20.640 --> 13:25.280]  some freeware third party editors, there were a couple of commercial products or a couple
[13:25.280 --> 13:33.860]  shareware things. And I think one of the first things that I remember from that era was looking
[13:33.860 --> 13:41.400]  at those and thinking, Yeah, I kind of see what they're doing. But in sort of true programmer
[13:41.400 --> 13:45.120]  ish fashion, I looked at it and said, Well, that's not the way I want to do it. And I
[13:45.120 --> 13:50.960]  have the ability to do it the way I want to do it. So I'm going to do it.
[13:50.960 --> 13:55.480]  I think any older I get, the more I believe it, the more you know, if you want me to come
[13:55.480 --> 14:01.280]  in and give a pep talk, pep talk to you to some youngins, I think some of the best advice
[14:01.280 --> 14:06.960]  you can have in life is that if you ever look at an opportunity like that, whether you want
[14:06.960 --> 14:14.320]  to get into programming, whether you want to get into writing, whether you want to be
[14:14.320 --> 14:18.440]  an actor or stand up comedian, whatever it is, if you look at what people are doing,
[14:18.440 --> 14:25.240]  and you think, I could do that, you probably can. Like that's, that's really, I know, it's
[14:25.240 --> 14:30.580]  sounds trite. But really, that's half a half of life and half of success in life is just
[14:30.580 --> 14:34.600]  deciding, looking at something and saying, I could do that, that nobody knows who I am.
[14:34.600 --> 14:37.880]  I've never done it before. But I think if I stepped in here, I could do this.
[14:37.880 --> 14:42.240]  Yeah. And it's funny you mentioned that because my wife and I have been watching this delightful
[14:42.240 --> 14:50.400]  little short run reality show called making it. And it's it's, it was on I think it was
[14:50.400 --> 14:58.040]  NBC. Amy Poehler and what the I can't remember his name right now. I you know what I was
[14:58.040 --> 15:02.440]  on that was Nick Offerman. Yeah, yeah. Yeah. I just saw that on the airplane the other
[15:02.440 --> 15:07.720]  day. It was I was went on a trip with my dad over the weekend for his birthday. And I didn't
[15:07.720 --> 15:10.880]  put the headphones on. But I know the show. I didn't watch the show because I didn't want
[15:10.880 --> 15:14.640]  to use their goofy headphones. But it was on the on the airplane.
[15:14.640 --> 15:18.720]  Yeah. And it's a lot of fun. The vibe in it is really positive. It's not sort of that
[15:18.720 --> 15:23.540]  cutthroat reality show. But But one of the things they sort of keep landing on as they're
[15:23.540 --> 15:29.920]  talking is we want people to feel like to look at this and say, Well, yeah, I can do
[15:29.920 --> 15:36.080]  that. Yeah, and exactly. And so and so that's sort of the flip side of it, right? Is, you
[15:36.080 --> 15:41.000]  know, I completely agree with you. If you if you look at something, and you think, Yeah,
[15:41.000 --> 15:46.200]  I could do that. Go ahead and do it.
[15:46.200 --> 15:50.480]  Just to touch again, I don't want to get too far away from it to go back and talk about
[15:50.480 --> 15:55.760]  the role that styled text played. And we could talk more about AppleScript in a bit and the
[15:55.760 --> 16:02.240]  weird bizarre unkillability of AppleScript. And what a weird vestige of the 90s it really
[16:02.240 --> 16:07.160]  is. But one of the things that in hindsight, when you look at it now compared to every
[16:07.160 --> 16:14.600]  other scripting language in use, that I'm aware of, is that its underlying backing store
[16:14.600 --> 16:21.760]  is not plain text. I mean, you do type text. And so if you could start from beginning to
[16:21.760 --> 16:26.640]  end and write an entire AppleScript right there in the script editor, you could do it.
[16:26.640 --> 16:34.640]  But then the second you hit enter, it compiles and gets stored in this weird style text format
[16:34.640 --> 16:39.360]  that isn't really text underneath anyway, because it gets translated to Apple events
[16:39.360 --> 16:44.640]  behind the scenes. And nobody would ever make a scripting language that worked like that
[16:44.640 --> 16:50.120]  today. But in the 90s, I think that seemed like a normal idea, because somehow it felt
[16:50.120 --> 16:54.680]  like that's where the world had gone, is we shouldn't be writing plain text. We should
[16:54.680 --> 16:58.120]  be doing something fancier, for lack of a better word.
[16:58.120 --> 17:05.280]  Yeah. And it's funny some of the parallels there, because my first job as a professional
[17:05.280 --> 17:15.080]  software engineer in the Mac industry was working on Think Pascal. And one of the intrinsic
[17:15.080 --> 17:27.760]  characteristics of it was that you could enter text into its editor, but... Audacity just
[17:27.760 --> 17:35.720]  bound up on me. I hope there's no gap there. We'll edit it out.
[17:35.720 --> 17:41.120]  You could enter... You were typing into the editor, but every once in a while, or if you
[17:41.120 --> 17:47.280]  press the enter key, it would take your text, it would tokenize it. And so the internal
[17:47.280 --> 17:54.520]  representation of your text was this sort of bizarre tokenized format. And Apple's script
[17:54.520 --> 18:00.480]  editor and all of the Apple script editors, including the excellent script debugger, do
[18:00.480 --> 18:06.200]  that. And it's just intrinsic to the way Apple script is. And sure, there are some advantages.
[18:06.200 --> 18:15.440]  It's very compact. And once upon a time, that mattered. But it is very strange.
[18:15.440 --> 18:20.560]  There's a great quote by Brian Kernighan. I'm trying to get it here so I don't screw
[18:20.560 --> 18:25.280]  it up. Here we go. Everyone knows... This is, you know, co-inventor of the C programming
[18:25.280 --> 18:30.760]  language. One of the great programmers in computer science history. Everyone knows that
[18:30.760 --> 18:35.280]  debugging is twice as hard as writing a program in the first place. So if you're ever as clever
[18:35.280 --> 18:40.680]  as you can be when you write it, how will you ever debug it? And anybody who's ever
[18:40.680 --> 18:46.080]  written any kind of program of any complexity whatsoever knows exactly what he's talking
[18:46.080 --> 18:52.080]  about. But I feel like that lesson didn't get learned. And maybe it'll never get fully
[18:52.080 --> 18:56.880]  learned. Everybody's there's always always youngins ready to make not not learn from
[18:56.880 --> 19:02.040]  the mistakes of their elders. But I kind of feel like the whole industry went too far
[19:02.040 --> 19:10.340]  in that direction with, like, just things like file formats and network protocols that
[19:10.340 --> 19:17.680]  weren't human readable, either like if it's a network protocol, just right over the wire,
[19:17.680 --> 19:21.880]  or if it's a file format, if you could just open it in a text editor and actually see
[19:21.880 --> 19:29.640]  the file format. And I feel like those formats got sort of fell into that trap that he's
[19:29.640 --> 19:33.640]  talking about, where if you make the file format as clever as you possibly can, how
[19:33.640 --> 19:37.520]  are you ever going to debug it when there's a problem, when there's a bug involving writing
[19:37.520 --> 19:40.520]  to the file format, if you can't just eyeball it?
[19:40.520 --> 19:48.480]  Why would you ever need to debug it if you got it right the first time? Yeah, and I think
[19:48.480 --> 19:53.960]  there's a few factors at work there, right? One of them is is definitely what a friend
[19:53.960 --> 20:04.260]  of mine used to call excessive cleverness. Another factor is that sometimes the technology
[20:04.260 --> 20:13.520]  is a product of the time in which it's invented. Back when Brian Kernighan was inventing C
[20:13.520 --> 20:20.120]  and programming on Unix, there were a lot of constraints. And these days, there are
[20:20.120 --> 20:26.600]  many fewer. So it's easy to think about making things more computationally complicated or
[20:26.600 --> 20:33.360]  making them take up more space, which is a weird thing to think about because text is
[20:33.360 --> 20:40.360]  not all that large. All right. And all that complicated in the grand scheme of things.
[20:40.360 --> 20:48.720]  So yeah, I kind of feel speaking of text being large, that leads me to XML. I kind of feel
[20:48.720 --> 20:57.040]  like that's one of those products of its time. So Mac OS 10, and to some extension, I think
[20:57.040 --> 21:05.280]  iOS too, just in a way that it inherited from Mac OS was really a product in a lot of ways,
[21:05.280 --> 21:08.760]  some of the decisions they made at a very low level were a product of the very late
[21:08.760 --> 21:15.320]  90s. And one of those was the ascendance of Java. And so they wasted in hindsight wasted
[21:15.320 --> 21:21.680]  an awful lot of time creating Java versions of the cocoa frameworks, because it seemed
[21:21.680 --> 21:28.520]  like this is what you had to do to be relevant. Java was so just it was just like madness,
[21:28.520 --> 21:34.200]  you know, the whole industry had been consumed by it. And then XML was the other one where
[21:34.200 --> 21:42.240]  all the config files in in Mac OS 10. For some definition of all that is like 99% are
[21:42.240 --> 21:48.400]  XML files under the hood or like gzipped XML files, you know, to understand what these
[21:48.400 --> 21:52.000]  property lists are, like, whenever you had to hack into your preferences or something
[21:52.000 --> 22:00.080]  like that, it's an XML file. And XML has really fallen out of favor in, in the real world.
[22:00.080 --> 22:04.680]  I mean, nobody really nobody that I know of does new stuff with XML, it's all if it's
[22:04.680 --> 22:09.000]  if it's there, and its legacy, it's there. But everybody is switched to primarily JSON,
[22:09.000 --> 22:14.040]  the JavaScript object notation. And one of the big differences between JSON and XML,
[22:14.040 --> 22:20.920]  even if you use it to represent the same thing, is there's an awful lot less visual noise
[22:20.920 --> 22:26.960]  in JSON. It's it's back to Hey, you could just like read this and understand. Oh, I
[22:26.960 --> 22:31.680]  see what's going on here. I see the format. Oh, that's an array. There you go. Here's
[22:31.680 --> 22:34.760]  here's, here's all the key values. Here's the values.
[22:34.760 --> 22:46.320]  Yeah, J Jason is, is super, super well suited for for key value transmission. And I think
[22:46.320 --> 22:51.220]  there's still a place in the world for XML. But, but, but for you, but for that sort of
[22:51.220 --> 22:57.040]  key value storage these days, there are definitely better things. And I think Jason is, is pretty
[22:57.040 --> 23:00.920]  much the way to go for that these days. Right. But when the app, you know, to bring it back
[23:00.920 --> 23:05.280]  to bb edit when the apps underlying thing is, this app is meant for reading plain text
[23:05.280 --> 23:13.640]  files of any format. When new things pop up, there's bb edit ready to go. Yep. All right,
[23:13.640 --> 23:18.560]  let me take a break here. Thank our first sponsor of the show. It is our good friends
[23:18.560 --> 23:29.520]  at eero e e r o. eero is Wi Fi done right. You go to the website, you figure out how
[23:29.520 --> 23:35.620]  big your house is, they've got a handy configuration tool, one rule of thumb might be one per floor.
[23:35.620 --> 23:40.060]  If you're, if your home layout is really, really sprawling across one floor, or you've
[23:40.060 --> 23:44.720]  got really thick walls, from one side of the house to the other, maybe two on one floor,
[23:44.720 --> 23:49.540]  but they'll help you out, you get a couple of these units, you plug one of them into
[23:49.540 --> 23:54.360]  your cable modem, the other ones, you just hook them up in the app couldn't be easier
[23:54.360 --> 23:59.560]  iPhone app right there. Very nice, by the way, very nice new version of the app that
[23:59.560 --> 24:03.600]  fully supports dark mode. And a couple of other things really like the new version of
[24:03.600 --> 24:09.100]  the Euro app. And, you know, if you've got like the situation where your basement say
[24:09.100 --> 24:13.520]  or your garage is a black hole before Euro, like that's that was a problem for me at my
[24:13.520 --> 24:18.240]  old house is the basement was a black hole for Wi Fi because the walls were too thick.
[24:18.240 --> 24:21.200]  And then you get in your car and you want to just download a podcast because before
[24:21.200 --> 24:27.480]  you go off, and now you can't get it because you don't have any signal. Yeah, hero is designed
[24:27.480 --> 24:31.580]  to get rid of that you do not have to be a system administrator couldn't be further from
[24:31.580 --> 24:35.960]  the truth. But you get all sorts of nice stuff in the app tells you all the devices in your
[24:35.960 --> 24:41.240]  house, which ones they're connected to. And it just fills your whole home with fast, reliable
[24:41.240 --> 24:48.200]  Wi Fi, eliminating poor coverage, dead spots buffering, also, really, really easy to do.
[24:48.200 --> 24:53.120]  It updates the software automatically. So like if over this holiday season, you're visiting
[24:53.120 --> 24:56.760]  family, maybe your folks or something like that, and they've got a really crappy Wi Fi
[24:56.760 --> 25:01.280]  situation at home, get them a couple of Euro base stations, you'll set it up before you
[25:01.280 --> 25:05.680]  even have dinner couldn't be easier really is a nice thing. Maybe for the less technically
[25:05.680 --> 25:10.500]  adept members of your family who don't even know that just using the Wi Fi that comes
[25:10.500 --> 25:16.560]  with their cable modem is kind of a cruddy solution. So anyway, I love it, you can hear
[25:16.560 --> 25:20.180]  me you're hearing me talk right now I'm not connected to ethernet right now talking to
[25:20.180 --> 25:25.400]  Rich Segal over Wi Fi get your Wi Fi fixed as soon as tomorrow. If you go to eero.com
[25:25.400 --> 25:30.760]  slash the talk show and enter that code the talk show all one word at checkout, you get
[25:30.760 --> 25:37.060]  free overnight shipping with your order. That's eero.com slash talk show. Use that code the
[25:37.060 --> 25:40.720]  talk show to get your era delivered with free overnight shipping plenty of time for the
[25:40.720 --> 25:47.200]  holidays. Take them home, fix your folks Wi Fi. But you got to use that URL eero.com slash
[25:47.200 --> 26:01.660]  the talk show. So let's talk let's fast forward. Let's talk BB at at 13. Let's do it. Dark
[26:01.660 --> 26:09.240]  mode. And now you've had dark mode support, I think since Mac OS when it went when the
[26:09.240 --> 26:12.360]  last version of Mac OS had at first that's one of those weird things that came to the
[26:12.360 --> 26:22.800]  Mac before it came to to iOS. And BB edits sort of backed its way into dark mode support
[26:22.800 --> 26:28.120]  where even before the OS officially had this feature called dark mode where you just toggle
[26:28.120 --> 26:36.980]  a switch in system preferences. BB edit as a text editor has had complete control over
[26:36.980 --> 26:42.120]  the coloring of of your text. So if you wanted to, as a lot of programmers seem to want to
[26:42.120 --> 26:47.760]  do, and I've long done, if you want to program with a dark background and light text, BB
[26:47.760 --> 26:54.160]  edit has supported that for a very long time. And I think it was sort of that sort of where
[26:54.160 --> 26:57.040]  BB edits dark mode support kind of backed in.
[26:57.040 --> 27:03.260]  Yeah, that's right. And and so what, what sort of happened there? And I kind of say
[27:03.260 --> 27:10.720]  sort of because, well, that's how it was. It just sort of happened. Was that Mac OS,
[27:10.720 --> 27:19.440]  I think it was 1013 had sort of a very, very embryonic version of of the appearance support
[27:19.440 --> 27:26.200]  that first appeared in 1014. Right. Because 1014 was the first OS that had a user visible
[27:26.200 --> 27:34.440]  dark mode. But it turned out that in 1013, it was possible to set a dark appearance for
[27:34.440 --> 27:42.600]  your Windows and UI Chrome. And, and so once I figured that out, I started tinkering and
[27:42.600 --> 27:48.900]  realize that if you were using a dark background color scheme, then what I could do was set
[27:48.900 --> 27:54.280]  the surrounding window to be dark as well and sort of make it make it a little bit less
[27:54.280 --> 28:02.040]  jarring to use. Right. And that persisted for a while. And I sort of kept that hack
[28:02.040 --> 28:09.400]  in place for longer than I wanted to because we had to keep supporting 1013 and older OS's
[28:09.400 --> 28:17.080]  for a while. When BB edit 13 shipped, I looked and I said, okay, let's impose some sanity
[28:17.080 --> 28:25.280]  here. We've got Catalina coming up, which has automatic switching. And so what I did
[28:25.280 --> 28:30.840]  was I kind of turned the model on its head. So instead of yanking the application appearance
[28:30.840 --> 28:38.160]  around to match the color scheme, I split it apart and I said, okay, you can have one
[28:38.160 --> 28:42.060]  appearance for light mode and one appearance for dark mode, one color scheme for light
[28:42.060 --> 28:49.880]  mode, one color scheme for dark mode. So then whenever you switch, it just follows. I will
[28:49.880 --> 28:55.880]  tell you, and this is something I mean, I've used, I don't want to go too far of a tangent
[28:55.880 --> 29:04.200]  with this, but I've used BB edit in a, in a roughly dark mode fashion for a long time.
[29:04.200 --> 29:08.320]  And primarily for me, I've always thought as an app that it's always open and I'm often
[29:08.320 --> 29:12.480]  using all day, every day, to some degree. Usually if I have a longer article and during
[29:12.480 --> 29:18.600]  fireball and doing it and BB edit, I've always found that it, it, with most of the Chrome
[29:18.600 --> 29:23.540]  in the OS being the traditional white backgrounds, like gray backgrounds, having that one dark
[29:23.540 --> 29:30.820]  window or a couple of dark windows that pop out behind other windows, it's just helpful
[29:30.820 --> 29:37.800]  in that, uh, sort of a Fitz's law sort of way where there's this nice big visual rectangle.
[29:37.800 --> 29:42.240]  And I know that if I click the mouse anywhere on it, BB edits back in the forward, back
[29:42.240 --> 29:47.560]  in the forefront. If I happen to have my fingers on the trackpad or the mouse at the moment,
[29:47.560 --> 29:51.520]  right? Like if you get in the flow and if your hands are on the keyboard, you want to
[29:51.520 --> 29:55.040]  switch to the other app with the keyboard, usually command tab or something like that.
[29:55.040 --> 29:58.080]  And if your hands are on the mouse, you want to, you want to keep it on the mouse. You
[29:58.080 --> 30:03.100]  just don't want to switch contexts like that. And dark mode's always, always been, I've
[30:03.100 --> 30:10.720]  always enjoyed BB edit like that. Um, but the other thing that sounds like a terrible
[30:10.720 --> 30:14.600]  pun that's been eyeopening to me recently is I've been going through some visual issues
[30:14.600 --> 30:25.480]  and including, um, cataracts in both eyes. And it, it's truly an accessibility issue.
[30:25.480 --> 30:31.280]  And there were moments months ago or not too far ago where with different types of cataracts
[30:31.280 --> 30:36.160]  in both my left and right eye, I literally found myself unable to read black text on
[30:36.160 --> 30:44.240]  a white background. It just looked like gray text that was just washed out and dark mode
[30:44.240 --> 30:49.180]  was a revelation. And because I'd switch and I'm not really like on iOS, I'm not really
[30:49.180 --> 30:53.120]  a fan of it aesthetically, but I'd switched my phone to dark mode and I could just, I
[30:53.120 --> 30:57.940]  could read, I didn't have to bump the text size up to, I like run it like one click over
[30:57.940 --> 31:02.380]  the default, but that was fine as long as it was dark mode. It was something to do with
[31:02.380 --> 31:07.960]  the way that the cataract reflects, reflects light, that having a bright white background
[31:07.960 --> 31:12.960]  just blurred the text out hopelessly. And so now all of a sudden light bulb goes off
[31:12.960 --> 31:20.040]  in my head and I realized, well, that's why the Mac OS and iOS have had that feature for
[31:20.040 --> 31:26.820]  years and years in the accessibility preferences to completely reverse the colors of the screen,
[31:26.820 --> 31:34.460]  which was sort of like a poor man's dark mode, but it was aesthetically displeasing because
[31:34.460 --> 31:40.040]  some colors, you know, white goes to black. Well, that's fine, but you know, blue go into
[31:40.040 --> 31:44.560]  orange and, and you know, different colors of reverse and then they've added, you know,
[31:44.560 --> 31:47.800]  and they've kept at it. And it's, it's one of those ways where I've always been an advocate
[31:47.800 --> 31:51.940]  for accessibility and I think Apple has done such a commendable job and they've added some
[31:51.940 --> 31:57.600]  nice features in recent years where they try to be smart about what they reverse and what
[31:57.600 --> 32:03.120]  they don't. So if you're reading a news article in the New York Times, they'll reverse the
[32:03.120 --> 32:08.340]  color. If you have that mode on, go from black to white, white to black, but they won't do
[32:08.340 --> 32:12.800]  the photographs because you know, a photograph that's completely reversed looks like an image
[32:12.800 --> 32:20.180]  negative. But having proper dark mode that that is aesthetically pleasing and that the
[32:20.180 --> 32:25.200]  designer and developers of the app have looked at and chosen colors and button colors and
[32:25.200 --> 32:32.400]  text colors to have everything look right when I needed it for accessibility. It honestly
[32:32.400 --> 32:36.680]  was like, I just felt like the luckiest SOB on the planet because if it had happened 10
[32:36.680 --> 32:39.760]  years ago, maybe I would have been out of luck.
[32:39.760 --> 32:48.360]  Yeah, it's all true. I, I agree with all of it. And in that, in a practical sense, dark
[32:48.360 --> 32:56.000]  mode really is an accessibility boost. It, for most people, you look at it and, and either
[32:56.000 --> 33:00.520]  you, you need it because you work in an open plan office with horrible fluorescent lights.
[33:00.520 --> 33:06.320]  So everybody turns the lights off and it's dark. And then, and then a conventional light
[33:06.320 --> 33:13.520]  mode appearance just burns your eyes out. But yeah, it's, it's a very real issue. And,
[33:13.520 --> 33:20.720]  and so for us, yeah, it's, it was just nice to be able to kind of make it all blend together
[33:20.720 --> 33:26.480]  smoothly and, and the designer who did the, the updated color schemes for BB. And I think
[33:26.480 --> 33:34.320]  it was, I think it was BB at 11 where we introduced the new color scheme model. Just did a terrific
[33:34.320 --> 33:35.320]  job.
[33:35.320 --> 33:39.640]  Yeah. Yeah. A lot of, you know, and you can go everything from, you know, like a daring
[33:39.640 --> 33:44.080]  fireball scheme where it's sort of dark with light text or very dark, like black with white
[33:44.080 --> 33:51.520]  text and, and, and stuff like that. Here's a BB edit story. I have this in my show notes.
[33:51.520 --> 34:02.400]  I got to tell just recently, right when I decided to have you on I was writing my Mac
[34:02.400 --> 34:08.200]  book pro the 16 inch Mac book pro review. So that's recently, I think it was about what
[34:08.200 --> 34:13.640]  three weeks ago, somewhere, somewhere around there. Tight turnaround. You know, we got
[34:13.640 --> 34:21.240]  these, those of us who got the review units. I think we had like, like 14 hours before
[34:21.240 --> 34:26.000]  the embargo dropped. So it's not really, you know, quote unquote review. You can't, nobody's
[34:26.000 --> 34:32.040]  pretending that that's a full fledged review, but you can give first impressions. And I'm
[34:32.040 --> 34:37.640]  not in a race for clicks or hits. And so I'm not hell bent on hitting the embargo. But
[34:37.640 --> 34:42.100]  I do know that people wanted to pre order them. And you know, and that was so that was
[34:42.100 --> 34:46.580]  my goal writing the thing is okay for the readers who are thinking about jumping on
[34:46.580 --> 34:52.160]  this right away, because they've been waiting for an updated keyboard design. And maybe
[34:52.160 --> 34:55.880]  they, you know, they've heard about this bigger 16 inch screen. And so they've been waiting
[34:55.880 --> 35:06.360]  for what do they want to know, that's my attitude. So I'm writing it. And the first thing I did
[35:06.360 --> 35:12.720]  was maybe we had two days, but the first time I tried to set it up, I wanted to use not
[35:12.720 --> 35:17.160]  time machine, what's the thing called migration assistant to get Oh boy to get set up? Well,
[35:17.160 --> 35:23.320]  I'll tell you what now. So I'm I've been negative on I've skipped migration assistant for years
[35:23.320 --> 35:27.960]  and years and years. And a couple of years ago on my show, I tried it on a lark, not
[35:27.960 --> 35:31.640]  with a machine that I bought for myself, but with a review unit from Apple. And I thought,
[35:31.640 --> 35:35.720]  Well, what the hell? It's not even my machine. I'll use migration assistant. It was amazing.
[35:35.720 --> 35:41.600]  And it moved over stuff that I couldn't believe it moved over like CPN modules for Pearl that
[35:41.600 --> 35:48.440]  I installed at the command line, you know, using pseudo stuff that was far outside my
[35:48.440 --> 35:53.560]  my users home directory. And it all just moved over. It really has been and I got a couple
[35:53.560 --> 35:58.400]  of I got some feedback from some people that there's, there's been a very small but dedicated
[35:58.400 --> 36:03.840]  team within Apple that really has put an awful lot of work into migration assistant without
[36:03.840 --> 36:10.600]  much recognition outside. And I think there's a lot of old timers like me, who back in the
[36:10.600 --> 36:14.960]  day tried either when it was called migration assistant or whatever the old name was tried
[36:14.960 --> 36:20.760]  it. Look at the results. Wipe the hard drive start over from scratch and start you know,
[36:20.760 --> 36:24.320]  I used to maintain this big long checklist of everything to install what to do when I
[36:24.320 --> 36:31.720]  get a new machine. I use migration assistant now. But it was slow and and that the reason
[36:31.720 --> 36:37.060]  it was slow and it's, you know, again, I should have known better. But basically, if you're
[36:37.060 --> 36:42.180]  using USB three, it's pretty slow, even if it's like from an SSD. And so instead of going
[36:42.180 --> 36:49.080]  machine to machine, I went from an SSD super duper clone to this machine, and it was taking
[36:49.080 --> 36:56.680]  forever. And the progress bar was I know that it's like a long running gag that progress
[36:56.680 --> 37:01.840]  bars are some of the hardest to write code and don't get a lot of love. But it was like,
[37:01.840 --> 37:05.440]  it only updated like twice. It was like a seven hour migration. And it like there were
[37:05.440 --> 37:10.500]  like three times where it updated. So it was like stuck at seven hours for like two hours.
[37:10.500 --> 37:16.920]  And I thought maybe it was stuck. Lies, damn lies and progress bars. Exactly. Well, anyway,
[37:16.920 --> 37:24.480]  long story short, it I let it go overnight. It's it's the seven hours thing must have
[37:24.480 --> 37:29.480]  been right. It just wasn't updating. There's all my stuff. I've got a working home directory.
[37:29.480 --> 37:34.360]  I've got all of the apps that I want to use. I type command space and launch bar opens
[37:34.360 --> 37:39.960]  and I type BB and BB edit launches. And it's got all my stuff. It looks like my BB edit,
[37:39.960 --> 37:45.880]  you know, the preferences, I guess made it across. And there I go, I'm off to the races
[37:45.880 --> 37:51.520]  and I'm writing my review. And it got late in the night, you know, I think it was like
[37:51.520 --> 37:57.400]  an 8am Eastern Time deadline. It's like four in the morning. I'm proofreading. I'm too
[37:57.400 --> 38:03.400]  old to be proofreading at four in the morning. It's I'm tired. And I don't know what I was
[38:03.400 --> 38:07.840]  thinking. I thought, well, I should at least unplug this SSD and unplug the SSD and BB
[38:07.840 --> 38:14.000]  edit disappeared. Because it was running off the SSD. I hadn't installed BB edit on the
[38:14.000 --> 38:18.920]  internal drive. When I typed command space launchpad found it in the applications folder
[38:18.920 --> 38:24.920]  on the SSD. That was a super duper clone of the other article. And I hear the whole article
[38:24.920 --> 38:29.600]  was just about done. I'm in a proofreading stage, and it's four in the morning, and the
[38:29.600 --> 38:34.740]  whole goddamn thing disappeared. And you're screaming internally, either either internally
[38:34.740 --> 38:40.160]  or out or outwardly, I would call it more of a flop sweat. I would say it was a flop
[38:40.160 --> 38:46.600]  sweat. But I think to myself now I haven't I haven't thought that I might have lost data
[38:46.600 --> 38:53.000]  and BB edit in years. I haven't even I guess I've had some crashes, but I can't remember
[38:53.000 --> 38:57.680]  how, you know, like running beta versions, of course. But I haven't had a moment like
[38:57.680 --> 39:03.840]  that in BB edit in a very long time. And I thought, Well, I have faith in BB edit. And
[39:03.840 --> 39:07.480]  but I honestly couldn't remember I couldn't remember if I hit command s and I probably
[39:07.480 --> 39:13.160]  had because you know, if you're of a certain age, you just hit command s while you're idly
[39:13.160 --> 39:20.400]  blinking. Right. I launched BB edit again, actually, I copied it over from the SSD, I
[39:20.400 --> 39:25.200]  was like, Oh, I better put it in app local applications. I launched BB edit, and boom,
[39:25.200 --> 39:30.560]  there's my article back up. And I insertion point blinking on the sentence that I was
[39:30.560 --> 39:35.080]  struggling over how to fix didn't lose a word.
[39:35.080 --> 39:42.980]  Beautiful thing that that auto save auto recovery stuff really, you know, it goes back to the
[39:42.980 --> 39:51.680]  days when laptops in particular, tended to unexpectedly go to sleep. Yeah. And not wake
[39:51.680 --> 39:59.040]  up, especially if you were running Mac OS X, early versions. It was it was a thing remember?
[39:59.040 --> 40:08.400]  Yeah. And, and, and it goes back to the days before the OS itself had any sort of restoration
[40:08.400 --> 40:16.820]  mechanics built in and and we just said, you know, we want people to not have to worry
[40:16.820 --> 40:23.400]  if something crashes, we have we want people to, to just start up and pick up where they
[40:23.400 --> 40:27.360]  let wherever they left off. Well, I didn't have time machine setup on this machine, because
[40:27.360 --> 40:31.280]  it was something I just set up. And the only external drive I had set up was the super
[40:31.280 --> 40:36.280]  duper clone from the other machine, which I don't even know why why I was running. I
[40:36.280 --> 40:41.440]  don't even know that doesn't seem like me. You know, it doesn't. When I'm on a laptop,
[40:41.440 --> 40:45.720]  it doesn't seem right to just keep keep an SSD connected if you're not actively using
[40:45.720 --> 40:51.340]  it like to do the super duper backup or to do the restore or if you happen to be using
[40:51.340 --> 40:56.120]  it just because you've run out of internal storage and you have a lot large, you know,
[40:56.120 --> 41:00.360]  Lightroom project or video project or something like that, that you need an external drive
[41:00.360 --> 41:04.560]  for but I was under the impression I didn't need it. I was I thought, I don't know why
[41:04.560 --> 41:08.040]  I didn't eject it. I don't know what I was thinking. But for some reason, impulsively
[41:08.040 --> 41:13.160]  at four in the morning, I unplugged the drive. Didn't lose didn't lose the volume backup
[41:13.160 --> 41:20.240]  before unplugging it did not lose a word. And boy, I wish it made me wish not for the
[41:20.240 --> 41:24.160]  first time in my life that BBN it was a physical object that I could just give a pat on the
[41:24.160 --> 41:32.760]  head to say thank you. Well, you know, maybe there's an a product idea in there because
[41:32.760 --> 41:39.320]  we've got a merchandise store now. And when you said the physical object I instantly flash
[41:39.320 --> 41:46.880]  flashed to the weighted companion cube from portal. Maybe there needs to be a weighted
[41:46.880 --> 41:54.480]  BB edit cube. I will be at a plush. It's such a great feature. It really is. And it's been
[41:54.480 --> 42:02.000]  there for a while. And I just had this thought I think BBN it will have my back. And it did.
[42:02.000 --> 42:08.280]  Yeah. Yeah, that was something back in the day. I know my friend Michael lop has said
[42:08.280 --> 42:15.400]  this to me too, that it's like he he he have rans and repose rans.com fame, but he likes
[42:15.400 --> 42:23.860]  to he he likes to identify people of his generation or older by whether they have the idle habit
[42:23.860 --> 42:29.660]  of command s when they like without even thinking while they're while they're like pausing between
[42:29.660 --> 42:34.720]  sentences or lines of code or something like that. Yeah, it's it's what Jim Korea used
[42:34.720 --> 42:39.060]  to call the safe Twitch. Yes, the safe Twitch, right? It's just something to do. Sometimes
[42:39.060 --> 42:43.920]  I'll just sit there and hit command s a couple times, you know, just save, save, save early
[42:43.920 --> 42:50.560]  save often. Yeah. When you think about it, and I think I said, like, you know, there's
[42:50.560 --> 42:55.120]  a lot of nostalgia in this episode talking about the old days of BB edit, but, and BB
[42:55.120 --> 42:59.320]  it was always good at that BB it was always a stable application. But, you know, like
[42:59.320 --> 43:04.840]  you said something, you know, it's certainly beyond the purview of an app, to be able to
[43:04.840 --> 43:11.200]  say whether or not the power book is going to successfully wake wake from sleep. It was
[43:11.200 --> 43:16.280]  and and we used to we we'd console ourselves as Mac users with Well, at least we're not
[43:16.280 --> 43:21.320]  on Windows where it you know, really does seem like you're, you know, Russian let type
[43:21.320 --> 43:25.960]  odds as to whether the laptops going to wake up when you when you open the lid.
[43:25.960 --> 43:31.640]  Yeah, but you know, I like to think that if, if in a different timeline, we were doing
[43:31.640 --> 43:35.800]  Windows software, we do it the same way.
[43:35.800 --> 43:42.160]  All right, I was talking about
[43:42.160 --> 43:49.840]  Apple script before. And I want to get back to that because I feel like
[43:49.840 --> 43:55.560]  BB edit has always has had good support for Apple script from about as early on as you
[43:55.560 --> 43:59.840]  could have expected it to, you know, I think I'm dating myself here, but I'm pretty sure
[43:59.840 --> 44:08.060]  Apple script was system 7.1. Or maybe it was 7.5. But I think it was 7.1.
[44:08.060 --> 44:16.360]  It's always been the the most supported automation tool at the system level.
[44:16.360 --> 44:20.960]  And things that you could argue are maybe equivalent to Apple script in their support,
[44:20.960 --> 44:25.960]  like and I would say automator would be the more modern equivalent. But again, you got
[44:25.960 --> 44:30.520]  to put quotes around modern for automator at this point. But that was largely in a lot
[44:30.520 --> 44:34.840]  of ways was largely built on top of Apple script. There's a lot of a lot of the stuff
[44:34.840 --> 44:39.200]  that you can do an automator is based you know, for apps to support it. It's still based
[44:39.200 --> 44:42.280]  on the same underlying Apple event stuff.
[44:42.280 --> 44:52.760]  Yep. And Apple and Apple events on Mac OS X are implemented using mock IPC. Which so
[44:52.760 --> 45:02.560]  go go figure that which dates back to 1988, I think or 89. So go figure that one out.
[45:02.560 --> 45:10.760]  It does seem to be an end. I always I fear for it. I think everybody who cares about
[45:10.760 --> 45:17.440]  it fears for the future of Apple script. It doesn't seem like the type of technology that
[45:17.440 --> 45:25.680]  Apple really cares about. There's been a vague Sammy now we're 17 to 20 years depending on
[45:25.680 --> 45:30.640]  where you want to count the origins of Mac OS X. You know, as a shipping product, it's
[45:30.640 --> 45:34.760]  I guess, around 17 years, certainly is something that's been in development. It's more like
[45:34.760 --> 45:46.840]  2223 years, that's a long time. It never felt like the next side really had all that much
[45:46.840 --> 45:54.000]  interest in Apple script. You know, and basically the story, you know, to oversimplify it was
[45:54.000 --> 45:58.680]  that there are so there were so many professional Mac users in production environments who had
[45:58.680 --> 46:05.780]  workflows that depended on it, that if Apple had any thought at the beginning of axing
[46:05.780 --> 46:09.820]  it in that great, you know, and it was the right thing to do to go through project by
[46:09.820 --> 46:17.080]  project and do hard things like kill the Newton, for example, that it the company needed to
[46:17.080 --> 46:21.280]  focus and certain things. I mean, it in a sense, it's tragic, because the Newton was
[46:21.280 --> 46:26.660]  kind of beautiful in certain ways. There are other technologies that I don't know that
[46:26.660 --> 46:33.040]  anybody really had much affection for. And I don't, it wasn't, wasn't weren't many tears
[46:33.040 --> 46:42.560]  shed for getting rid of open doc. I don't think Sorry, I can't help but laugh, right.
[46:42.560 --> 46:46.960]  I know there was that famous video of a guy who was an open doc developer given jobs,
[46:46.960 --> 46:52.800]  the business at WWDC in like 97. And jobs had this wonderful answer to the gentleman.
[46:52.800 --> 46:57.360]  I think that might have been the one guy who really, really was upset that Apple killed
[46:57.360 --> 47:03.320]  open doc. Apple script is sort of this thing that that won't die because people need it
[47:03.320 --> 47:08.680]  but doesn't really move forward because Apple doesn't care about it enough. It occupies
[47:08.680 --> 47:15.400]  a very strange place in the Mac power users tool belt, in my opinion.
[47:15.400 --> 47:24.400]  I agree with that. And to throw another wrinkle into it, I think the security folks at Apple
[47:24.400 --> 47:33.360]  hate it. Because to them, I believe, because nobody has ever said as much to me, but it
[47:33.360 --> 47:40.120]  seems very clear. They consider Apple script a gigantic security hole. Underneath it, they
[47:40.120 --> 47:45.840]  consider Apple events, a gigantic security hole, they consider cross application IPC
[47:45.840 --> 47:55.400]  to be a gigantic security hole. And they, I think, would be delighted if the whole thing
[47:55.400 --> 47:58.480]  just went away. Yeah, I get that impression too. And they're
[47:58.480 --> 48:05.280]  good people. And if that's their job is to be the security people. It is, you know, like,
[48:05.280 --> 48:11.280]  I say this with no animosity towards them, even though I hope that they continue to get
[48:11.280 --> 48:16.240]  overruled, because I get it that that's their job, right? Your job as the security person
[48:16.240 --> 48:22.480]  is to raise those things, right? Yeah, absolutely. You know, the Secret Service's job isn't to
[48:22.480 --> 48:29.600]  make sure that, you know, the sightlines for the cameras from CNN are at an optimal angle,
[48:29.600 --> 48:33.720]  right? The security, you know what I mean? That's not their job, you know, and if their
[48:33.720 --> 48:38.440]  answer to CNN is no, your your cameras are going down here in this pit, and that's it,
[48:38.440 --> 48:44.520]  you know, it's it's for security reasons, you know, it's. But I do I do get that impression
[48:44.520 --> 48:50.320]  that IPC as a whole that you can go down the stack and that the whole thing is sort of
[48:50.320 --> 48:55.760]  viewed very skeptically. That yeah, it's it's the job of the security
[48:55.760 --> 49:03.320]  folks to envision the worst case scenario. But as as long as I can remember, and I, I
[49:03.320 --> 49:09.600]  can I can remember a long time at this point. Here's another flashback for you working on
[49:09.600 --> 49:22.080]  Mailsmith and PGP support in the late 90s. And if there has always been an intrinsic,
[49:22.080 --> 49:30.160]  I believe an intrinsic conflict between security and usability, use user experience. Yeah.
[49:30.160 --> 49:37.840]  And that there has to be a balance there. Yeah. And so and it's a very, very difficult
[49:37.840 --> 49:44.080]  line to walk. I do not envy the people who have to make decisions in either the security
[49:44.080 --> 49:50.480]  group or the user experience group, because you just know that if you tighten one screw,
[49:50.480 --> 49:55.720]  you're going to hurt a lot of people. Yeah. And it's I, I feel like it's a recurring theme
[49:55.720 --> 50:03.680]  in my writing is that I feel I've always felt like I have a good sense of fairness towards
[50:03.680 --> 50:07.920]  viewing trade offs and appreciating the other side of an argument, whereas I feel like an
[50:07.920 --> 50:12.920]  awful lot of people who care passionately about something really latch on to their side
[50:12.920 --> 50:18.920]  of of the trade off argument. And I just wrote about this today, I linked to I fix its teardown
[50:18.920 --> 50:25.600]  of the new Mac Pro. And they gave it a nine out of 10 for repair ability by all accounts,
[50:25.600 --> 50:31.920]  it is every bit as modular as as Apple promised. And you know, there's a bit of tongue in cheek
[50:31.920 --> 50:35.640]  from the I fix it guys, and I get it. And it's funny. But like they really, you know,
[50:35.640 --> 50:39.600]  they were making hay over the fact that you can literally put in your own RAM using nothing
[50:39.600 --> 50:43.720]  but a pair of opposable thumbs. You don't even you don't even do a screwdriver to get
[50:43.720 --> 50:48.520]  to where the RAM is. Isn't that great? And it really is great. And there one, they gave
[50:48.520 --> 50:51.480]  it a nine out of 10. And they didn't say why they didn't give it 10 out of 10. But the
[50:51.480 --> 50:58.240]  only real knock they had against the whole system is that the system's SSD drive isn't
[50:58.240 --> 51:07.480]  user swappable, because it's on the same chipset as the whole T two system, which is the the
[51:07.480 --> 51:13.800]  little iOS running on a system on a chip that for the Mac Pro, there is no touch bar, and
[51:13.800 --> 51:19.640]  there is no touch ID, but it's the same system that handles that there is a secure enclave.
[51:19.640 --> 51:23.680]  And you know, they have a wonderfully human readable white paper on it that I think I
[51:23.680 --> 51:27.760]  linked to today. And you can read about it. And it really is an interesting system. And
[51:27.760 --> 51:35.500]  it really is a very interesting approach to security and being able to validate the boot,
[51:35.500 --> 51:42.800]  the system booting up and evolved in the various ways that a bad actor could screw with your
[51:42.800 --> 51:47.280]  computer to get something if they can get something in there early on in the boot process,
[51:47.280 --> 51:52.840]  and all things over. And so being able to verify that is a great, great thing. But it
[51:52.840 --> 51:57.760]  really is a huge trade off in the usability of the system as a modular thing where let's
[51:57.760 --> 52:06.080]  say you you spend $12,000 on this configuration now and two years from now, the price of eight
[52:06.080 --> 52:11.440]  gigabyte or eight terabyte SSDs drops significantly that you can't just say, Well, I'll get one
[52:11.440 --> 52:17.040]  of those eight terabytes system SSDs and swapping it that you can't do that it is a huge debt
[52:17.040 --> 52:22.280]  that's usability for the type of people who buy Mac pros. It's a direct trade off. Yep.
[52:22.280 --> 52:26.520]  And I think that's what costs them the one point where they fix it. Yeah. Was that that
[52:26.520 --> 52:32.480]  one issue alone? There's also in to me, we've never really gotten clarity on this on the
[52:32.480 --> 52:39.940]  scripting, you know, the other scripting story on Mac OS 10 Mac OS 10 has always been this
[52:39.940 --> 52:46.800]  Unix layer. And when Mac OS 10 Mac OS 10 was new, when it was even before it came out,
[52:46.800 --> 52:53.360]  there was like a whole page on apple.com slash Mac OS 10 that had this big, you know, in
[52:53.360 --> 52:58.660]  the style of the day, a very skeuomorphic three Dement fakes three dimensional steel
[52:58.660 --> 53:07.640]  plate with pristine screws that say Unix, this is secure, it's secure, it is robust.
[53:07.640 --> 53:13.200]  And at the time in 2002, secure meant things like a protected memory system. So that when
[53:13.200 --> 53:18.400]  an app, you know, if one app went down, it had no chance of bringing down, you know,
[53:18.400 --> 53:22.440]  the whole Windows Server, whatever the equivalent was on on the old Mac OS, you know, where
[53:22.440 --> 53:28.540]  an app could scribble over the wrong part of memory, and boom, your whole machines wedged.
[53:28.540 --> 53:35.600]  That was what we considered security, or the fact that you could have, you know, two users
[53:35.600 --> 53:41.460]  on a system at home. And the operating system really did keep one user from writing over
[53:41.460 --> 53:46.760]  the files of the other, whereas on the classic Mac OS, that was always a bit of a bit of
[53:46.760 --> 53:57.080]  a handshake deal. I won't look at your stuff if you don't look at mine. Yeah. But the other
[53:57.080 --> 54:01.140]  that we I don't think we've really gotten an answer on this, but I feel like it's up
[54:01.140 --> 54:05.520]  in the air. And I know that there's a lot of pessimists out there on Apple's commitment
[54:05.520 --> 54:11.440]  to the pro market, but and software wise, I worry, but you look at the hardware they've
[54:11.440 --> 54:16.520]  come out with in the last year or two years, really starting with the iMac Pro, which is
[54:16.520 --> 54:20.720]  genuinely professional hardware. Now they're selling workstations that can be configured
[54:20.720 --> 54:27.760]  up to $52,000. That's it. That's a serious commitment to professional computing on the
[54:27.760 --> 54:34.020]  hardware side. But there was this announcement. I forget if it happened at wds, wd, WWDC this
[54:34.020 --> 54:38.280]  year or like in a small footnote afterwards. I know it wasn't in the keynote, but they
[54:38.280 --> 54:45.400]  said something to the effect of that the Unix scripting layers may not be long for the world,
[54:45.400 --> 54:49.360]  or at least in terms of being built into the system and that you might have to download
[54:49.360 --> 54:57.520]  them yourself. That's right. That lines up with my own recollection of them specifically
[54:57.520 --> 55:04.760]  saying, I think it was in the Catalina change notes that the Unix scripting languages were
[55:04.760 --> 55:16.000]  deprecated, which is a word they like to throw around. And I read maybe a little bit more
[55:16.000 --> 55:24.240]  into that than I should have, but my sense of that is that they simply on the one hand
[55:24.240 --> 55:31.560]  recognized that they were never really very good about keeping those tools up to date.
[55:31.560 --> 55:37.040]  The versions that Mac OS shipped with were always out of date and they rarely got updated
[55:37.040 --> 55:45.400]  when they were maintenance patches to the OS. And they were very difficult to keep up
[55:45.400 --> 55:51.760]  to date on your own unless you started using something like Homebrew, which a lot of people
[55:51.760 --> 55:56.400]  started doing well. So I use it. I like it, but I know a lot of people have strong feelings
[55:56.400 --> 56:03.720]  against it. They don't trust it. They've been bitten in the past by it. And there's a certain
[56:03.720 --> 56:07.760]  however much behind Apple's versions of things like this. We're talking about languages like
[56:07.760 --> 56:14.480]  Pearl and Python and, and, and Ruby, of course. And you know, Ruby is a great story of that
[56:14.480 --> 56:22.360]  because Pearl and Python were already not old, old, but you know, they were in established
[56:22.360 --> 56:30.920]  established in 2002, the whole rise of Ruby happened during the Mac OS 10 era. And, and
[56:30.920 --> 56:35.980]  really felt, you know, part of it was that an Apple, you know, got a version of Ruby.
[56:35.980 --> 56:39.240]  And I know there's, you know, every one of these scripting languages, but Ruby, I think
[56:39.240 --> 56:45.560]  sort of maybe, maybe more so than others had some weird issues where, you know, the newest
[56:45.560 --> 56:50.960]  version was not quite fully compatible with the one that Apple had included, but you could,
[56:50.960 --> 56:54.480]  you could get it there, but, but you could count on Ruby being there, even when Ruby
[56:54.480 --> 56:59.600]  was a relatively new language that had taken off. And the fact that it was just there and
[56:59.600 --> 57:07.480]  you didn't really have to do anything complicated at the, at the command line really it's just
[57:07.480 --> 57:13.600]  a feather in Mac OS X hat, I think, and agreed. Yep. And it was also at a time, you know,
[57:13.600 --> 57:21.240]  again, not me and you for sure, but an awful lot of our of our friends who were new, new,
[57:21.240 --> 57:26.280]  new to the platform in the mid two thousands came because of Ruby, it was Ruby that drove
[57:26.280 --> 57:30.280]  them to come to the, cause that was what they were writing for their work, like Ruby on
[57:30.280 --> 57:35.120]  rails server side stuff. And what, what do you want on your desk? If that's what you're
[57:35.120 --> 57:41.600]  doing, you wanted a Mac, you wanted Mac OS X. Yep. The thing that's unclear to me, and
[57:41.600 --> 57:46.720]  I've asked around, and as far as I can tell, I think that it's one of those things with
[57:46.720 --> 57:52.880]  Apple where they won't even say that we don't know. They'll just, they just have a non answer.
[57:52.880 --> 57:59.480]  But basically I think what do they mean by an external download? And cause there's two,
[57:59.480 --> 58:03.240]  two ways that can go. The first would be what you were talking about where you're completely
[58:03.240 --> 58:08.000]  on your own. There is a terminal app and you have access to the, you know, Unix command
[58:08.000 --> 58:12.200]  line, but you've got to start from scratch with, and, and Homebrewed certainly makes
[58:12.200 --> 58:19.480]  it a lot easier than downloading a tar ball and compiling the whole thing yourself. Because
[58:19.480 --> 58:22.700]  you know, then it raises the question of how do you get the developer tools? Now you've
[58:22.700 --> 58:29.120]  got a eight gigabyte X code download just to, just to get a compiler. The other one
[58:29.120 --> 58:35.520]  though would be if Apple makes these tools part of the developer tool package, which
[58:35.520 --> 58:40.000]  they've always done, right? So you install X code and then there's a menu command you
[58:40.000 --> 58:45.220]  can do that will install the, the command line version of all the various compilers
[58:45.220 --> 58:51.760]  and you know, there's other tools that are in there, but you don't have to do the whole
[58:51.760 --> 58:57.120]  make test installed command line dance to get them. They're officially supported. They
[58:57.120 --> 59:01.320]  come from Apple in a real package installer and basically all you have to do is authorize,
[59:01.320 --> 59:05.760]  you know, say, okay, I'm an admin on this Mac, go ahead and install them. If that's
[59:05.760 --> 59:10.840]  what they do with Pearl and Python and Ruby and its various friends, I guess I'm okay
[59:10.840 --> 59:15.700]  with that, but I would really hate to see it. I'd really hate to see those languages
[59:15.700 --> 59:19.400]  drop out as being supported at all by Apple.
[59:19.400 --> 59:26.600]  Yeah, I agree. And it's really difficult to predict how that's going to go. I have been
[59:26.600 --> 59:32.460]  getting, and I don't have a basis for this necessarily, but I've sort of been getting
[59:32.460 --> 59:46.680]  the sense that there is less, how do I, how do I phrase this? It feels like the Mac is
[59:46.680 --> 59:54.120]  becoming less and less of a developer platform for people who aren't actually targeting Apple
[59:54.120 --> 01:00:02.360]  OS. Right. That's a good way. That is a very good way to put it. And I, I, I, you know,
[01:00:02.360 --> 01:00:08.520]  I hesitate to tell them their business and where max sales are coming from and what significant,
[01:00:08.520 --> 01:00:12.760]  you know, what significance the number of developers who are just doing purely server
[01:00:12.760 --> 01:00:21.460]  side stuff in rails or PHP or, you know, all of the other various JavaScript based server
[01:00:21.460 --> 01:00:28.080]  side stuff that is, that has become really, really popular in the last few years. But
[01:00:28.080 --> 01:00:35.520]  I like, I get it that maybe if you tally up all of that market, it isn't that huge compared
[01:00:35.520 --> 01:00:41.520]  to the four to 5 million max Apple sells quarter after quarter at this point where, you know,
[01:00:41.520 --> 01:00:45.180]  an awful lot of them are just typical, you know, consumers who want to get a Mac book
[01:00:45.180 --> 01:00:51.200]  air to do email and browse the web and whatever else, you know, a typical quote unquote Mac
[01:00:51.200 --> 01:00:56.480]  user would do. But I, I kind of, I kind of feel like they might be overlooking just how
[01:00:56.480 --> 01:01:01.980]  important that that developer market, even though they're not writing iOS apps or Mac
[01:01:01.980 --> 01:01:08.520]  apps or tvOS apps, that being the go to platform for those developers, I still think was a,
[01:01:08.520 --> 01:01:15.480]  it was good for the Mac above and beyond multiply the number of those developers times the price
[01:01:15.480 --> 01:01:28.240]  of the max that they pay for somehow. Yeah, you beat me to it. I really think that developers
[01:01:28.240 --> 01:01:38.760]  of anything, software developers, web developers, people who are producing things on the technical
[01:01:38.760 --> 01:01:50.800]  things on Macs, whether it's PHP and WordPress themes and CSS and HTML or C for scientific
[01:01:50.800 --> 01:02:01.120]  computing and also Mac, iOS, watchOS and all the rest. I think that people who do software
[01:02:01.120 --> 01:02:11.680]  development are the leading edge enthusiast audience for any platform. They push the hardware
[01:02:11.680 --> 01:02:21.600]  to its limits. They push the OS to its limits. And I think it's a real mistake to marginalize
[01:02:21.600 --> 01:02:29.960]  them even on the valid fiscal basis that they don't sell all that many machines because
[01:02:29.960 --> 01:02:36.160]  it's in any market, not just computing. It's the enthusiasts who tell other people what
[01:02:36.160 --> 01:02:45.080]  to buy. Yeah. And I know you can see, I bet you know where I'm going is the car market.
[01:02:45.080 --> 01:02:49.960]  And I really do think that's true. And I'm not, you're more of much more of a car guy
[01:02:49.960 --> 01:02:56.360]  than I am. Our friends at the ATP show even had a car show before I did. But I think I
[01:02:56.360 --> 01:03:05.360]  get it. And I kind of, my observations, I haven't bought a car in 13 years. We're overdue,
[01:03:05.360 --> 01:03:10.420]  but I'm waiting because I feel like at this point, you know, I'm sort of like where John
[01:03:10.420 --> 01:03:16.680]  Siracusa was waiting for the new Mac Pro. We're overdue for a new car. But at this point,
[01:03:16.680 --> 01:03:20.120]  I really feel like I want to get something electric. I feel like buying another gas car
[01:03:20.120 --> 01:03:24.680]  is the wrong move for us. But in the meantime, here I am. And I have to look at my wife and
[01:03:24.680 --> 01:03:31.160]  son and explain why we have a 2006 Acura that doesn't even does. Not only does it have carplay,
[01:03:31.160 --> 01:03:37.520]  it doesn't even have like a USB. It's 2006. The latest and greatest in 2006 was the iPod
[01:03:37.520 --> 01:03:42.620]  with the 30 pin connector. And we don't even don't even have that. Well, listen, I'm not
[01:03:42.620 --> 01:03:50.640]  going to judge you because my my daily driver, my grocery getter is a 2004 with 143,000 miles
[01:03:50.640 --> 01:04:05.120]  on it. My fun car is a 2005 with 127,000 miles on it. And yeah, every once in a while, I
[01:04:05.120 --> 01:04:09.400]  think about buying a new car. And for a daily driver, of course, it's easier to look around
[01:04:09.400 --> 01:04:13.940]  and say, okay, well, this is the price I want. And this is the electric car that does what
[01:04:13.940 --> 01:04:21.700]  I want. Because yeah, I agree buying a gasoline car for everyday use seems like a losing bet.
[01:04:21.700 --> 01:04:30.320]  But as an enthusiast, I look at BMWs current offerings, and I think, wow, they really don't
[01:04:30.320 --> 01:04:33.920]  make a car I want to buy. And that's really disappointing.
[01:04:33.920 --> 01:04:39.800]  And I've heard that from so many friends who are in that semi enthusiast market and then
[01:04:39.800 --> 01:04:47.100]  just weird decisions and the way that that cruft mental cruft can just kind of build
[01:04:47.100 --> 01:04:55.000]  up in the design process, where there's things that they can they're just adding weight to
[01:04:55.000 --> 01:05:01.080]  cars and putting stuff in the doors and adding this stuff when it's if it's meant for enthusiasts,
[01:05:01.080 --> 01:05:06.240]  that's it's just not what they want that they're making decisions that are that's this is not
[01:05:06.240 --> 01:05:12.340]  what we want, you know, and circle back to, you know, the trashcan Mac Pro and yep, similar
[01:05:12.340 --> 01:05:17.720]  type decisions where this I get where some people might this might appeal to them. They
[01:05:17.720 --> 01:05:24.000]  might want a fancier electric window that moves in a much more smooth manner, but I
[01:05:24.000 --> 01:05:28.920]  don't I don't want 50 extra pounds in my door. Yep.
[01:05:28.920 --> 01:05:37.640]  I'm with you and I look at Apple's computers and I have a 2018 MacBook Pro with a touch
[01:05:37.640 --> 01:05:42.440]  bar. The last gasp of the old keyboard. Yeah.
[01:05:42.440 --> 01:05:46.200]  And I hope there's an iteration of it that has the new keyboard. I've heard that the
[01:05:46.200 --> 01:05:53.020]  new keyboard isn't quite as bad as the previous generation and that's good. But I'm looking
[01:05:53.020 --> 01:06:00.600]  at enthusiast hardware and seeing nothing. Yeah. Well, and and sorry, go in and I look
[01:06:00.600 --> 01:06:06.640]  at the and I look at the OS and I and I get and I feel that I have a sense of the direction
[01:06:06.640 --> 01:06:12.380]  that's going in and I see a lot of the same thing happening. I see I see the enthusiasts,
[01:06:12.380 --> 01:06:18.280]  the ones who say, yeah, this is what I got. This is what I like. This is what I would
[01:06:18.280 --> 01:06:25.760]  recommend. If you're making recommendations for family, what are you going to support?
[01:06:25.760 --> 01:06:33.200]  And and thinking and thinking, yeah, I I can't recommend this.
[01:06:33.200 --> 01:06:38.660]  There's a sense I almost wrote it today. But there's a sense that we're we as Mac users
[01:06:38.660 --> 01:06:44.880]  are never satisfied. But that's our job as Mac enthusiasts to never be satisfied. And
[01:06:44.880 --> 01:06:50.120]  so any domain enthusiasts are never satisfied. Right. And so here, Apple has finally shipped
[01:06:50.120 --> 01:06:58.440]  this major new update to the MacBook Mac Pro. And it truly is a in and of itself just impressive
[01:06:58.440 --> 01:07:09.480]  engineering across the board. But I can't help but look at both a just go to store.apple.com
[01:07:09.480 --> 01:07:16.720]  and try to configure a nice pro desktop for 4000 dollars, which seems like something you
[01:07:16.720 --> 01:07:22.360]  ought to be able to buy, but which they don't sell because the new Mac Pro starts at six
[01:07:22.360 --> 01:07:28.520]  thousand dollars. And in my opinion, again, I don't think it's a problem for the market
[01:07:28.520 --> 01:07:34.560]  that machine is meant for this workstation class market. I I don't even think it's necessary.
[01:07:34.560 --> 01:07:37.960]  I don't think it's great, but I don't think it's necessarily a problem that that base
[01:07:37.960 --> 01:07:44.340]  config six thousand dollar Mac Pro isn't that great for anybody, that the people who really,
[01:07:44.340 --> 01:07:49.640]  really need excessive computing ability are configuring something a lot more expensive
[01:07:49.640 --> 01:07:55.920]  than that. And the people who really just want a nice modular desktop, it's the six
[01:07:55.920 --> 01:08:00.800]  thousand dollars is going into things that aren't necessarily the best dollar for dollar.
[01:08:00.800 --> 01:08:05.980]  I mean, there's tons of people on Twitter who've configured, you know, Intel based hardware
[01:08:05.980 --> 01:08:14.200]  from the PC market. And, you know, you can get something pretty performant for and, you
[01:08:14.200 --> 01:08:18.580]  know, are truly, in my opinion, you know, professional, you know, with with good quality
[01:08:18.580 --> 01:08:24.160]  RAM and a good SSD and stuff like that, for, you know, less than six thousand dollars,
[01:08:24.160 --> 01:08:32.740]  much less right. There's still a hole in the lineup there. And, you know, I is it just
[01:08:32.740 --> 01:08:37.320]  as simple as an iMac pro without the built in display. And that's that's not the most
[01:08:37.320 --> 01:08:42.360]  unreal. You know, it's not unreasonable to want in terms of the modularity of your professional
[01:08:42.360 --> 01:08:48.640]  machine. It is it strikes me as actually very reasonable to want to separate the computer
[01:08:48.640 --> 01:08:53.580]  from the display because a display can certainly last for a lot of people, especially now that
[01:08:53.580 --> 01:08:57.000]  they've gone retina right now that, you know, we've gone over this. You know, we had the
[01:08:57.000 --> 01:09:03.640]  great divide from the CRT era to the flat screen era. And then with the flat screens,
[01:09:03.640 --> 01:09:09.200]  we've gone to this these retina level resolutions. It's not unreasonable to think that, like,
[01:09:09.200 --> 01:09:16.900]  if Apple were to sell a regular five K pro display without the XDR, that it could last
[01:09:16.900 --> 01:09:24.840]  10 years or more, a lot longer than your computer might. And so I really don't think it's again,
[01:09:24.840 --> 01:09:29.880]  I realize we're complaining just after Apple shipped this major new thing. But I look at
[01:09:29.880 --> 01:09:35.920]  it and I see the complaints of my developer friends on Twitter, you know, or in private,
[01:09:35.920 --> 01:09:40.240]  you know, slack groups and stuff like that, that, boy, a lot of them, a lot of them feel
[01:09:40.240 --> 01:09:48.780]  well, way over served by the new Mac Pro. And they sort of feel like they're missing
[01:09:48.780 --> 01:09:54.800]  an enthusiast level device, you know, computing device that's somewhere in between a Mac Mac
[01:09:54.800 --> 01:09:58.840]  mini and a Mac Pro, what we now call the Mac Pro.
[01:09:58.840 --> 01:10:06.560]  Couldn't agree more. I think it's kind of funny through throughout my entire personal
[01:10:06.560 --> 01:10:13.220]  and professional history of buying computers. My mystical, magical sweet spot price point
[01:10:13.220 --> 01:10:18.320]  has always been forty four hundred dollars. Every compute, every every computer I've ever
[01:10:18.320 --> 01:10:30.980]  bought once equipped from the 512 K Mac to the to the Quadra 700 to the Power Mac ninety
[01:10:30.980 --> 01:10:38.160]  five hundred and through to the my most recent computer purchase, which was desktop purchase,
[01:10:38.160 --> 01:10:43.520]  which was a 2013 Mac Pro forty four hundred dollars.
[01:10:43.520 --> 01:10:50.240]  And it seems like a reasonable price to me as a very nice professional computer.
[01:10:50.240 --> 01:10:59.520]  Yeah, for for for somebody who uses a computer to make their living, there is always a sweet
[01:10:59.520 --> 01:11:04.760]  spot price point. And for me, it has just worked out to be forty four hundred dollars.
[01:11:04.760 --> 01:11:12.000]  And so to these trash cans, I have two of them. I have I have the one I bought when
[01:11:12.000 --> 01:11:18.520]  it came out and I have a refurb that OWC was selling. It's a four core machine and I use
[01:11:18.520 --> 01:11:23.700]  it for testing new OS versions. And they're just sitting here quietly on my shelf side
[01:11:23.700 --> 01:11:30.760]  by side next to my desk, taking up no floor space, outputting almost no heat. And they're
[01:11:30.760 --> 01:11:37.640]  exactly what I want in a computer. I can. Take the top off and put in new more memory
[01:11:37.640 --> 01:11:45.760]  if I need to. I've figured out that I can swap in a new SSD. And those are the things
[01:11:45.760 --> 01:11:51.040]  that I found historically that I always need to upgrade. And so a computer like an iMac
[01:11:51.040 --> 01:11:57.680]  Pro with no attached display and a hatch over the memory slots. Perfect. Yeah, I was I was
[01:11:57.680 --> 01:12:07.040]  looking at the new Mac Mini, which from all accounts is a solid little machine. And there's
[01:12:07.040 --> 01:12:11.940]  no access to the ramp. You've got to take the machine apart. Yeah. And for what it is,
[01:12:11.940 --> 01:12:17.660]  I think that's fine. I just feel like it shouldn't be the only standalone desktop Mac other than
[01:12:17.660 --> 01:12:22.300]  the new Mac Pro. I mean, not for twenty five hundred dollars. It shouldn't be. There's
[01:12:22.300 --> 01:12:27.520]  a serious gap. And I love again, I know we're complaining about we're complaining about
[01:12:27.520 --> 01:12:31.960]  a Mac Mini that has never been better as a Mac. Agreed. Yep. Right. And that they really
[01:12:31.960 --> 01:12:39.600]  did listen to pros and who use Mac Minis for their work and put as many ports on a little
[01:12:39.600 --> 01:12:43.320]  tiny. It's hard to imagine how they could have gotten more ports into the back of that
[01:12:43.320 --> 01:12:49.840]  thing, which is great. That's great. But we're enthusiasts. It's our job to complain about
[01:12:49.840 --> 01:12:54.440]  things that don't matter to 90 percent of the population. Exactly. And we do a very
[01:12:54.440 --> 01:12:58.720]  good job of it. All right. Let me take a break here. Thank our friends at Casper. Casper
[01:12:58.720 --> 01:13:03.600]  products are designed cleverly to mimic human curves, providing supportive comfort for all
[01:13:03.600 --> 01:13:08.360]  kinds of bodies. You spend one third of your life sleeping. You should be comfortable when
[01:13:08.360 --> 01:13:13.880]  you're doing it. The experts at Casper work tirelessly to make a quality sleep surface
[01:13:13.880 --> 01:13:19.360]  that cradles your natural geometry in all the right places. The original Casper mattress
[01:13:19.360 --> 01:13:24.440]  combines multiple, multiple supportive memory phones for a quality sleep surface with just
[01:13:24.440 --> 01:13:28.800]  the right amount of both sync and bounce. They really did design it to be the default.
[01:13:28.800 --> 01:13:34.600]  That's the one right in the middle. They now offer three other mattresses, the wave, the
[01:13:34.600 --> 01:13:40.120]  essential and the new one, the hybrid. The wave features a patent pending premium support
[01:13:40.120 --> 01:13:45.520]  system to mirror the natural shape of your body. That's a premium one. The essential
[01:13:45.520 --> 01:13:50.280]  has a streamlined design at a price that won't keep you up at night. It's a little bit lower
[01:13:50.280 --> 01:13:54.840]  in price, still a great mattress. And then the hybrid, that's the new one where it combines
[01:13:54.840 --> 01:14:01.640]  the pressure relief of their award winning foam with durable yet gentle springs. They
[01:14:01.640 --> 01:14:07.880]  also offer a wide array of other products if it's related to sleeping and being comfortable,
[01:14:07.880 --> 01:14:13.280]  things like pillows and sheets. Casper has it, and it's all there to ensure a better
[01:14:13.280 --> 01:14:19.440]  sleep experience for you. And it's all designed, developed and assembled right here in the
[01:14:19.440 --> 01:14:24.400]  USA. They have affordable prices because they cut out the middlemen and they sell directly
[01:14:24.400 --> 01:14:30.360]  to you. Hassle free returns. If you are not completely satisfied, their mattresses are
[01:14:30.360 --> 01:14:34.920]  delivered right to your door and they're small. How could that possibly fit a mattress box?
[01:14:34.920 --> 01:14:39.040]  It's really kind of amazing. You open it up, you follow their instructions. Number one,
[01:14:39.040 --> 01:14:44.180]  put it in your room first, take the box upstairs, put it in your bedroom, open it up, it'll
[01:14:44.180 --> 01:14:49.480]  suck all the oxygen right out of the air. And next thing you know, you got a mattress.
[01:14:49.480 --> 01:14:55.000]  It's really amazing. So anyway, hundred night risk free sleep on at trial. That's over three
[01:14:55.000 --> 01:14:59.860]  months, buy it, sleep on it for three months. You don't like it. They take it back with
[01:14:59.860 --> 01:15:06.540]  no questions asked. We're up to three Casper mattresses here during fireball world headquarters.
[01:15:06.540 --> 01:15:11.380]  Everybody in the family loves them. Even our guests do. That's what we got in our guest
[01:15:11.380 --> 01:15:18.320]  room now. You can save 100 bucks 100 bucks towards select mattresses by visiting casper.com
[01:15:18.320 --> 01:15:27.940]  ca sp er.com slash talk show and using that code talk show at checkout. That's casper.com
[01:15:27.940 --> 01:15:36.240]  slash talk show and special code talk show terms and conditions apply not just terms,
[01:15:36.240 --> 01:15:43.040]  not just conditions, but terms and conditions apply. Before we move on, I just wanted to
[01:15:43.040 --> 01:15:48.920]  mention I'll kick myself if I don't. I have this theory on the removal of the scripting
[01:15:48.920 --> 01:15:54.240]  languages, the Unix ones. And that if if I'm right, I'll be I guess I'll be happy. But
[01:15:54.240 --> 01:15:59.960]  my theory is if Apple continues to support them, like again, I wouldn't be surprised
[01:15:59.960 --> 01:16:04.520]  if they just get installed with the developer tools, you know, like the Swift compiler and
[01:16:04.520 --> 01:16:10.740]  the GCC and whatever else they got the C Lang stuff. I guess they don't ship GCC anymore,
[01:16:10.740 --> 01:16:21.160]  do they? I hope that if they continue to support it, that one of the reasons for getting rid
[01:16:21.160 --> 01:16:28.480]  of it in the default install would be that the security team doesn't want individual
[01:16:28.480 --> 01:16:33.320]  apps to be able to count on the presence of those scripting languages. Because I think
[01:16:33.320 --> 01:16:39.560]  that's part of why they're deprecating them to warn people that if your app, which is
[01:16:39.560 --> 01:16:46.360]  either mostly or ostensibly a Mac app using the you know, cocoa API's and stuff like that,
[01:16:46.360 --> 01:16:55.700]  but you've got some subsystem of the app that calls out to the Unix shell scripting languages.
[01:16:55.700 --> 01:17:00.700]  Heads up, you're not going to be able to count on that anymore. Not that it won't be possible
[01:17:00.700 --> 01:17:06.600]  to do it. But you can't just assume and for me personally, this, you know, it certainly
[01:17:06.600 --> 01:17:10.640]  is in use by a fair number of the apps that I use is a fair number of apps that include
[01:17:10.640 --> 01:17:17.800]  my markdown Perl script as the as a markdown, you know, translator, you wouldn't be an app
[01:17:17.800 --> 01:17:21.200]  that uses that wouldn't be able to use that anymore, it would have to switch to some sort
[01:17:21.200 --> 01:17:26.880]  of native Swift or Objective C markdown parser, which is possible. And there's plenty of them
[01:17:26.880 --> 01:17:34.360]  that are very good. But it I suspect that if they do pull if 1016 ships, and the scripting
[01:17:34.360 --> 01:17:38.800]  languages are not in the default installation, there's going to be an awful lot of stuff
[01:17:38.800 --> 01:17:44.500]  that's going to break in weird ways from developers who either didn't heed the instructions or
[01:17:44.500 --> 01:17:49.360]  just, you know, old versions of apps that users have just kept using.
[01:17:49.360 --> 01:17:56.140]  Yeah, that's a good notion. And it's a real interesting idea that there's a security component
[01:17:56.140 --> 01:18:02.440]  to that, to their thinking on this, that that wouldn't surprise me either. Unix scripting
[01:18:02.440 --> 01:18:07.720]  as an another form of that automation security hole.
[01:18:07.720 --> 01:18:16.900]  Yeah. All right, BB edit 13. A couple of the flagship features seem like they were pulled
[01:18:16.900 --> 01:18:22.520]  right out of my I didn't even know I wanted them. But every you know, people who read
[01:18:22.520 --> 01:18:28.320]  during fireball know that I'm a regular expression, super nerd, possibly some sort of weird savant
[01:18:28.320 --> 01:18:35.880]  where it's the one just this esoteric level of programming or programming ish stuff that
[01:18:35.880 --> 01:18:43.280]  for whatever reason, my brain takes to there. So there's a new feature in BBS, which I love,
[01:18:43.280 --> 01:18:48.560]  which is called the pattern playground. And this there's actually been there have been
[01:18:48.560 --> 01:18:53.680]  apps entire apps that this is what they do. Now it's just a feature in BB edit. Can you
[01:18:53.680 --> 01:19:00.820]  tell people what a pattern playground is? Yeah, so a pattern playground is a safe space
[01:19:00.820 --> 01:19:09.400]  for beginning users to experiment with grip patterns, and see how the individual elements
[01:19:09.400 --> 01:19:16.280]  of a pattern work get a sense of what a pattern does, while working with actual their actual
[01:19:16.280 --> 01:19:25.160]  text because of course, there's a strongly practical aspect to this. But without risking
[01:19:25.160 --> 01:19:31.000]  actual data, since they're looking at a read only copy, they'll try a pattern out, they'll
[01:19:31.000 --> 01:19:36.100]  say, oh, this matches this and these are what the sub patterns match and here's how they
[01:19:36.100 --> 01:19:41.400]  break down. So it gives you that level of introspection into a pattern so that you can
[01:19:41.400 --> 01:19:49.520]  really see how it works. And so it's an enormously helpful learning tool for anybody who's just
[01:19:49.520 --> 01:19:56.940]  starting out. But at the same time, it's an enormously helpful development tool for anybody
[01:19:56.940 --> 01:20:06.400]  who's experienced at writing grip patterns to create, to iterate, to debug a grip pattern
[01:20:06.400 --> 01:20:11.800]  because yeah, as you say, there really is an element of programming to writing a grip
[01:20:11.800 --> 01:20:21.160]  pattern. There's logic involved in the expression of that logic. So there's this visual introspection,
[01:20:21.160 --> 01:20:26.360]  you can try stuff out, you can test it. And when you're ready, you just hit a button,
[01:20:26.360 --> 01:20:29.640]  it goes over to the find window and you're ready to put it into service.
[01:20:29.640 --> 01:20:34.560]  Yeah, and it fills in all the things like the sub expressions. So if you want to, sub
[01:20:34.560 --> 01:20:40.280]  expression one, sub expression two, here sub expression one is rich, sub expression two
[01:20:40.280 --> 01:20:45.280]  is seagull. And you're like, oh, but wait, sub expression two with seagull has the space
[01:20:45.280 --> 01:20:50.040]  before his name. I have to adjust this pattern to make sure the space isn't in first name,
[01:20:50.040 --> 01:20:51.880]  last name, that sort of thing.
[01:20:51.880 --> 01:20:56.260]  Exactly. And at the same time, there's also a spot in the playground for experimenting
[01:20:56.260 --> 01:21:02.920]  with replacement patterns. So for any given match, again, yeah, it helps you learn that
[01:21:02.920 --> 01:21:10.340]  on the novice side. And on the experience side, it helps you iterate and debug.
[01:21:10.340 --> 01:21:15.880]  It's not the best analogy I've ever come up with. But it reminds me a little bit of
[01:21:15.880 --> 01:21:21.640]  of apps like Photoshop, Photoshop in particular, but going back in the day where you'd bring
[01:21:21.640 --> 01:21:26.380]  up a filter for Photoshop back in the day, and you'd twiddle with all the settings,
[01:21:26.380 --> 01:21:32.160]  and then you had to hit a button and wait for the filter or whatever it was to apply
[01:21:32.160 --> 01:21:36.120]  to the image. And then you could see if you liked it. And if you didn't, then you had
[01:21:36.120 --> 01:21:42.560]  to command Z, go back to it, try it again. And, you know, at some point, Photoshop switched
[01:21:42.560 --> 01:21:47.280]  to when when these windows are open, and you change the settings for the Gaussian blur
[01:21:47.280 --> 01:21:51.880]  or something like that they preview live in the window behind the dialogue where you're
[01:21:51.880 --> 01:21:57.600]  setting it. And you know, apps like acorn and pixelmator do that too. But this is sort
[01:21:57.600 --> 01:22:03.400]  of like light live preview for grep where instead of typing a pattern, hoping it's right,
[01:22:03.400 --> 01:22:09.600]  doing a change all and then eyeballing the results and undo go back to the fine dialogue,
[01:22:09.600 --> 01:22:13.440]  try it again, you can just sit there and play with it. And then you could see it in the
[01:22:13.440 --> 01:22:16.560]  window, you know, right there in the in the playground window. Okay, this is going to
[01:22:16.560 --> 01:22:18.920]  do exactly what I thought it was going to do.
[01:22:18.920 --> 01:22:27.380]  Yeah, it really removes the sense of error from the trial and error process. Right? Because
[01:22:27.380 --> 01:22:31.400]  all of a sudden, instead of dealing with that element of frustration of it didn't do what
[01:22:31.400 --> 01:22:40.220]  I wanted. You're you're now you're you're twisting a knob and watching the effects in
[01:22:40.220 --> 01:22:47.880]  real time. And so that is there still try and trial and error? Well, sure, in a literal
[01:22:47.880 --> 01:22:51.840]  sense, you're trying something out, it works like you want it to, or it doesn't. And if
[01:22:51.840 --> 01:22:58.960]  you if it doesn't, you adjust. But the loop is so tight now that it feels much more like
[01:22:58.960 --> 01:23:07.320]  a live fine tuning sort of a process then instead of instead of trying and failing.
[01:23:07.320 --> 01:23:11.520]  Yeah. One of my other new features and I love it, I'm looking at the bb at 13 release notes
[01:23:11.520 --> 01:23:17.040]  here and you even call it out that it was this is the commands command, which I love.
[01:23:17.040 --> 01:23:20.480]  And it was added in bb at 12.5. But as it says here in the release notes, it's too cool
[01:23:20.480 --> 01:23:23.680]  not to mention again here. Now this I have to take a little bit of credit for this was
[01:23:23.680 --> 01:23:32.220]  an idea that I I threw over the the the support transom years ago. You did. It's you and we
[01:23:32.220 --> 01:23:38.020]  always used to refer to it internally as groupers universal runner. But the idea of this command,
[01:23:38.020 --> 01:23:43.200]  which I just love, and I use it all the time, the commands command. And I believe it's the
[01:23:43.200 --> 01:23:46.680]  default keyboard. That's what I use. I don't I think it was free for me. It's shift command
[01:23:46.680 --> 01:23:53.920]  two. And it brings up a window where you can type any command in bb edit anything in any
[01:23:53.920 --> 01:23:59.160]  of the menus, and whatever you type will start matching. And it'll show you a list of everything.
[01:23:59.160 --> 01:24:03.560]  So if you know you want to run the process lines containing, you could start typing the
[01:24:03.560 --> 01:24:08.560]  word process, you could start typing the words containing, you could start typing lines,
[01:24:08.560 --> 01:24:12.520]  it'll match them. If you have a whole bunch of scripts, you know, your own Apple scripts
[01:24:12.520 --> 01:24:17.040]  or text filters, which of course, I have a lot of all of those are included. And then
[01:24:17.040 --> 01:24:21.080]  you could just arrow key down to the one you want. If it's not the top selection, hit return
[01:24:21.080 --> 01:24:27.800]  and then that menu key runs. And I love it because I long ago, I'm too old, I've run
[01:24:27.800 --> 01:24:34.600]  out of space for new new shortcut keys. I don't. So I don't I don't need to if you have,
[01:24:34.600 --> 01:24:38.560]  you know, a script that you're running or I just got done selling t shirts, a daring
[01:24:38.560 --> 01:24:44.560]  fireball and the weird process I use to run them. I run a couple of it's not even worth
[01:24:44.560 --> 01:24:48.920]  putting a script together to do it because it's about a two or three step process to
[01:24:48.920 --> 01:24:54.680]  export the final count of you know, each SKU, you know, all right, we got, you know, 37
[01:24:54.680 --> 01:25:01.280]  of this shirt and 47 XLs and blah, blah, blah. But instead of running like two or three commands
[01:25:01.280 --> 01:25:06.000]  with their own shortcuts, it's all shift command, you type the name, hit return. There it is.
[01:25:06.000 --> 01:25:10.360]  I love it. And I wish I don't mean, you know, maybe you'll take it the wrong way. But I
[01:25:10.360 --> 01:25:14.040]  wish that it became like a standard feature system wide.
[01:25:14.040 --> 01:25:23.720]  Yeah, well, we we were inspired and I suspect you were as well, by the awesome work of of
[01:25:23.720 --> 01:25:29.960]  really indispensable tools like launch bar. Yep. Yeah. And, and one of the things that
[01:25:29.960 --> 01:25:36.920]  I did early on during the development of this feature was, was to think, well, gee, the
[01:25:36.920 --> 01:25:42.880]  thing that bb edit can do that launch bar can't is show you everything inside of bb
[01:25:42.880 --> 01:25:50.440]  edit, right? You know, as you said, scripts, filters, recently opened files, not just menu
[01:25:50.440 --> 01:25:57.280]  commands, of course, the OS will show you menu commands in the help menu. But that's
[01:25:57.280 --> 01:26:03.960]  not really complete. And one of the things that I wanted to do, and I and I wrote to
[01:26:03.960 --> 01:26:11.600]  launch bars developer about this was to say, Okay, well, could I somehow expose this knowledge
[01:26:11.600 --> 01:26:18.260]  to launch bar? And he said, that's a really good idea. Unfortunately, it can't support
[01:26:18.260 --> 01:26:23.120]  that right now. But I'll think about it. So he, you know, he may be he may be looking
[01:26:23.120 --> 01:26:29.000]  into a model or an API for doing that, which I think would be just awesome. Because like
[01:26:29.000 --> 01:26:38.900]  I said, launch bar is a terrific product. Yeah. But it became clear to that even as
[01:26:38.900 --> 01:26:45.460]  popular as launch bar is, not everybody who has bb edit has launch bar, right? Not everybody
[01:26:45.460 --> 01:26:51.280]  who has bb edit knows about launch bar. And this need is still here. So I said, Okay,
[01:26:51.280 --> 01:26:56.040]  well, I'm going to go ahead and build this in, it's, it's time for groupers wish to become
[01:26:56.040 --> 01:27:02.440]  reality. And, and because it happened mid cycle, and this is this is something that
[01:27:02.440 --> 01:27:08.880]  we've been doing for a long time. And I think in some ways, it's awesome. In most ways,
[01:27:08.880 --> 01:27:15.360]  it's awesome. And in some ways, it's really difficult that we will do significant feature
[01:27:15.360 --> 01:27:23.460]  additions in between point O's, right. And it's awesome, because, you know, you get new
[01:27:23.460 --> 01:27:28.400]  features for free without having to buy an upgrade. And on the other hand, what we've
[01:27:28.400 --> 01:27:35.520]  found is that sometimes it's necessary to call out with a point O features that we added
[01:27:35.520 --> 01:27:42.600]  in a previous point five, because we've noticed that a lot of folks really only look closely
[01:27:42.600 --> 01:27:47.040]  at a point. Oh, right. Right. That's where you can really catch their eye with a new
[01:27:47.040 --> 01:27:55.080]  feature. Yeah. Or as it turns out, an old one. Yeah. Well, speaking of upgrades, it
[01:27:55.080 --> 01:28:02.640]  is without turning this into an App Store, bitch fest. But did the bb edit saga in the
[01:28:02.640 --> 01:28:09.160]  App Store has been interesting, to say the least, where it was in. That's an adjective.
[01:28:09.160 --> 01:28:14.640]  All right, we'll go with it, then you left, then there, you know, were some policy changes
[01:28:14.640 --> 01:28:22.820]  that allowed serious, you know, tools like bb edit to come back. And that's just talking,
[01:28:22.820 --> 01:28:28.480]  can you have an app with the power of bb edit, and have it be in the App Store with the sandboxing
[01:28:28.480 --> 01:28:35.200]  rules and to get exceptions, blah, blah, blah, that, you know, is a long, dirty path, we
[01:28:35.200 --> 01:28:42.280]  don't have to, we don't have to go too far down. But at a high level at a very high,
[01:28:42.280 --> 01:28:48.680]  obvious level, at this point, you know, in the App Store's life, it's very clear that
[01:28:48.680 --> 01:28:54.280]  Apple is not going to do well, I shouldn't say never say never, but it's clear that upgrade
[01:28:54.280 --> 01:29:03.120]  pricing isn't something they want to do. And that that applies on iOS, as well as Mac OS,
[01:29:03.120 --> 01:29:09.040]  for whatever their reasons. But you bare bones is a company that largely was built on the
[01:29:09.040 --> 01:29:17.240]  old model of if you're a new customer, you'll pay x maybe at the you know, is $129 or whatever
[01:29:17.240 --> 01:29:23.040]  the price was at the time. But then when new major versions come out, you can upgrade for
[01:29:23.040 --> 01:29:28.600]  a significant discount compared to the regular price for a new customer. And that once you're
[01:29:28.600 --> 01:29:33.880]  in, you could upgrade you could buy BB at five back in the day and then upgrade to six
[01:29:33.880 --> 01:29:40.000]  and seven and eight. And you're only paying at an incremental step along the way and you
[01:29:40.000 --> 01:29:46.720]  get all these new features. That App Store doesn't support that. And I think it's pretty
[01:29:46.720 --> 01:29:52.080]  clear that in large, large parts, like just look at Adobe, who used to follow that method
[01:29:52.080 --> 01:29:56.880]  with their apps have gone to subscription pricing. And I'm curious to hear your thoughts
[01:29:56.880 --> 01:30:00.480]  on on where that's going.
[01:30:00.480 --> 01:30:08.380]  Well, that's a that's a fairly deep and tricky one because there's there's definitely a large
[01:30:08.380 --> 01:30:16.560]  segment of the audience that prefers the classical upgrade model,
[01:30:16.560 --> 01:30:21.840]  where you know what you're paying for. You're paying for BB edit 13. And as long as BB at
[01:30:21.840 --> 01:30:25.680]  13 can run on your hardware, you you've got the right to use it.
[01:30:25.680 --> 01:30:31.760]  Exactly. And we we are fully in favor of that we support it, we built our business on it.
[01:30:31.760 --> 01:30:39.760]  We believe in it ourselves. I always prefer software with a paid upgrade model, I support
[01:30:39.760 --> 01:30:47.820]  developers with paid upgrades. And, and that is an option which for as long as I'm in charge,
[01:30:47.820 --> 01:31:02.200]  we will always provide. And the subscription model is how the App Store provides for ongoing
[01:31:02.200 --> 01:31:14.380]  revenue for an application. And their subscription model was and frankly is oriented around a
[01:31:14.380 --> 01:31:23.640]  model of subscription to content. There was a bit of cognitive dissonance. They clearly
[01:31:23.640 --> 01:31:29.080]  heard it before, but there was still a little bit of cognitive dissonance where I said,
[01:31:29.080 --> 01:31:39.280]  okay, well, but that's not what we want to do. And we don't have content. We have features.
[01:31:39.280 --> 01:31:44.560]  And so what we want to do is translate our free mode model, which we've had since BB
[01:31:44.560 --> 01:31:53.600]  edit 11.6, where you get to use everything for the first 30 days. And after that, there
[01:31:53.600 --> 01:32:02.040]  are advanced features which are only available if you have a paid license. Well, how do you
[01:32:02.040 --> 01:32:07.900]  do that in the App Store and support ongoing revenue? And the short answer is you have
[01:32:07.900 --> 01:32:16.560]  to do it with subscriptions. There is no alternative. Right. So that's how it works in the App Store
[01:32:16.560 --> 01:32:25.360]  is the same way. 30 days after that, it's free without the advanced features. Or if
[01:32:25.360 --> 01:32:32.160]  you have an active subscription, you get all the advanced features. And so the conventional
[01:32:32.160 --> 01:32:39.040]  upgrade model goes away in the App Store. As you said, it's not supported. We don't
[01:32:39.040 --> 01:32:45.640]  have any way to know who our customers are or determine their eligibility. And so what
[01:32:45.640 --> 01:32:54.600]  we do is from now on, if you have a live subscription in the App Store, whenever we do BB edit 14,
[01:32:54.600 --> 01:33:00.880]  you'll get it. And as long as you have a live subscription, you'll get all of its advanced
[01:33:00.880 --> 01:33:06.920]  features. That's how it worked with the 13 upgrade. BB edit 12.6 was the first version
[01:33:06.920 --> 01:33:12.520]  to come back to the App Store early this year. So it it sounds to me like your approach to
[01:33:12.520 --> 01:33:18.060]  the App Store is fundamentally and this is, you know, this is your personality, but it's
[01:33:18.060 --> 01:33:26.200]  fundamentally practical. And, you know, if you had your druthers, I would assume like
[01:33:26.200 --> 01:33:31.160]  a lot of other independent developers, you would rather be able to sell upgrade pricing
[01:33:31.160 --> 01:33:38.560]  in the App Store. Absolutely. But there's, you know, Steve Jobs like to say, and as my
[01:33:38.560 --> 01:33:44.340]  dad loves to say people in hell want ice water. Yep, I use I use that one myself. My dad loves
[01:33:44.340 --> 01:33:48.640]  that saying and it does. It makes an awful lot of sense. There's really no use complaining
[01:33:48.640 --> 01:34:04.040]  about it. It is what it is. Oh, I just before we move on to maybe just idle chitchat, but
[01:34:04.040 --> 01:34:11.280]  I still see it. There's a fundamental disconnect in my mind between Apple's clear commitment
[01:34:11.280 --> 01:34:21.920]  to pro hardware and this ridiculous supercomputer Mac Pro and the sort of Apple hasn't said
[01:34:21.920 --> 01:34:25.280]  this. Apple has not really even hinted that, hey, the App Store is going to be the only
[01:34:25.280 --> 01:34:32.560]  way to distribute Mac software. But there's certainly a lot of people who suspect that's
[01:34:32.560 --> 01:34:37.840]  what they'd like to do. And again, whether it's and I think you made a good point earlier
[01:34:37.840 --> 01:34:42.280]  where where there's certainly some cynical people who and then rightly so, maybe who
[01:34:42.280 --> 01:34:47.200]  might see it as well, they just you know, they want their 30 percent cut of everything
[01:34:47.200 --> 01:34:52.680]  and Apple. You know, they they enjoy their 30 percent, 15 percent cut of of recurring
[01:34:52.680 --> 01:34:58.000]  software revenue. I'm sure, you know, they cash every single check. But I wouldn't be
[01:34:58.000 --> 01:35:04.200]  surprised if a lot of that's driven as much or more by the security people looking at
[01:35:04.200 --> 01:35:09.280]  it, not as a business decision, but simply a very, very conservative take to what you're
[01:35:09.280 --> 01:35:14.680]  allowed to do at your own machine. And my idea and maybe this is a terrible idea, maybe
[01:35:14.680 --> 01:35:22.640]  it really is. But my idea has been that I wish that there was a developer switch in
[01:35:22.640 --> 01:35:30.620]  Mac OS X and that you could set it. So we've long had admin accounts and regular user accounts
[01:35:30.620 --> 01:35:34.920]  where a regular user account has significantly restricted permissions. This has been the
[01:35:34.920 --> 01:35:41.240]  case possibly even before Mac OS X. This might go back to the next era. But, you know, if
[01:35:41.240 --> 01:35:47.280]  you set up if you have a shared family iMac and you create a regular user account for
[01:35:47.280 --> 01:35:51.480]  your children or something like that, they don't have the right to solve to install software
[01:35:51.480 --> 01:35:56.520]  they needed. You know, they'll get prompted for an admin password and username to go ahead
[01:35:56.520 --> 01:36:01.320]  and do stuff. We've always had this. I wish that there was a third. This is my way I haven't
[01:36:01.320 --> 01:36:05.480]  planned it out. There's no I have no white paper. But I kind of wish there was a third
[01:36:05.480 --> 01:36:15.600]  account type called developer. And it's it would be a way of, of confirming to the system
[01:36:15.600 --> 01:36:21.480]  that you'd like an awful lot of these restrictions to go back the way they are. And I trust myself
[01:36:21.480 --> 01:36:28.640]  to, for lack of a better word to shoot myself in the foot. I mean, I do you know, another
[01:36:28.640 --> 01:36:35.440]  way of putting it is that for it in the real world power tools to be useful, you need to
[01:36:35.440 --> 01:36:39.720]  be able to they need to be built in a way that you you might hurt yourself with them.
[01:36:39.720 --> 01:36:43.800]  You know, a knife, a sharp knife is a good tool, but a sharp knife you can cut yourself
[01:36:43.800 --> 01:36:50.240]  with. And if you don't take due care, you can do a lot of damage, including to yourself.
[01:36:50.240 --> 01:37:03.200]  And I think I see where you're going with this. And my sense of it is that as you say,
[01:37:03.200 --> 01:37:07.820]  the security aspect of it is a very, I think it's a very big component. Apple cares a great
[01:37:07.820 --> 01:37:15.040]  deal about security. They don't keep tightening screws because they don't think it's important.
[01:37:15.040 --> 01:37:25.920]  They think it is important. And I can see the trend line continuing to a place where
[01:37:25.920 --> 01:37:30.800]  even if you're a developer, you can't run anything on your Mac that didn't come from
[01:37:30.800 --> 01:37:46.300]  the App Store or Apple. And so I don't know what that's going to do to the ecosystem.
[01:37:46.300 --> 01:37:53.040]  There's going to be some real trouble there. But I also think that your notion of a developer
[01:37:53.040 --> 01:37:59.160]  user account is one solution to that.
[01:37:59.160 --> 01:38:05.800]  One thing I'd be intrigued by it's I wonder what percentage of Macs in use are primarily
[01:38:05.800 --> 01:38:13.440]  used from the an admin account, because every Mac has to have an admin account. And so how
[01:38:13.440 --> 01:38:19.680]  many people when they get it's just go with the most popular Mac of all the MacBook Air,
[01:38:19.680 --> 01:38:25.460]  how many people get their new MacBook Air, go through the turn it on, go through the
[01:38:25.460 --> 01:38:30.520]  first run, set it up, create your account, type your name, and let them pick your, you
[01:38:30.520 --> 01:38:37.120]  know, your home directory name, or maybe adjust that if you want to. And then never set up
[01:38:37.120 --> 01:38:42.080]  another account, I can only I would assume that is the overwhelming majority of Macs
[01:38:42.080 --> 01:38:47.100]  in use that the over would agree that most of them run as the admin user and therefore
[01:38:47.100 --> 01:38:54.000]  are running under a user whose permissions are, traditionally speaking, rather dangerous,
[01:38:54.000 --> 01:38:59.740]  you know, that you can, you can launch an app that could just start overwriting files
[01:38:59.740 --> 01:39:03.520]  in your documents folder or something like that. There's all sorts of things that you
[01:39:03.520 --> 01:39:09.440]  know, that for a year, you know, 20 years, an app that you simply double clicked in your
[01:39:09.440 --> 01:39:17.400]  applications folder could do, you know, all sorts of, quote, unquote, dangerous things.
[01:39:17.400 --> 01:39:25.920]  My thinking is that a developer account wouldn't, it wouldn't be subject in my, I mean, I could
[01:39:25.920 --> 01:39:32.320]  be wrong, but I don't think that you're suddenly going to find hundreds of 1000s or millions
[01:39:32.320 --> 01:39:38.240]  of Mac users turning their toggling the button in the users and accounts systems preferences
[01:39:38.240 --> 01:39:44.820]  to become developer accounts, just because they want to do x, y, and z, I don't think
[01:39:44.820 --> 01:39:50.040]  most of those users really run into many problems with Mac OS Catalina, I really think you have
[01:39:50.040 --> 01:39:58.420]  to be either a developer or a developer type user, a so called power user. Yeah. But here's
[01:39:58.420 --> 01:40:05.720]  a here's a thought to go with your, your your own idea here. And that and that is, what
[01:40:05.720 --> 01:40:12.160]  if in order to turn on a developer user account, you also had to have a developer account with
[01:40:12.160 --> 01:40:17.480]  Apple. And then all of a sudden, you lose a bunch of power users who have no reason
[01:40:17.480 --> 01:40:21.900]  to sign up for a developer account. Or is that was that what you're thinking? Yeah.
[01:40:21.900 --> 01:40:26.680]  Like somebody who's just, you know, you know, just to go with the podcast, you know, like,
[01:40:26.680 --> 01:40:33.440]  like David sparks at the Mac power users con, you know, podcast or people who's, who's just
[01:40:33.440 --> 01:40:39.020]  sail through like Adobe Illustrator and Photoshop and know everything inside and out, but really,
[01:40:39.020 --> 01:40:43.320]  you know, have that long standing, you know, and they know all sorts of things like, you
[01:40:43.320 --> 01:40:48.140]  know, they know about installing Safari extensions, and the ways that you can, you know, the powerful
[01:40:48.140 --> 01:40:52.200]  things that you can do with extensions and stuff like that, in all the apps that they
[01:40:52.200 --> 01:40:56.000]  use, does it really make sense to require them to have a developer account to unlock
[01:40:56.000 --> 01:41:02.040]  those abilities? I don't know. But I kind of feel like once you say, even if this if
[01:41:02.040 --> 01:41:05.980]  this idea got any traction within Apple, I don't think it would take very long for them
[01:41:05.980 --> 01:41:10.280]  to say, Well, the first thing you have to do is have an Apple developer connection account.
[01:41:10.280 --> 01:41:15.260]  Mm hmm. Exactly. And it's like, if you have a developer account, maybe you don't ever
[01:41:15.260 --> 01:41:25.300]  see. BB edit wants to communicate with Xcode, cancel or allow.
[01:41:25.300 --> 01:41:29.180]  And I don't want to turn this into a Catalina bitchfest. I'm running I've been running this
[01:41:29.180 --> 01:41:34.040]  this 16 inch MacBook Pro for weeks now. And it has to run Catalina because it's new hardware.
[01:41:34.040 --> 01:41:40.160]  I have to say Catalina has been much better than I was led to believe. You know, going
[01:41:40.160 --> 01:41:46.880]  into this, it's it's, it's been pretty good. And not buggy, better than I think its reputation
[01:41:46.880 --> 01:41:52.260]  seems to be. But when I've run into weird things, boy, are they frustrating. Like, yeah,
[01:41:52.260 --> 01:41:57.320]  there was one I tweeted just like last week where I was writing in Mars edit mid sentence,
[01:41:57.320 --> 01:42:01.680]  I'm kind of in the flow. And all of a sudden, a system wide modal dialogue popped up and
[01:42:01.680 --> 01:42:06.560]  stole keyboard focus to ask about the some app in the background, I forget what it was
[01:42:06.560 --> 01:42:11.000]  wanted permission to read my documents folder. It was an app I hadn't hadn't been actively
[01:42:11.000 --> 01:42:16.180]  using in hours, it just was sitting idly in the background. And for some reason, something
[01:42:16.180 --> 01:42:23.160]  prompted to do it. And I cannot remember honestly, I mean, it might be decades or more that I
[01:42:23.160 --> 01:42:27.860]  can remember a system wide modal dialogue popping up mid sentence while I'm typing and
[01:42:27.860 --> 01:42:32.360]  stealing keyboard focus. It just seemed right. And all of a sudden, there's a bunch of beeps
[01:42:32.360 --> 01:42:38.720]  and you lost a bunch of words. And, and you lost your train of thought. And, and it just
[01:42:38.720 --> 01:42:42.600]  looks like a cheap dialogue. It just there's something cheap to the way that it looked
[01:42:42.600 --> 01:42:47.240]  where it just not that I thought it was a scam. I knew exactly what it was. I knew,
[01:42:47.240 --> 01:42:50.880]  you know, that these this is this new, you know, that they, they used to they keep tightening
[01:42:50.880 --> 01:42:55.880]  some of these screws, like now the documents folders is protected. You know, first they
[01:42:55.880 --> 01:43:01.700]  first they came for mail and contacts and and I didn't say anything because I'm not
[01:43:01.700 --> 01:43:07.240]  writing an email client anymore. All right, let me take a third break here and thank our
[01:43:07.240 --> 01:43:14.640]  third and final sponsor of the show are good friends at Squarespace. Squarespace Hey, make
[01:43:14.640 --> 01:43:19.640]  your next move at Squarespace. They're gearing up now. This is a big deal for Squarespace
[01:43:19.640 --> 01:43:24.180]  coinciding with the new year, which is coming up. Look, everybody knows it. There's no reason
[01:43:24.180 --> 01:43:27.360]  to pretend otherwise. You know what people do at New Year's, they set resolutions, they
[01:43:27.360 --> 01:43:32.480]  set new goals, maybe they start new businesses, change careers, launch a creative project.
[01:43:32.480 --> 01:43:38.000]  People do that around New Year's. It's just a contemplative time of the year. Well, Squarespace
[01:43:38.000 --> 01:43:42.180]  gives you a powerful and beautiful online platform from which to make your next move
[01:43:42.180 --> 01:43:46.760]  known to the world. If the next thing you want to do involves building a new website
[01:43:46.760 --> 01:43:52.460]  or replacing an old website, you can do it at Squarespace. You can lock down your next
[01:43:52.460 --> 01:43:57.120]  move idea with a unique domain name registered at Squarespace, create the website, starting
[01:43:57.120 --> 01:44:02.640]  with some of their beautiful award winning, professionally designed templates. You could
[01:44:02.640 --> 01:44:06.200]  use it to build a portfolio to get your project out there, your show your work, if you're
[01:44:06.200 --> 01:44:10.020]  looking for a new job, you could build an online store at Squarespace to officially
[01:44:10.020 --> 01:44:14.500]  open for business and do your actual commerce right there at Squarespace. And they handle
[01:44:14.500 --> 01:44:20.000]  all the ugly technical details of online commerce, all the security stuff, all the regulations
[01:44:20.000 --> 01:44:23.980]  and stuff around saving credit card numbers. You don't have to worry about any of that.
[01:44:23.980 --> 01:44:29.180]  You just open the store. They do all the credit card processing and you get your money for
[01:44:29.180 --> 01:44:33.020]  the products that you're selling. Make your next move with a beautiful new website from
[01:44:33.020 --> 01:44:38.740]  Squarespace. Your next move could have a new unique domain name from Squarespace. Everything
[01:44:38.740 --> 01:44:44.060]  you need to do, including award winning technical support, which I'm about to talk to Rich about.
[01:44:44.060 --> 01:44:49.020]  Make your next move. Get your unique, unique new website from Squarespace. And if you start
[01:44:49.020 --> 01:44:54.300]  building today at Squarespace dot com, you get a free trial. Thirty days. And when you
[01:44:54.300 --> 01:44:59.520]  check out, use that code talk show, no, the just talk show and you get 10 percent off,
[01:44:59.520 --> 01:45:04.620]  you could prepay for a year, 10 percent off. That's that's a lot of money. That's over
[01:45:04.620 --> 01:45:09.580]  a month free just by using that code talk show. So go to Squarespace dot com slash talk
[01:45:09.580 --> 01:45:14.820]  show. And I thank them. I thank Squarespace for another year of continuing sponsorship
[01:45:14.820 --> 01:45:21.980]  of this podcast. So I really did mean that in the middle of that read. Squarespace has
[01:45:21.980 --> 01:45:29.540]  great tech support, but so does bare bones. It's always been a huge source of pride for
[01:45:29.540 --> 01:45:37.020]  you. It's true for a lot of the independent developers I know. And I do think that there's
[01:45:37.020 --> 01:45:42.400]  also some correlation to the developers who have longevity and have kept apps going for
[01:45:42.400 --> 01:45:51.700]  a long time, that they also deeply concern themselves with customer support. Tell me,
[01:45:51.700 --> 01:45:55.020]  you know, tell me about your approach to customer supported bare bones and where that started
[01:45:55.020 --> 01:45:56.020]  from.
[01:45:56.020 --> 01:46:03.780]  Well, where it started from was my very first professional job, which was at Think Technologies,
[01:46:03.780 --> 01:46:13.220]  the folks who did Lightspeed C and Lightspeed Pascal as a customer, I got to talk with a
[01:46:13.220 --> 01:46:20.080]  human being who knew something about the product, how it worked, how to help me use it, how
[01:46:20.080 --> 01:46:28.540]  to fix problems when it wasn't working correctly. And this person hired me as his replacement.
[01:46:28.540 --> 01:46:40.900]  One day he called me up. We were talking and he mentioned, he said, by the way, I'm leaving,
[01:46:40.900 --> 01:46:50.860]  but I have to hire my replacement. Would you be interested? And I said, sure. And I had
[01:46:50.860 --> 01:46:54.540]  to think about it because I was living in Virginia at the time and I was just out of
[01:46:54.540 --> 01:47:01.380]  college and this was up in Boston and it was a big deal.
[01:47:01.380 --> 01:47:09.480]  So to make a long story short, I ended up taking that job and firsthand had this experience
[01:47:09.480 --> 01:47:18.460]  of being on the receiving end of a phone call from a programmer, trying to use the product
[01:47:18.460 --> 01:47:28.300]  and having trouble. And I very quickly realized that even though that was a perfectly conventional
[01:47:28.300 --> 01:47:35.820]  way to do tech support at the time, it was hugely important that we were responsive to
[01:47:35.820 --> 01:47:41.760]  what the customer needed, that when the customer thought they had a problem, you listen to
[01:47:41.760 --> 01:47:46.540]  them describe what's going on and you frame that against your own experience and you say,
[01:47:46.540 --> 01:47:56.860]  well, here's what's happening. You're holding it wrong. Maybe not in so many words, or that's
[01:47:56.860 --> 01:48:04.540]  a really neat idea. Let me make sure the engineers hear about that. No, this is definitely not
[01:48:04.540 --> 01:48:08.100]  working correctly. We'll get a bug fix for that.
[01:48:08.100 --> 01:48:19.900]  And it really drove into me at a very impressionable age, how important customers are to the product.
[01:48:19.900 --> 01:48:25.380]  Not just in the conventional ways of yes, they buy a license and your company gets to
[01:48:25.380 --> 01:48:34.440]  keep the lights on. But as part of a cycle that makes the product better.
[01:48:34.440 --> 01:48:44.300]  It's a weird form of art developing applications over time. And I do feel like that framing
[01:48:44.300 --> 01:48:50.020]  that Steve Jobs had in the last few events that he held as CEO of Apple, that Apple exists
[01:48:50.020 --> 01:48:57.420]  at this intersection of the liberal arts and technology. It's true at Apple's enormous
[01:48:57.420 --> 01:49:04.860]  scope. And it's true at the scope of a true small independent developer where there's
[01:49:04.860 --> 01:49:10.100]  obviously technology involved. We were just talking about playgrounds, obviously very
[01:49:10.100 --> 01:49:16.660]  technical, but there's this liberal arts process to the ongoing development of a program and
[01:49:16.660 --> 01:49:24.620]  how you keep it relevant. And I do think that the closeness of bare bones relationship to
[01:49:24.620 --> 01:49:30.880]  its customers from the get go. I mean, literally, since before it was a commercial product.
[01:49:30.880 --> 01:49:35.100]  You know, I remember the release notes to the earlier version, like BB edit 2.2. And
[01:49:35.100 --> 01:49:39.740]  they were largely, you know, I guess I read about them on tidbits, probably, or probably
[01:49:39.740 --> 01:49:45.260]  using it probably comps this Mac announce actually, to really go to really bring it
[01:49:45.260 --> 01:49:50.380]  back to the old days. But they were based on, you know, we heard from we heard from
[01:49:50.380 --> 01:49:55.100]  some of you who are using BB edit. Okay, here's, here's some answers to your problems. Enjoy.
[01:49:55.100 --> 01:50:01.060]  Yeah. Yeah. And, and, and that really informed the way we do it today. And yes, the mechanics
[01:50:01.060 --> 01:50:07.460]  might be a little bit different. And it's true, we don't do telephone tech support anymore.
[01:50:07.460 --> 01:50:15.780]  We just can't. But if you write in to support a barebones.com, and you have a question,
[01:50:15.780 --> 01:50:26.980]  or a problem, or request, or even just want to tell us how much you love it. Your email
[01:50:26.980 --> 01:50:37.580]  is read by a human being who appreciates it, even if it's a complaint, and still forms
[01:50:37.580 --> 01:50:44.860]  part of that hugely important cycle that that helps us make the product better.
[01:50:44.860 --> 01:50:49.580]  To me, the flip side of customer support, because I think it's two parts of the same
[01:50:49.580 --> 01:50:57.340]  coin is good documentation. And to me, both of these things have largely been lost, you
[01:50:57.340 --> 01:51:00.680]  can get tech support from Apple, I don't want to say you can't get tech support, you call
[01:51:00.680 --> 01:51:06.220]  1800 Apple, and you can go to Apple stores and get tech support. But it's mostly you
[01:51:06.220 --> 01:51:09.860]  can't get tech support from Apple in the way that you get tech support from barebones or
[01:51:09.860 --> 01:51:17.620]  from the Omni group or from flying meat. And you, you don't get technical documentation
[01:51:17.620 --> 01:51:23.360]  like you do. I mean, BB edit is as is fully documented the manual. And again, it's near
[01:51:23.360 --> 01:51:26.900]  and dear my heart, there's parts of the manual that I've, you know, still there with my words
[01:51:26.900 --> 01:51:34.020]  in them from when I was working on it. But again, it's the recurring theme in the apps
[01:51:34.020 --> 01:51:41.540]  that that I've been using for a decade or longer, or two decades, in some cases. And
[01:51:41.540 --> 01:51:45.580]  a there's a very strong correlation between the company, you know, the independent developers
[01:51:45.580 --> 01:51:51.300]  who are committed to customer support, and who are committed to really good documentation.
[01:51:51.300 --> 01:51:59.080]  And not and not just letting that go. And I yeah, and that well, and that was another
[01:51:59.080 --> 01:52:05.040]  thing I learned from the think days. It's like manuals are important. Yeah. The documentation
[01:52:05.040 --> 01:52:11.500]  is important. Release notes are important. The guy who hired me into his job at sex support
[01:52:11.500 --> 01:52:20.340]  actually eventually came back to the company and wrote documentation for Lightspeed C and
[01:52:20.340 --> 01:52:33.620]  Lightspeed Pascal. He actually wrote documentation for us as well. And yeah, I cannot overstate
[01:52:33.620 --> 01:52:51.420]  the importance of that. Our change notes are perhaps the best expression of that. I'm trying
[01:52:51.420 --> 01:52:58.420]  to figure out how to frame this because there's so much history there. But whenever a change
[01:52:58.420 --> 01:53:05.460]  got committed, it's very important to write up the nature of the change in the way the
[01:53:05.460 --> 01:53:13.340]  customer can understand it, because that change is going to go directly into the change notes.
[01:53:13.340 --> 01:53:17.900]  Well and there it is as a first class item right there in the help menu change notes.
[01:53:17.900 --> 01:53:22.300]  And that was new for 13. Actually, I don't know why I didn't do it before. But they are
[01:53:22.300 --> 01:53:28.660]  they're both the they're both I don't know if BB edits documentation is the goal. It's
[01:53:28.660 --> 01:53:32.540]  certainly excellent. And again, you can even take out the chapters that are still there
[01:53:32.540 --> 01:53:38.860]  that I've worked on. So take out any self serving aspect of my praise for the BB edit
[01:53:38.860 --> 01:53:45.660]  user manual. It still is still good. It's very good. But the change notes in addition
[01:53:45.660 --> 01:53:53.580]  to their comprehension, they're, they're always worth reading. There's, here's, here's one.
[01:53:53.580 --> 01:53:59.980]  It's very recent. This might even be the beta. It's 13.04. I just have to read this. I love
[01:53:59.980 --> 01:54:06.540]  it. This is but this is why it's worth pouring over the BB edit change notes. It's bug 380460.
[01:54:06.540 --> 01:54:11.100]  For performance reasons, BB edit will skip to drawing the invisibles upside down question
[01:54:11.100 --> 01:54:18.540]  mark glyph for characters in the BMP, quote, private use area. And then you got the Unicode
[01:54:18.540 --> 01:54:22.380]  numbers there. There's there's these unique, you know, a series of Unicode byte sequences
[01:54:22.380 --> 01:54:28.180]  that are private use area in the Unicode standard. And now BB it's just going to draw them as
[01:54:28.180 --> 01:54:34.020]  invisibles for performance reasons. But then it says the Apple symbol and it gives its
[01:54:34.020 --> 01:54:41.780]  exact bytecode is now excluded from that test because it is sacred. Right? Because that's
[01:54:41.780 --> 01:54:45.740]  what happened. What happened was in the old days, it was option G right is how you type
[01:54:45.740 --> 01:54:52.940]  an Apple logo. Right? Am I remembering? Nope, that's option shift, K option shift K option
[01:54:52.940 --> 01:54:56.780]  G is the copyright symbol. I knew that was one of them. Yeah, option shift K. You've
[01:54:56.780 --> 01:55:03.020]  been able to use option shift K to type an Apple logo as far back as you've probably
[01:55:03.020 --> 01:55:08.780]  all the way back to the get go. But in the old days, that was just, you know, there were
[01:55:08.780 --> 01:55:13.140]  only 255 characters, and they just reserved one of them for this, then they eventually
[01:55:13.140 --> 01:55:18.820]  did the right thing and moved it into the private use area of Unicode. And BB edit is
[01:55:18.820 --> 01:55:22.940]  not going to exclude it from the list because it is sacred. That's the sort of detail that's
[01:55:22.940 --> 01:55:24.980]  worth reading and release notes.
[01:55:24.980 --> 01:55:31.760]  Yeah, and it funny, funny, you mentioned that too, because I, I just pulled up a document
[01:55:31.760 --> 01:55:40.740]  and I hear some some years ago, one of my earliest Twitter friends, Patrick Burleson,
[01:55:40.740 --> 01:55:50.060]  who I think works at Apple now, asked me about change notes. He's like, how do you do it?
[01:55:50.060 --> 01:55:57.820]  And I said, you know, I've never really put it all down in one place. So I have a markdown
[01:55:57.820 --> 01:56:02.740]  document here, which I wrote because he asked me that question, and I've never done anything
[01:56:02.740 --> 01:56:09.220]  with it. And I have mixed feelings about whether I should, I probably should, I won't be giving
[01:56:09.220 --> 01:56:20.120]  away any secrets, you can tell how we do change notes. But towards the end, there's a note
[01:56:20.120 --> 01:56:24.240]  here that says it is hugely important that when as an engineer, you're writing commit
[01:56:24.240 --> 01:56:29.880]  notes, you must write them for the customer to read. That means that you should know your
[01:56:29.880 --> 01:56:37.500]  audience and take care with your spelling, grammar and writing style. And it goes on,
[01:56:37.500 --> 01:56:43.400]  there's a few more paragraphs, and I'm not going to bore you with them. But that's really
[01:56:43.400 --> 01:56:50.440]  the point here is that these change notes, a lot of folks write commit notes for other
[01:56:50.440 --> 01:57:00.160]  engineers to read. And it's not that that's unimportant. But engineers with access to
[01:57:00.160 --> 01:57:05.540]  the source code can figure out what you did by looking at the changes in the source code.
[01:57:05.540 --> 01:57:13.040]  The user facing rationale for the change, which is every bit as important, is something
[01:57:13.040 --> 01:57:19.760]  that you have to be able to communicate clearly to the customer when they read it. So trying
[01:57:19.760 --> 01:57:26.440]  to be cute or twee about your change notes doesn't benefit the customer. It's like they
[01:57:26.440 --> 01:57:34.500]  want to know what you did. And by setting it down clearly at the time you make the change,
[01:57:34.500 --> 01:57:39.800]  which is in the commit notes, there is no better time to do that. And so that's how
[01:57:39.800 --> 01:57:46.640]  we do it. When there's a code change, you write it up. It's written in English.
[01:57:46.640 --> 01:57:53.000]  Well, I can think of no better note to end on. Rich, I thank you for your time. Everybody
[01:57:53.000 --> 01:57:59.000]  can, of course, find out more about bbedit at barebones.com. And then Rich, you personally
[01:57:59.000 --> 01:58:09.000]  are at Siegel, S-I-E-G-E-L. You and I are fellow surname only preferred username people.
[01:58:09.000 --> 01:58:14.440]  Excellent Twitter follow. Anything else that you want to mention before we sign off?
[01:58:14.440 --> 01:58:24.680]  Oh, goodness, there's so much. Go get bbedit. It's a great product. I'm very proud of it.
[01:58:24.680 --> 01:58:33.280]  I'm very happy about the new version. We have that 30-day full evaluation period and then
[01:58:33.280 --> 01:58:37.580]  the free mode afterwards. So you can pay for it and get all the features. You cannot pay
[01:58:37.580 --> 01:58:42.760]  for it and still has an awesome editor. And you're happy to have them as users until they
[01:58:42.760 --> 01:58:44.720]  need them. I'm happy to have you as a user whether you
[01:58:44.720 --> 01:58:47.520]  pay me money or not. I love that.
[01:58:47.520 --> 01:58:53.920]  Better if you do. Better if you do, but you don't have to. And also, yeah, John, I want
[01:58:53.920 --> 01:58:59.120]  to thank you in particular for having me as a guest. I hope this isn't the last time.
[01:58:59.120 --> 01:59:01.360]  No. But I also want to thank all your listeners
[01:59:01.360 --> 01:59:14.640]  for listening. Yeah. Thank you, Rich.
