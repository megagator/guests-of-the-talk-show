[00:00.000 --> 00:03.120]  Daniel, it's always good to talk to you. How's your summer gone?
[00:03.120 --> 00:08.400]  Fast. It's one of these things. I guess it's accelerating as you get older. I think everything
[00:08.400 --> 00:13.840]  goes by. It seems like it's going by faster. And this summer, it seems to exemplify that,
[00:14.480 --> 00:19.040]  in part probably because we've been busy flying around here and there. Not flying,
[00:19.040 --> 00:24.000]  literally, but zipping around. So it's just been one of those summers where it's like a loosely
[00:24.000 --> 00:30.240]  connected series of days at home. And so it's like, oh, well, it's almost the end now. I kind
[00:30.240 --> 00:36.880]  of always look forward at the end of the summer to the quote unquote boring September where kids
[00:36.880 --> 00:41.680]  are back in school. It's like I'm guaranteed to be at home. Kind of look forward to just like
[00:41.680 --> 00:48.240]  having some long boring days at home. Yeah, I always felt that way too. September and
[00:48.240 --> 00:52.720]  October might be my favorite months of the year. I don't know why. It's like a combination of
[00:52.720 --> 00:59.440]  some of the best weather we consistently get in the Northeast. I like that sort of back to school
[00:59.440 --> 01:05.920]  sort of return to normalcy or the pattern, right? The sort of me. I mean, I'm the most
[01:05.920 --> 01:11.840]  creatureist of habits. Is that right? I'm the creatureist of habits. Sounds like a D&D
[01:13.200 --> 01:17.920]  role or something. I am one of the biggest creatures of habit. I'd say it that way.
[01:17.920 --> 01:24.400]  That maybe not pathologically so, but when I'm knocked off my habits, I get grumpy.
[01:25.280 --> 01:31.680]  Like my inner Larry David come out and needs to be suppressed and it's sort of enjoyable, right?
[01:31.680 --> 01:34.240]  Yeah. Pretty good.
[01:34.240 --> 01:39.200]  Right. It is. And it's, it is the privilege, right? The true privilege. I know people toss
[01:39.200 --> 01:46.080]  that around a lot in the last decade, but truly it is. You can appreciate it. It's so lucky
[01:46.080 --> 01:52.160]  that I love what I do and that I can, me being lost in my work for a couple of days in a row,
[01:52.160 --> 01:57.200]  it makes me feel good. It's like, man, what a privilege. I still think back to like the
[01:57.200 --> 02:05.040]  manual labor days. Like when I was a stock boy at a big sort of combination, a Walmart type store
[02:05.040 --> 02:11.360]  called Far More and I was the stock boy and Oh my God, I just hated it because it was so monotonous
[02:11.360 --> 02:16.880]  and it would be the same fricking stuff. Like every day at the, I used to work the second
[02:16.880 --> 02:23.360]  shift. So like three to 11 and it's like the store closed at 10, I think something like that,
[02:23.360 --> 02:30.000]  maybe nine, but anyway, my last hour or two, we called it blocking the shelves and all it meant
[02:30.000 --> 02:36.480]  was like you go to the big shampoo and hair product dial and go through from top to bottom,
[02:36.480 --> 02:41.520]  front to back, every single item, move all the product that was left to the front so that it
[02:41.520 --> 02:46.880]  looked in the morning when the store reopened, it looked like the whole aisle was freshly stocked.
[02:48.400 --> 02:53.120]  What a boring thing. I think about that too. It must be better. I don't know if they let
[02:53.120 --> 02:58.080]  teenagers do it, but maybe like if you're working after the store's closed, they'd let you use like
[02:58.080 --> 03:03.040]  AirPods or something, listen to podcasts or music or something. But we certainly didn't have
[03:03.040 --> 03:10.160]  anything like that. Just you left your own devices with the crap playing over the store speakers.
[03:10.720 --> 03:15.440]  And then some days it would be like, Hey John, we need someone to go out in a parking lot and
[03:15.440 --> 03:22.240]  round up the shopping carts. And it was like, Oh, this is awesome. Right? Cause it's something
[03:22.240 --> 03:29.520]  different. Right? It was like, if I had now, if I was the shopping cart wrangler five days a week,
[03:29.520 --> 03:34.800]  then it would have been like, we need you to block the shelves. Then that would have been my relief.
[03:34.800 --> 03:38.320]  Right. But it was like, just what a true privilege that I love what I do.
[03:38.960 --> 03:42.720]  Yeah. Well, let me ask you something. Cause I only started, well, first of all,
[03:42.720 --> 03:47.680]  I never knew what it was called when you pull the stuff forward, but I only I've noticed over
[03:47.680 --> 03:53.360]  the past few years, I have some kind of like empathy for the store. And I, now I like,
[03:53.360 --> 03:57.600]  when I buy something, I self block. I kind of do that too. And I don't know
[03:57.600 --> 04:02.560]  if I'm a nicely conscientious person who would have done that anyway, or if it's because I
[04:02.560 --> 04:06.560]  had the job for two. That's what I was wondering if you have like the empathy for the schmuck,
[04:06.560 --> 04:11.920]  who's going to go around having to do it. But yeah, I kind of feel like, I don't know. I feel
[04:11.920 --> 04:17.360]  like I'm a little bit like overly conscientious about those kinds of things. Like my wife gives me
[04:17.920 --> 04:23.040]  kind of a hard time because like I, when I'm checking out at the supermarket, I like to put
[04:23.040 --> 04:29.840]  I like to put all the stuff on the half of the conveyor belt. That's closest to the worker.
[04:29.840 --> 04:34.160]  And she's like, why the heck are you doing that? I was like, well, it just makes it easier for them.
[04:34.160 --> 04:40.240]  But yeah, it's sort of like my thing I'd mentioned recently, I think on the show or
[04:40.240 --> 04:44.240]  else on the website, I always forget where I said it, but that I say thank you to like,
[04:44.240 --> 04:48.000]  Oh yeah. I heard that somewhere to our home assistance and not every time,
[04:48.000 --> 04:52.720]  but I try to, but the other thing I definitely do, but, and I know it's because I had the job
[04:52.720 --> 04:59.360]  for two summers is I always returned my shopping cart. It's, and I don't know that I, until I had
[04:59.360 --> 05:04.800]  the job once or twice a week for two summers that I ever realized just how many people just leave
[05:04.800 --> 05:10.640]  the carts randomly. And surely it didn't make me bitter about them. But I think before I had
[05:10.640 --> 05:14.880]  the job, even as a teenager, I might've done that too. Like, ah, the return thing looks like it's
[05:14.880 --> 05:18.400]  all the way down there. I'll just leave my cart here. It's an empty spot. It doesn't look like
[05:18.400 --> 05:22.800]  the lot's full. It's not taking up a necessary spot for cars, but then once you're the person
[05:22.800 --> 05:28.560]  who has to go through the whole parking lot and gather up every part. Yeah. I never did that again.
[05:28.560 --> 05:32.720]  But then do you worry that by returning the cart, you're depriving somebody of the job of
[05:33.360 --> 05:37.920]  returning the carts? Oh, I never thought about it that way, but I think, no, I don't think anybody
[05:37.920 --> 05:42.000]  ever resent it. Cause they've, I think anybody who has that job has other stuff to do anyway.
[05:42.000 --> 05:48.160]  And it's the more carts, it certainly was Mike when I had the job, it, the more carts that were
[05:48.160 --> 05:54.400]  actually stacked in with each other in the official return troughs. I don't know what
[05:54.400 --> 05:59.840]  you call those things. It always seemed better and nicer. Cause it always seemed like the ones
[05:59.840 --> 06:05.920]  that were left randomly were like at the four corners of the lot. Yeah. I kind of think about
[06:05.920 --> 06:11.120]  it cause I hate, well, I sort of hate like all social interaction, which is ironic in a way,
[06:11.120 --> 06:15.120]  because I, here I am chatting with you. I love chatting with people. I love being social. I
[06:15.120 --> 06:19.680]  don't actually like engaging with the, like the checkout person at the supermarket. So
[06:20.480 --> 06:26.320]  I will almost always go to the automated self-checkout thing. And then I wonder,
[06:26.960 --> 06:32.320]  am I like part of the problem here? Am I getting rid of somebody got fired because of me because
[06:32.320 --> 06:36.480]  they didn't need as many people to check people out. But I think you're like me too, because if
[06:36.480 --> 06:41.600]  you do talk to the checkout, if you do go to the human, you are going to be friendly and make some
[06:41.600 --> 06:47.680]  point of sort of just being just a little bit like, Hey, I appreciate that you're here doing
[06:47.680 --> 06:53.440]  a hard job. So I do, but that's what I'm seeking to avoid. It's not that I'm antisocial with them.
[06:53.440 --> 06:58.400]  I'm not really introverted. And like you say, here we are on a podcast talking, right? And it's like
[06:58.400 --> 07:03.440]  anybody who's ever met me. Hopefully I'm very friendly. I'm not shy. I just always had thought
[07:03.440 --> 07:09.840]  introverted meant shy. Right. And I'm not shy, but I do find social interactions exhausting
[07:09.840 --> 07:14.720]  to some degree. Not as much as other people do, but even this podcast, like when I'm done
[07:14.720 --> 07:20.240]  recording the talk show, I feel to some degree, emotionally spent, I couldn't believe that the
[07:20.240 --> 07:26.960]  eye-opening thing for me is that there are extroverts who actually draw energy from social
[07:26.960 --> 07:31.600]  interactions. Right? Like I kind of thought extrovert meant, yeah, I don't know. You're a
[07:31.600 --> 07:36.960]  little, you're a little obnoxious. Yeah. It doesn't have a great reputation. The word
[07:36.960 --> 07:42.240]  doesn't really. Yeah. I mean, it has a reputation of kind of a go getter, I guess.
[07:42.240 --> 07:49.600]  Yeah. But it's that explanation that introvert, all social interactions draw from your emotional
[07:49.600 --> 07:55.600]  energy and extroverts, like suck it up and get more energy and therefore can keep going.
[07:55.600 --> 07:59.920]  Right. That once an extrovert is doesn't never wants the party to end. I was like,
[07:59.920 --> 08:04.640]  whoa, that's not me. It's, I mean, it's really interesting because I always thought also that
[08:04.640 --> 08:13.760]  I was just 110% extrovert and my wife identifies as the same amount of introvert. And, but it
[08:13.760 --> 08:17.680]  definitely, when you start thinking about those definitions and you compare yourself to the
[08:17.680 --> 08:23.680]  experiences of people who maybe legitimately are introverts, I think we all have a little bit of
[08:23.680 --> 08:30.160]  both. So I definitely have that experience that it's just like, and I think it's also like what I
[08:30.160 --> 08:34.800]  was saying about being overly conscientious that takes it, that takes energy just to have like the
[08:34.800 --> 08:42.000]  concern of how you're going to come off to somebody or what they're going to think of you, et cetera.
[08:42.000 --> 08:45.920]  Right. And I don't know, like, you know, helping to bag my own stuff and.
[08:45.920 --> 08:47.680]  Yeah, of course. Got to do that.
[08:47.680 --> 08:52.400]  Yeah. Somebody the other day, I was checking out at our local grocery store and the checkout guy
[08:52.400 --> 08:57.920]  is a place with no self-check. I might use that more frequently for the same reason as you,
[08:57.920 --> 09:01.840]  but he said, I'm his favorite type of customer. And I had no idea where he was going with it.
[09:01.840 --> 09:06.080]  And he said, well, cause you bring your own bags. And I don't know, Philly, I don't know,
[09:06.080 --> 09:11.920]  has Boston done this or I know. Yeah. Well, in my suburb of Boston, Arlington, we have,
[09:11.920 --> 09:16.160]  they got rid of the plastic bags. That's where Philly is. And Philly was supposed to do it like
[09:16.880 --> 09:23.760]  right at the outset of 2020. And I don't know why, God knows what the explanation was,
[09:23.760 --> 09:30.720]  but something COVID. Okay. We'll delay it. And it's like, I don't know. I guess because they
[09:30.720 --> 09:37.440]  sort of wanted, I guess the thinking was that when we were so feared, fearful that COVID was
[09:37.440 --> 09:42.720]  spreading through fomites, that they wouldn't even let you bring your own bag. Right. It was like,
[09:42.720 --> 09:47.040]  they went the opposite way where screw the environmental impact. Right now we're in a
[09:47.040 --> 09:51.840]  pandemic and I get it because we didn't know. Right. Nobody knew. It really took surprisingly
[09:51.840 --> 09:55.440]  long to figure out how the hell COVID spread so that when we thought it could be fomites,
[09:55.440 --> 10:01.680]  so let's be careful. I remember our local Trader Joe's, which you think of as a forward thinking,
[10:01.680 --> 10:08.800]  lefty, hippy dippy sort of chain, right? The one, the type of place that was the earliest
[10:08.800 --> 10:14.640]  to have customers bringing their own bags to pack up all their groceries. The rule was you
[10:14.640 --> 10:19.360]  can bring your own bag, but you have to leave them in the bottom of your cart. And we're going to,
[10:19.360 --> 10:26.240]  we'll put all your items back in your cart and then you go out in the parking lot and bag them
[10:26.240 --> 10:30.640]  yourself. Yeah. Again, I don't think that's unreasonable. I laugh now because it seems
[10:30.640 --> 10:35.520]  ridiculous, but I guess that's why the city of Philadelphia paused the no plastic bags thing,
[10:35.520 --> 10:40.400]  because they were sort of, hey, these plastic bags are like sealed up and so we'll let you use them.
[10:40.400 --> 10:45.600]  But anyway, he said, it's because you brought your own bags and I don't know. And I was like, huh,
[10:45.600 --> 10:51.600]  well, I'm glad he appreciates that because you're the friend of the worker. All right. Let's thank
[10:51.600 --> 10:56.800]  our first special friend. All right. Good friends at Linode. This is actually where I have hosted
[10:56.800 --> 11:01.920]  Daring Fireball now for more years than I can count. Although if I really wanted to, I'm sure
[11:03.040 --> 11:07.120]  could go back and count them. One of the new things they want me to tell you about is their
[11:07.120 --> 11:13.440]  new managed database system, fully managed database service for, and here's where I start
[11:13.440 --> 11:18.640]  mispronouncing the names of these database systems, my sequel, which in my head for years
[11:18.640 --> 11:26.240]  and years, I thought was pronounced my SQL post grass QL, or is it pronounced posts grass SQL
[11:27.600 --> 11:34.800]  Mongo DB, I'm pretty sure is pronounced Mongo DB and more, and you can easily deploy high
[11:34.800 --> 11:40.560]  performance database clusters. And these managed databases allow you to quickly deploy a new
[11:40.560 --> 11:46.080]  database and defer management tasks like configurations, managing high availability,
[11:46.080 --> 11:52.480]  disaster recovery, backups, data replication with managed databases. You get all of that
[11:53.040 --> 12:00.560]  fast, simple deployment, secure access, daily backups included, and flexible plans
[12:00.560 --> 12:07.360]  for really big instances and really smaller ones. They like everything else Linode does.
[12:07.360 --> 12:11.680]  They really do scale from the smallest of customers to truly big enterprise ones.
[12:11.680 --> 12:18.000]  Go to linode.com slash the talk show and learn more. And you can also see why Linode has been
[12:18.000 --> 12:24.160]  voted the top infrastructure as a service provider by both G2 and trust radius. Other things I'll
[12:24.160 --> 12:30.800]  just throw in award-winning support that they offer 24 hours, seven days a year, three 24 hours,
[12:30.800 --> 12:36.080]  seven days a week, 365 days a year to every level of customer that you get the same top
[12:36.080 --> 12:40.240]  knot support as a big enterprise company. Even if you're just a single person on a single plan,
[12:40.240 --> 12:44.480]  ease of use and set up developers have been trusting Linode for projects, big and small
[12:44.480 --> 12:50.240]  since 2003, they make cloud computing fast, simple, and affordable, and allow you to focus
[12:50.240 --> 12:58.000]  on your projects, not your infrastructure. So once again, visit linode.com slash the talk show.
[12:58.000 --> 13:05.120]  You can create a free account using your Google or GitHub account to log in or just use your email
[13:05.120 --> 13:14.240]  address and you will get 100 bucks in credit just by using that URL linode.com slash the talk show.
[13:16.000 --> 13:20.560]  All right, real topics. This one's a bit heavy, but I'm really interested by it. Did you see,
[13:20.560 --> 13:26.960]  I linked to it yesterday as we record this New York Times story about a father who had uploaded
[13:26.960 --> 13:33.920]  a naked photo of his son at a doctor's advice because he had like a rash on his genital area.
[13:33.920 --> 13:38.560]  Do you see this story? I heard you talking with Ben on dithering about it just today.
[13:39.360 --> 13:43.040]  So we talked about it. I wanted to talk about it here, but for anybody who didn't read the story,
[13:43.040 --> 13:48.480]  it was reported by Kashmir Hill, who's done fantastic work. She used to be at Gizmodo
[13:48.480 --> 13:54.480]  years ago. And it's no surprise that she's worked her way up to the New York Times. And just if you
[13:54.480 --> 13:59.920]  really think about the mechanics of being the reporter, like it's such a hard story to get.
[13:59.920 --> 14:05.360]  And that sort of meta level really fascinates me. And the father in question, he only used his first
[14:05.360 --> 14:12.560]  name in the story, but basically the infant son had a seemingly a genital rash of some sort,
[14:12.560 --> 14:16.480]  talked to the doctor a couple years ago. I think it was probably, I forget the exact day,
[14:16.480 --> 14:22.800]  but I'm almost certain if it was like 2020 COVID stuff is in place. So much medicine was going to
[14:22.800 --> 14:29.040]  telemedicine. And the pediatrician said that that sounds worrisome. Can you take some pictures of it
[14:29.040 --> 14:34.240]  and send me some pictures? And he used his Android phone to take pictures of it as best he could.
[14:35.200 --> 14:41.520]  And then he sent it to his wife. So I guess his wife maybe was the one sending the pictures to
[14:41.520 --> 14:45.120]  the doctor, sent it to his wife through Google Hangouts. And then a couple of days later,
[14:45.120 --> 14:51.680]  his Google account has been flagged and is like deactivated or paused and more or less comes down
[14:51.680 --> 14:57.920]  to their AI system. The phone went, the picture went from his or pictures went from his Android
[14:57.920 --> 15:06.000]  phone to Google Photos. From Google Photos, he sent it to his wife by Hangout and that's it.
[15:06.000 --> 15:13.200]  But their AI systems had flagged the photo or photos of his son's genitals as CSAM,
[15:13.200 --> 15:18.800]  suspected child sexual abuse material. Trying to make this long, well-reported story short.
[15:18.800 --> 15:23.440]  It was human reviewed, but the human reviewer thought it looked suspicious too. And then that's
[15:23.440 --> 15:28.960]  it. But this guy had everything in Google. It was like a Gmail address that he'd been using
[15:28.960 --> 15:32.320]  since the very, he was apparently a very technically minded, I think he was a software
[15:32.320 --> 15:38.640]  developer even. Got on Gmail early, had been using it as his primary email address. His Android phone
[15:38.640 --> 15:44.800]  was using Google Fi, their cellular service as a cell provider. So that got shut down too. So he
[15:44.800 --> 15:52.000]  lost his phone number. And all of his two-factor stuff was in Google Authenticator. So if you lose
[15:52.000 --> 15:58.640]  your primary email address and you lose your phone number for SMS backups and you lose your
[15:59.200 --> 16:05.200]  Google Authenticator, think of how many things you'd be locked out of. And I know, I guess,
[16:05.200 --> 16:10.160]  a lot of things with two-factor have those things you can print. They're like authenticator codes,
[16:10.160 --> 16:14.480]  but you get like a list of 10 of them and they say, print these out and put them in a safe place.
[16:14.480 --> 16:17.920]  So maybe he wasn't permanently locked out of everything else in his life, but that's a lot,
[16:17.920 --> 16:23.280]  right? And of course, then this thing goes to law. It's not just, oh, a tale of a father who
[16:23.280 --> 16:28.480]  lost his Gmail account. But then it went to the, it was reported to the police, the police
[16:28.480 --> 16:33.520]  investigated. The police investigated, this is where the story at least has somewhat of an upbeat
[16:34.080 --> 16:41.280]  tint, where the police looked into it and clearly saw that this, yeah, what, this was incorrect.
[16:41.280 --> 16:46.480]  This was a father taking pictures of his son and it happened to be the genitals. But at the
[16:46.480 --> 16:52.240]  doctor's advice, this is no question about it. This is not sexual abuse. This was trying to get
[16:53.440 --> 16:58.000]  dermatological care for an infant. And, you know, anybody who's had a baby,
[16:58.000 --> 17:02.800]  I think knows that you're wearing diapers all day. And you know, what are they doing in the diapers?
[17:02.800 --> 17:07.440]  They're making them wet one way or the other. The rashes and stuff happened down there. I mean,
[17:07.440 --> 17:12.080]  it's literally the phrase for a diaper rash. And there's all sorts of things. Nobody wants
[17:12.080 --> 17:16.640]  a rash. And if you do get a rash, where's the last place you would like a rash, right?
[17:16.640 --> 17:20.800]  So the police looked into it and that, that was, that all went well, right? Cause you can imagine
[17:20.800 --> 17:26.400]  how that can go south. There've been stories along these lines where child protective services gets
[17:26.400 --> 17:32.400]  involved. And if the first interaction doesn't go quite right, they can take your child away,
[17:32.400 --> 17:40.560]  which is, I don't know. I can't imagine it, right? That didn't happen at least,
[17:40.560 --> 17:44.400]  but he did get locked out at Google. Yeah, it's well, it's sort of, it makes you wonder
[17:45.600 --> 17:51.760]  how often this happens and does it, are there worse consequences that haven't been reported
[17:51.760 --> 17:56.880]  in the New York Times? Right. Right. And one of the things that, that Kashmir Hill emphasized
[17:56.880 --> 18:02.560]  in her story is that there's no, we collectively outside Google and Facebook and whoever else
[18:02.560 --> 18:09.120]  does this sort of AI-based scanning have no idea how many people there are because they don't
[18:09.120 --> 18:14.800]  report the numbers of, and they certainly don't want to report the number of false positives,
[18:14.800 --> 18:20.720]  right? The people wrongly accused or people who say they are. Google's internal system to human
[18:20.720 --> 18:27.920]  review it clearly failed in this case. I mean, I guess we're presuming that what, and Kashmir Hill,
[18:27.920 --> 18:32.480]  it says that she saw the photos and questioned herself as the reporter, found the whole story
[18:32.480 --> 18:37.760]  credible. The police did investigate and, you know, issued a report that exonerated him.
[18:37.760 --> 18:43.680]  So I think it's safe as we can be to say that he was wrongly flagged and Google's human review
[18:43.680 --> 18:48.720]  clearly failed. How many times that happened? So we have no idea because it, for obvious reasons,
[18:48.720 --> 18:53.520]  most people, if that happened to them, were wrongly accused of this. How do you go public
[18:53.520 --> 18:57.760]  with that? Right. The last thing you want to do is go public and have your name associated with
[18:57.760 --> 19:04.240]  being suspected of this, even if you're innocent. Right. Yeah. Yeah. I find it also just kind of
[19:04.240 --> 19:11.040]  the last thing I, the whole human review thing makes sense on many levels, but the last thing
[19:11.040 --> 19:16.560]  I'd expect sending a photo of my kid to a doctor is that somebody at Google was going to eventually
[19:16.560 --> 19:21.440]  be looking at the photo. Right. Like it just, whatever the circumstances are. So, so an AI
[19:21.440 --> 19:27.760]  system, I'm sure it's like one of those things that you agree to when you say, okay, after not
[19:27.760 --> 19:33.120]  reading the long legal agreement on Google photos or whatever, but I don't know, it's, it's, it's
[19:33.120 --> 19:42.640]  in a way it's like, it's just such a weird. Consequence to not only have your child's picture
[19:42.640 --> 19:50.320]  reviewed by somebody at Google, but the child's genitals. And it's like, well, that's everything
[19:50.320 --> 19:57.920]  that's creepy about this to me is like the parts of it that aren't actually what the, uh, or alleged
[19:57.920 --> 20:05.520]  or feared behavior was. Yeah. It's one of those things where I can't really imagine being the
[20:05.520 --> 20:13.920]  sort of mentally ill person who wants to look at child sexual abuse material. And so it's,
[20:13.920 --> 20:21.280]  I think, and I think most it's good for humanity that the 99 point, whatever percent of people
[20:21.280 --> 20:28.160]  have repulsed by it as opposed to. Attracted to it, but just trying to imagine a little,
[20:28.160 --> 20:33.600]  you can kind of see, you know, how like kid playing in a bathtub, which is what I posted
[20:33.600 --> 20:37.760]  on during fireball, but we took pictures of our son in the bath at bath time. You know,
[20:37.760 --> 20:43.680]  we didn't think twice about it. 18 years ago. I don't know. And I think there's pictures of me
[20:43.680 --> 20:49.440]  from the seventies, like John's first bath or whatever. I think any human reviewer can look
[20:49.440 --> 20:54.400]  at that and say, yeah, that's it's a naked baby, but it's, this is typical family photo stuff.
[20:54.400 --> 21:01.440]  Whereas like my son has a skin condition and swelling on his genitals and trying to show it
[21:01.440 --> 21:07.040]  as best you can to the doctor. I can imagine how like a reviewer would say, Oh yeah, this one's
[21:07.040 --> 21:11.200]  a problem. This goes into a different pile than an 11 month old. Who's in the swimming pool in
[21:11.200 --> 21:16.400]  the backyard on a sunny day or something like that. But it raises some technical questions
[21:16.400 --> 21:21.120]  too. Really can't stop thinking about it. How it's such a, it's so nuanced. The only thing I can say
[21:21.120 --> 21:27.600]  for sure is it seems to me that Google should have a better way of appealing this and that
[21:27.600 --> 21:32.400]  a proper human appeal, even after the first human reviewers said, this is still suspicious,
[21:33.200 --> 21:38.560]  that somehow this, there should be some second level where somebody could look at this and look
[21:38.560 --> 21:45.040]  at all this other guys, other photos and say that this, and maybe even take the time to call it
[21:45.040 --> 21:50.800]  guys doctor. Right. And if you're the, this mark that the subject of the story and say my, my
[21:50.800 --> 21:56.160]  child's pediatrician is Dr. So-and-so's office. Here's the phone number, which I think is the
[21:56.160 --> 22:02.000]  stuff the police went through. Right. That at some level, if Google had had somebody who could spend,
[22:02.560 --> 22:06.640]  I don't know, half an hour looking into it, they'd say, Oh yeah, this is, this was a mistake.
[22:06.640 --> 22:13.680]  We're very sorry. Everything's back to normal, but maybe they can't effectively because the
[22:13.680 --> 22:20.400]  because the scale of how many photos they're looking at is too much. I mean, hopefully the
[22:20.400 --> 22:28.560]  scale of people where the AI system says, this is suspicious. The first human reviewer says,
[22:28.560 --> 22:38.720]  yes, this seems bad. Hopefully that number isn't so low and that when that happens and it is legit
[22:38.720 --> 22:46.320]  CSAM. Right. It is the system working to identify abuse material. The person who's responsible for
[22:46.320 --> 22:51.440]  it feels bad that they got caught. We're scared knowing that, Oh my God, this is going to be
[22:51.440 --> 22:56.800]  investigated. I'm in trouble that the last thing they would do is behave like an innocent person
[22:56.800 --> 23:00.480]  and be like, I want to keep talking to you about this. I would like to speak to a supervisor. I
[23:00.480 --> 23:07.120]  don't know. Right. But we, nobody, we it's a, these services are so huge and have so many
[23:07.120 --> 23:12.480]  users billions, right? For Google photos. I mean, got to be close to a billion.
[23:12.480 --> 23:21.120]  Yeah. And if the accuracy rate is 99.999 or add another nine, make it six nines that that sliver
[23:21.120 --> 23:27.920]  that's less than a hundred percent with a billion users could be frighteningly high. Right.
[23:27.920 --> 23:34.800]  Yeah. Yeah. I mean, it's just, the whole thing also just draws my thinking to what
[23:34.800 --> 23:41.280]  innocent thing are you doing that technology and the way our society is set up could it's like the
[23:41.280 --> 23:46.880]  plot for a, for a movie almost. Right. It's like, well, what innocent thing you would never think
[23:46.880 --> 23:55.040]  is going to cause you to like go down this terror hole of like police. And I mean, just hearing
[23:55.040 --> 24:02.560]  about this guy, the experience at all. I mean, in the fact that it was like, you and I know this
[24:02.560 --> 24:07.680]  many people listening though, this is when you're caring for your kid and dealing with doctors that
[24:07.680 --> 24:13.520]  like, all of the intentions here were just about like taking care of his kid and then this is what
[24:13.520 --> 24:18.240]  happens. Right. And it really was at the advice of the doctors that take, try to take some pictures
[24:18.240 --> 24:23.760]  of this and let me take a closer look. I don't know. I, having read this story, I, and I even
[24:23.760 --> 24:29.040]  wrote this on daring fireball that they spoke to somebody who was an expert and said, I wouldn't
[24:29.040 --> 24:34.400]  take naked pictures of my children, but if I did, I wouldn't upload them to the cloud or something
[24:34.400 --> 24:40.160]  like that was her advice. And like I pointed out, like that's not feasible advice for most people,
[24:40.160 --> 24:45.600]  cause most people have their camera is going to be their phone. And their phone is almost certainly
[24:45.600 --> 24:51.840]  in the last decade set to automatically upload the pictures they take to the cloud. Right. Which is
[24:51.840 --> 24:57.200]  what you want overall, like for, for almost everybody listening, every single photo you
[24:57.200 --> 25:02.080]  take is something that you want uploaded to the cloud so that if you lose your phone,
[25:02.080 --> 25:04.720]  you don't lose it. Even you don't even lose the photos you took today.
[25:05.280 --> 25:10.800]  The more I think about this, I still completely empathize with this guy and I think it was wrong.
[25:10.800 --> 25:16.640]  What happened? It seems like surprising and shocking if Google is still entrenched in
[25:16.640 --> 25:24.320]  like not restoring his account, et cetera, but I'm thinking about it personally. I think there
[25:24.320 --> 25:30.480]  is something, not to say like I couldn't fall into another trap of like being wrongly accused
[25:30.480 --> 25:37.360]  of something, but I probably would stop short of taking such a picture. Maybe just cause I'm a
[25:37.360 --> 25:46.480]  little more, I don't know, like wouldn't want to do that with my own body. So there's something
[25:46.480 --> 25:52.880]  about it that just so happens. I don't think I would fall into this trap. I would probably
[25:52.880 --> 25:58.160]  make an appointment, go into in-person visit. That's a good, that's a good point. I hadn't
[25:58.160 --> 26:02.560]  thought about that, but if it were me and I had a rash down there and my doctor said,
[26:02.560 --> 26:09.280]  can you take a picture of it? Again, it comes back to our personal empathy with professionals.
[26:09.280 --> 26:14.240]  I think that I could have a somewhat comfortable conversation with my doctor and say, you know
[26:14.240 --> 26:19.920]  what? I'm actually not comfortable with that. Is there something else, some other thing that
[26:19.920 --> 26:25.120]  we can do? There's something about it that just, it does sort of like trigger a don't do that
[26:26.000 --> 26:33.440]  feeling. I might see now my mind's racing. I might be willing as weird as it would be,
[26:33.440 --> 26:37.120]  but it would be weird. Let's face it. It would be weird to go into your doctor
[26:37.120 --> 26:45.280]  and have your doctor look. Yeah. But if it's COVID or you're far away or whatever,
[26:45.280 --> 26:54.640]  I might be willing to do it through a telehealth web. Something ephemeral, right? The idea that
[26:54.640 --> 26:59.680]  you're not creating an artifact, even if you are, but there's something about creating the artifact
[26:59.680 --> 27:04.800]  that feels a little weird. Right. You know, I think probably most people listening have had
[27:04.800 --> 27:12.000]  telehealth consultations during the last two years. I had my annual wellness check,
[27:12.000 --> 27:18.800]  as they call it now back in 2020 over this webcam type thing that wasn't, you know,
[27:18.800 --> 27:23.840]  one of the name brand things like zoom, it was some kind of web-based portal my doctor has,
[27:23.840 --> 27:29.760]  which there's always, you know, possibilities of bugs. Right. But, but I sort of more or less
[27:29.760 --> 27:35.440]  implicitly trust that while there might be bugs, just like any system has bugs, it's designed to be
[27:35.440 --> 27:42.080]  ephemeral. And that if I show my doctor, my genitals on a webcam, that there's not going to be local
[27:42.080 --> 27:46.160]  copies, you know, and me knowing more about technology, knowing that it's going through a
[27:46.160 --> 27:51.520]  web browser, I feel pretty good that when you have a video web conference, there's no local
[27:51.520 --> 27:57.600]  cache of the files. I think, I don't know that it's all streamed. It doesn't seem like it. I never
[27:57.600 --> 28:04.240]  hear anybody talking about clean my Mac, adding a feature to clean up web chat, no video files.
[28:04.240 --> 28:07.760]  So I guess I would do it that way. But then you run in, this is where my mind goes. You run into
[28:07.760 --> 28:13.680]  the technical problem that your webcam probably is the worst camera you have. Right. And it's,
[28:13.680 --> 28:18.240]  if you're trying to show your son's rash, I don't know, maybe it doesn't show up. Right. And some of
[28:18.240 --> 28:23.280]  the most common problems critics looking at webcam footage have is getting skin color right and stuff
[28:23.280 --> 28:27.840]  like that, which is exactly what the doctor is looking for. Right. And it might even autocorrect
[28:27.840 --> 28:32.720]  to that's red, but you know, that's autocorrect to sort of make it more natural skin color or
[28:32.720 --> 28:38.640]  something like that. I don't know. It's all complicated, but it made me think back to the
[28:38.640 --> 28:43.760]  whole thing. And I wrote about this briefly on Daring Fireball, but it made me think back to
[28:43.760 --> 28:50.480]  the whole controversy last year with Apple's plans for CSAM fingerprinting, which is different
[28:50.480 --> 28:55.600]  than this AI model where the fingerprinting plan, Google does that too, but it's two entirely
[28:55.600 --> 29:01.680]  different systems. The fingerprinting idea is that there's an organization, the National Center
[29:01.680 --> 29:09.920]  for Missing and Endangered Children and NCMEC, I think is the way that the people in the know
[29:09.920 --> 29:17.680]  pronounce it. NCMEC and it's called NCMEC and the US government has authorized them through law
[29:18.400 --> 29:22.320]  that I guess they do, I think that might even be where they get all their funding, like the CDC.
[29:22.880 --> 29:28.880]  And their entire mission is to help missing and endangered children of all forms. And part of
[29:28.880 --> 29:35.360]  their legal responsibility is that they are legally authorized to hold a database of known
[29:36.080 --> 29:46.320]  CSAM material and that nobody else, material that is illegal for anybody else to hold. It is just,
[29:46.320 --> 29:51.840]  they can't share this database of images with Apple and Google and Facebook because it's
[29:51.840 --> 29:56.240]  illegal. It's illegal for them to share it. They're a super well-respected organization,
[29:56.240 --> 30:00.480]  but what they've done with a system that was originally, I think, designed by Microsoft
[30:00.480 --> 30:07.440]  and everybody credits as being very successful is creating hashes of all these images. And a hash
[30:07.440 --> 30:11.360]  is just like a 40-character string. I don't know how big theirs are, but let's just say
[30:11.360 --> 30:18.240]  it's 40 characters. It's like a couple of trillion to one odds of two of them being the same.
[30:18.240 --> 30:23.920]  And what they can distribute to companies like Apple and Google and Microsoft and anybody else
[30:23.920 --> 30:28.880]  they trust is the database of the fingerprints. And it's pretty much just, if you think about it,
[30:28.880 --> 30:34.400]  even if you don't, if you're not comfortable with the math or the algorithms behind hashing
[30:34.400 --> 30:42.800]  functions, it really is sort of the equivalent of an actual fingerprint. Like if you got my
[30:42.800 --> 30:50.400]  left index finger's fingerprint and you had the fingerprint, that fingerprint doesn't give you
[30:50.400 --> 30:55.200]  any information about me, right? You don't know how old I am. You don't know if you don't know
[30:55.200 --> 31:00.320]  if I'm a man or a woman. You certainly can't deconstruct what I look like from a fingerprint.
[31:00.320 --> 31:07.200]  It's like that's what the hashes are. But if there's an image on a user's cloud photos and
[31:07.200 --> 31:12.720]  you take the fingerprint of that image and that fingerprint is in the database, there's a very,
[31:12.720 --> 31:17.360]  very high chance that it's a match just by looking at the fingerprints in the same way that my
[31:17.360 --> 31:22.720]  fingerprint left at a crime scene matching the fingerprint the police just taken me, it's very
[31:22.720 --> 31:27.200]  high chance that I committed the bank robbery. Certainly a contributing evidence. That's looking
[31:27.200 --> 31:34.400]  for known CSAM. What affected this guy in the New York Times story is a system Google has and other
[31:34.400 --> 31:44.480]  companies seemingly have like Facebook and others to try to identify new CSAM, unknown CSAM. And the
[31:44.480 --> 31:49.680]  and the only way I think this has got to be true. I mean, there's absolutely it's common sense.
[31:49.680 --> 31:54.800]  There's no way that could be done through any other way than machine learning. There's no way that
[31:54.800 --> 32:01.120]  every single new photo uploaded to Google Photos or Facebook or whatever could be human reviewed
[32:01.120 --> 32:04.640]  first. And number two, you wouldn't want that, right? You don't want it wouldn't want every
[32:04.640 --> 32:11.200]  photo everybody takes to be looked at by employees of Google or contractors or whatever, right? But
[32:11.200 --> 32:17.280]  it's an entirely different thing. What really strikes me is Apple's proposed system last year
[32:17.280 --> 32:23.760]  was only about fingerprinting and not using any machine learning in the way that machine learning
[32:23.760 --> 32:29.600]  can you can now search iCloud photos and your photos app on your your Apple device and search
[32:29.600 --> 32:35.520]  for dogs and all sorts of pictures you've taken of dogs show up because of machine learning.
[32:35.520 --> 32:41.920]  And it can identify your children and you can this feature has been an Apple thing for a while.
[32:41.920 --> 32:45.920]  Google has the same thing where it's like, oh, that's a face. And I don't know who this is.
[32:45.920 --> 32:51.600]  Do you want to assign a name to this? And I can type in that's Jonas and the machine. Now I can
[32:51.600 --> 32:58.480]  type for Jonas in my photos. And I don't know if it has every photo of him. Correct. It probably
[32:58.480 --> 33:05.280]  has some errors, but also thousands of photos of my son show up. That's not what Apple was
[33:05.280 --> 33:09.520]  trying was proposing or even saying or hinting they would no hint that they were going to try
[33:09.520 --> 33:15.920]  to do that to identify CSAM. They were saying we're only going to do fingerprinting against
[33:15.920 --> 33:22.080]  this known database of material from the NC Mac and that they cite we've worked with them to
[33:22.080 --> 33:28.240]  design the system. But what was so controversial about it was that Apple was proposing to do the
[33:28.240 --> 33:36.880]  fingerprinting on your device before the photo gets sent to iCloud. And it really freaked people
[33:36.880 --> 33:42.160]  out. I think rightly so. Right. I said this on dithering too. It sounds weird that my own device
[33:42.160 --> 33:49.520]  would be checking my photos for fingerprinting against this database. But while Apple being Apple
[33:49.520 --> 33:56.480]  didn't say why my looking at their proposed plan, my thinking still is to this day, a year later
[33:56.480 --> 34:03.760]  that they designed that proposal with the idea in mind that eventually iCloud photos will be
[34:03.760 --> 34:10.560]  end to end encrypted so that they could at some point they couldn't do it on the server.
[34:10.560 --> 34:16.400]  And what Google did would be impossible to do on the server if Google photos were end to end
[34:16.400 --> 34:22.000]  encrypted. Right. Because the end to end encrypted means that the company in the middle has no way,
[34:22.000 --> 34:27.440]  no secret key to unlock the stuff. It is cryptographically secure. And even all the
[34:27.440 --> 34:34.080]  computing might of Google, maybe the institution on the planet with the most aggregate computing
[34:34.080 --> 34:42.240]  power can't feasibly decrypt even one photo if it was end to end encrypted. That proved super,
[34:42.240 --> 34:47.920]  super, super controversial. Google's system, the one that flagged this fellow and who knows at
[34:47.920 --> 34:52.560]  least two people in this report, who knows how many other people that we don't know about has
[34:52.560 --> 34:59.280]  been in place for years. And it was really with no controversy whatsoever. And that here's somebody,
[34:59.280 --> 35:06.560]  here's a guy who's at least his digital life was ruined and his personal life got extremely scary
[35:06.560 --> 35:12.320]  and worrisome with a police investigation for this for a while. And I'm just curious what your
[35:12.320 --> 35:17.200]  thoughts are on that. And should something like Google photos and iCloud photos be end to end
[35:17.200 --> 35:21.520]  encrypted and therefore keep these companies from doing what Google's doing?
[35:22.240 --> 35:29.120]  Yeah. I mean, my gut reaction to all of that is probably not surprising as I I'm all in on the
[35:29.120 --> 35:34.560]  Apple like privacy stance and all that stuff. And I guess I kind of fall on the side that just
[35:34.560 --> 35:41.600]  because technology could buy essentially invading our privacy, just because it could prevent
[35:41.600 --> 35:47.600]  terrible things from happening doesn't mean that it's necessarily worth the trade off. So I guess
[35:47.600 --> 35:52.960]  I tend to lean towards yeah, encrypt everything. I think that what you said about there not being
[35:52.960 --> 35:57.680]  any blowback about the Google thing, there's something proprietary, something about the
[35:57.680 --> 36:04.320]  proprietary ness of like your phone being yours. And like Google servers being Google's. It's like
[36:04.320 --> 36:10.400]  the difference between like, it's like the difference between like a guests like a restaurant
[36:10.400 --> 36:15.360]  or a club you go to like, padding you down, not a restaurant, but like a club, let's say you go to
[36:15.360 --> 36:19.920]  a club and they pat you down, like, make sure you don't have a, I don't know, a weapon or something.
[36:19.920 --> 36:24.320]  Yeah, yeah. No, I think we've all been to places like that. I mean, they have it now. I think it's
[36:24.320 --> 36:28.160]  a rule. I don't know if other sports do it. But I'm more familiar with baseball where you have to
[36:28.160 --> 36:32.400]  you have to go through an airport style magnetometer to get into Yankee Stadium now.
[36:32.400 --> 36:38.480]  I mean, right. Where whereas like, if there was some technology that allowed
[36:38.480 --> 36:44.640]  Major League Baseball to, I don't know, scan your house for weapons while you're watching a game at
[36:44.640 --> 36:49.280]  home, people would be like, that's a much different thing. It's obviously not great comparison,
[36:49.280 --> 36:52.800]  because there's, it's not, it's just just the idea, though, that you kind of have like,
[36:53.360 --> 37:00.640]  control over your own stuff in your own space. I think people are naturally inclined to think it's
[37:00.640 --> 37:10.080]  a violation to have a company exert its sort of authority over you. Yeah, in in your own space.
[37:10.080 --> 37:14.720]  Right. Right. And I don't know all this stuff, even with just what's described, what Google is
[37:14.720 --> 37:21.680]  described as doing. It makes me feel more comfortable not being an avid Google customer.
[37:21.680 --> 37:26.720]  And but at the same time, I feel like I could get it just because it's never happened to me with
[37:26.720 --> 37:31.360]  Apple. I don't know that means I'm necessarily any better off being all in on Apple stuff. I don't
[37:31.360 --> 37:36.640]  know for sure if there hasn't been any follow up from Google after the New York Times article. But
[37:36.640 --> 37:42.720]  how could this guy still not have his account restored? It's just feels so dense. You know what,
[37:42.720 --> 37:48.480]  it's it feels like the denseness of Apple's App Store review sometimes, right? Luckily,
[37:48.480 --> 37:54.400]  the App Store review denseness when it happens, isn't about whether you have access to all of your
[37:54.400 --> 38:01.120]  contacts and calendar dates and emails and all that. But it could it's similar it. But it could
[38:01.120 --> 38:05.440]  be an app you've spent a year of your life or your company's time working. I mean, the stakes
[38:05.440 --> 38:09.920]  are really high. It seems like Apple has done better on that. But we've had stories over the
[38:09.920 --> 38:15.360]  years of the App Store where developers have had bad interactions or rejections from the App Store
[38:15.360 --> 38:21.440]  that the review system did not work. It seemed everybody reading the story once it gets publicized
[38:21.440 --> 38:27.200]  seems to agree Apple screwed this up. But if it hadn't been publicized, it literally could flush
[38:27.200 --> 38:32.640]  an entire year or more of the developers time down the drain. I mean, it's high stakes.
[38:32.640 --> 38:41.200]  Yeah. And some of those instances had a very comparable sort of like, black box can't tell
[38:41.200 --> 38:47.120]  why they won't reinstate it. So that that rings similar to this. And it's like, at least what I
[38:47.120 --> 38:53.200]  saw in the article is just, well, they just said no, and no explanation why. But it seems like
[38:53.200 --> 38:57.360]  just there's definitely seems like there's something wrong with when the police say,
[38:57.360 --> 39:01.600]  like, there's no crime committed, like, there's something wrong if your system at that point
[39:01.600 --> 39:06.400]  doesn't allow you to backtrack. Yeah, I do. It seems clear that Google failed in some regard
[39:06.400 --> 39:10.960]  there. It seems like the exoneration from the police should be enough. And the fact that there's
[39:10.960 --> 39:18.320]  no mechanism. And again, I understand that the scale of Google and their photos that are being
[39:18.320 --> 39:26.400]  uploaded every day is so enormous. And there's a scaling issue with customer service, where the
[39:26.400 --> 39:37.040]  business model of these massive, what do we call them? Again, FAANG. Kind of arbitrary. I mean,
[39:37.040 --> 39:41.200]  Netflix doesn't really belong in that. I kind of feel like they just make it sound better,
[39:41.200 --> 39:50.560]  because it's FAANG, Facebook, Apple, Amazon, Netflix, and Google. Well, what about where's
[39:50.560 --> 39:56.240]  Microsoft? Microsoft should be in there. Right. But FAANG, Microsoft should definitely be in
[39:56.240 --> 40:01.760]  there. And Netflix, as much as I love them, should not. They shouldn't. But the scale of those
[40:01.760 --> 40:07.760]  companies, and I guess now that Facebook's meta in some people's style books, I don't know,
[40:07.760 --> 40:11.680]  ruins the whole thing. But I've gotten emails since I've written the story, and it seems like
[40:11.680 --> 40:18.000]  readers out there still say FAANG. I get it that the scale of these companies with a model of
[40:19.280 --> 40:26.240]  getting free users and scaling to literally the scope of the planet, right? One of the problems
[40:26.240 --> 40:31.920]  facing Facebook, growth-wise, is that they're at a point where they have so many billion users,
[40:31.920 --> 40:36.640]  that they've run out of people, right? It's not that everybody on the planet uses Facebook,
[40:36.640 --> 40:43.360]  but everybody who feasibly could and wants to is. And Google's at that scale, too.
[40:44.720 --> 40:49.760]  How do you provide customer support, where you can get a reasonable person who will actually listen
[40:49.760 --> 40:54.480]  to the story and will say, okay, I'll contact the police, and I'll send them to the police,
[40:54.480 --> 40:58.000]  will say, okay, I'll contact the police and have the police get me this report?
[40:58.000 --> 41:02.480]  Because you obviously can't just trust a report that's sent by the user. I get it that scaling
[41:02.480 --> 41:07.120]  might be incompatible with the scope of these services, right? And that before
[41:07.120 --> 41:15.360]  computers and the internet, there was just no way to have that level of users, right?
[41:15.360 --> 41:20.240]  And what are the organizations that came closest in the pre-computing era? I guess
[41:20.240 --> 41:26.320]  the IRS, in the United States, the IRS and the phone company, right? Like AT&T before the
[41:26.320 --> 41:34.320]  breakup. Every house in America that had a phone had AT&T long distance. AT&T pre-breakup was not
[41:34.880 --> 41:39.680]  well known for their customer service. The IRS is not well known for their customer service.
[41:39.680 --> 41:43.600]  Although I will say personally, over the years when I've done things like filing extensions,
[41:44.320 --> 41:49.840]  I know because you and I have commiserated on it, being like a self-proprietor who likes to
[41:49.840 --> 41:55.440]  do their own stuff. I've had interactions with the IRS and it's actually worked out pretty well.
[41:55.440 --> 41:59.760]  I actually think IRS, and I know that that's part of this new bill that the Democrats and
[41:59.760 --> 42:04.880]  Biden just passed to actually fund the IRS better. But even as underfunded as they've been,
[42:04.880 --> 42:08.880]  when I've needed customer service, it's been pretty good. But their reputation certainly isn't
[42:08.880 --> 42:13.920]  the best, right? I don't know. I guess part of the difference, Ben brought this up on dithering,
[42:13.920 --> 42:19.840]  but that these companies are sort of like quasi-governmental groups. And as bad as the
[42:19.840 --> 42:25.600]  reputation of the post office or the IRS, I don't know about other countries. Do other countries
[42:25.600 --> 42:34.720]  have better and more favorable views of their country-wide tax collection agency? My view,
[42:34.720 --> 42:40.400]  even as someone who's pretty left-leaning in the US and happily pays my taxes and feels like it's
[42:40.400 --> 42:46.880]  a privilege as a citizen, the US culturally, our creation myth was all about not wanting to pay
[42:46.880 --> 42:54.240]  taxes that we didn't authorize, right? I mean, being anti-tax is pretty central to the American
[42:54.240 --> 43:00.880]  culture. But at the very least, if it truly is a government agency in a democracy, you can demand
[43:00.880 --> 43:06.720]  some level of accountability, right? And you can say, like your congressional representative
[43:06.720 --> 43:12.880]  can get together and a majority of them can say, we're going to require the IRS to issue a report
[43:12.880 --> 43:17.680]  every year with how many people got audited, which they do, right? They issue reports like that,
[43:17.680 --> 43:23.360]  and they issue estimates of how much people who underpay on their taxes collectively,
[43:23.360 --> 43:27.920]  how much money is underreported, and what would that be by our best estimate? We don't get those
[43:27.920 --> 43:34.480]  numbers out of Google or Facebook or Apple or Microsoft on these issues of how many people are
[43:34.480 --> 43:39.280]  flagged and how many people complain when they get flagged that it was wrong. And it seems like
[43:39.280 --> 43:43.200]  somehow we should. I mean, and obviously the government can pass laws to make these companies
[43:43.200 --> 43:47.760]  do it. And I kind of feel like that's, I'm generally anti-regulation, but I actually
[43:47.760 --> 43:54.640]  feel like in this case, this is a case where carefully crafted regulation could be good for
[43:54.640 --> 43:59.440]  everybody involved, including the companies, because then rather than worrying that if
[43:59.440 --> 44:05.200]  nobody else is saying how many people, 150 Google photos users, I'm making this number up. We're
[44:05.200 --> 44:10.320]  reported for this by our system and our human review said, yeah, they should have their account
[44:10.320 --> 44:17.040]  closed and be reported. And 150 of them last year came back and objected and said, no, this is
[44:17.040 --> 44:21.120]  wrong. You've got it wrong. You should look again. Nobody wants to be the first to say that, right?
[44:21.120 --> 44:25.440]  Because who wants it out there? Then all of a sudden that's the tech news story of the day that
[44:25.440 --> 44:30.560]  last year, one of these companies flagged close to 200 people, or maybe it's a thousand people.
[44:30.560 --> 44:36.400]  We don't know. Right. But whatever it is, it, whatever the number is 48 people, 2000 people
[44:36.400 --> 44:40.400]  more, I mean, obviously the more publicity it's going to get, nobody wants to be the first to do
[44:40.400 --> 44:45.200]  it. But if the law said everybody had to do it, I guess the only way you'd look bad is if your
[44:45.200 --> 44:53.760]  system was flagging, if it's a 48 from one of the companies and 75 from another company and 2,500
[44:53.760 --> 44:57.600]  from another company. Well then yeah, but then that company has a problem, right?
[44:57.600 --> 45:01.120]  The other thing that stuck out to me, I wanted to say this before we move on to other less,
[45:01.120 --> 45:06.720]  well, I don't know if you think talking about system settings in Ventura is a cheerful subject,
[45:06.720 --> 45:11.680]  but it's cheerful in comparison. The other thing that I thought of today, thinking of before you
[45:11.680 --> 45:17.120]  and I recorded, I was out running errands and I should do it more often because boy, I get a lot
[45:17.120 --> 45:21.920]  of good ideas when I go for a walk, but it just popped into my head that one of the things I
[45:21.920 --> 45:28.560]  forgot about Apple's system. I was only thinking about the fingerprinting and comparison against
[45:28.560 --> 45:34.320]  the known database of fingerprints and that the objections were all about it being on the device
[45:34.320 --> 45:40.400]  side. And here when it's all on the server, everybody just is sort of, it's like the slow
[45:40.400 --> 45:44.320]  boiling frog. Everybody's just accepted that whatever these companies do with machine learning
[45:44.320 --> 45:48.640]  on the servers, well, that's their business, it's not my device. And I only thought about that part,
[45:48.640 --> 45:54.080]  but the other part that popped into my head was that part of Apple's proposal was,
[45:54.080 --> 46:00.960]  I think the number was 30 that even if there's a fingerprint match of a photo you were going to,
[46:00.960 --> 46:07.760]  if they put the system into place and a photo going from your iPhone to your iCloud photos
[46:07.760 --> 46:13.920]  account was fingerprint matched and matched a fingerprint in the Nic Mac database.
[46:13.920 --> 46:19.840]  It, you had to get to like, I think the number was 30 before the account would be flagged and
[46:19.840 --> 46:26.400]  then those have those 30 images human reviewed. Take a look that nothing funny is going on. This
[46:26.400 --> 46:31.760]  person hasn't been somehow attacked by somebody who's figured out how to create hash collisions
[46:31.760 --> 46:36.080]  with the Nic Mac database fingerprints. Whereas seemingly from this New York Times report,
[46:36.080 --> 46:40.240]  I don't think it quite said how many photos, but it certainly wasn't 30, right? It was like
[46:40.240 --> 46:45.360]  a handful of photos that he took. Maybe they only sent the doctor like two photos, but he took
[46:45.360 --> 46:50.640]  10 photos, but they all would have been the same, right? Like, or close enough that the,
[46:50.640 --> 46:56.480]  this guy's story of, here's my explanation for what happened would jibe with the fact that
[46:56.480 --> 47:01.600]  the dozen photos he took were all this from the same angle and the same lighting of the same age
[47:02.160 --> 47:07.920]  kid that I know on the same in the same like 10 minute time period because they have the
[47:07.920 --> 47:14.160]  timestamps on there too. It's, there is something to, I think what you're getting at is whatever
[47:14.160 --> 47:22.080]  Apple was proposing had built into it, a kind of defense against false alerts. Right. And
[47:23.600 --> 47:32.960]  even the, even the most modest default to like, I think it's pretty safe to assume that if you've
[47:32.960 --> 47:38.720]  got a real problem on your hands, it's not going to be like one set of photos in a 10 minute span
[47:38.720 --> 47:43.840]  one day out of a person's life. Yeah. Cause what came back to me was I wrote about this
[47:43.840 --> 47:49.200]  pretty extensively last year when Apple had the plan. And part of that was, I think I was on at
[47:49.200 --> 47:56.400]  least two press briefings over WebEx about it. It was the Apple had one that they initially planned
[47:56.400 --> 48:02.480]  and it was like a presentation explaining what they were doing. It was the presentation was more
[48:02.480 --> 48:06.960]  or less a rehash of the PDF they published. But then the nice part about a press briefing like
[48:06.960 --> 48:11.520]  that is then it was open to questions. And we in the media who were invited could ask questions
[48:11.520 --> 48:16.400]  of Apple's head of security. Ivan, I always forget how to pronounce his last name.
[48:16.400 --> 48:20.720]  Kerstich maybe? Yeah, Kerstich. Ivan Kerstich, who's been their head of security for a long time
[48:20.720 --> 48:24.640]  and truly has really, if you think about the weight of the world on his shoulders,
[48:24.640 --> 48:30.160]  among all the unsung executives at Apple, boy, there's somebody whose job is heavy.
[48:30.160 --> 48:34.880]  Just a real, just a, I think it's Yvonne just to get the people who are screaming at their
[48:34.880 --> 48:40.720]  podcast right now to settle down. But I might be wrong, but I think it's Yvonne. Yeah.
[48:41.680 --> 48:45.680]  I think you're right too. Now that I think about it. But of course I mispronounce everybody's name.
[48:45.680 --> 48:51.600]  Yeah. No offense, Yvonne. But no, but a very cogent explanation. It wasn't sugar coating it.
[48:51.600 --> 48:56.320]  It wasn't sugar coating it. And it really, but one of the things that was brought up about that
[48:56.320 --> 49:01.840]  30 limit and I forget it, maybe it's 20 and maybe they adjusted it, but they even said,
[49:01.840 --> 49:08.640]  they emphasize that if that number proves to be too high or too low, we can always change
[49:08.640 --> 49:16.640]  that number. If it's, if it ends up that there's proof and evidence that criminal CSAM distributors
[49:16.640 --> 49:21.680]  are getting away with it because they're doing it in batches of 20 or whatever, and then creating
[49:21.680 --> 49:26.960]  new accounts that they could lower the number. And if it turns out they, and he emphasized it,
[49:26.960 --> 49:33.440]  their math was like, I don't know, like a trillion to one that somebody could just wrongly be flagged
[49:33.440 --> 49:41.040]  for 30 fingerprints. Just a truly astronomically high number. But maybe not super astronomically
[49:41.040 --> 49:45.520]  high. It was something where it was like, if there's a billion iCloud users, I remember
[49:45.520 --> 49:50.800]  doing the math, there's like a one in a thousand chance. So I think it was a trillion was the
[49:50.800 --> 49:54.480]  number, but there's like a one in a thousand chance that someone's going to be flagged,
[49:54.480 --> 50:00.240]  which seems wrong. But the thing that I believe it was Yvonne, but Apple definitely emphasized
[50:00.240 --> 50:06.000]  was that by having a threshold that's this high, that the system is not intended and no system
[50:06.000 --> 50:12.080]  could reasonably be designed to catch every single thing. You can't, there is no feasible way
[50:12.080 --> 50:21.360]  to design a system where somebody who distributes one CSAM image is going to be caught without
[50:22.080 --> 50:29.280]  risking too many false matches, right? That the balance between doing it right and catching
[50:29.280 --> 50:33.680]  people who should be caught, but acknowledging you're not going to catch everybody, that they
[50:33.680 --> 50:37.680]  felt very comfortable with that number. And they emphasize, this is the part I wanted that popped
[50:37.680 --> 50:44.880]  into my head, that Nick Mac completely signed off on that. And Nick Mac had representatives singing
[50:44.880 --> 50:50.480]  Apple's proposals, praises that this is great. And part of the reason was that the people who
[50:50.480 --> 50:59.120]  have a problem with child pornography, it's a compulsion. It is a truly, it's profoundly
[50:59.120 --> 51:06.080]  compulsive behavior. And that the number of images that such people collect is astonishing.
[51:06.080 --> 51:12.080]  It's just appalling. And therefore, while you think, some of the people on the media might
[51:12.080 --> 51:17.440]  be thinking, or out there just thinking, why wait for 30? Geez, why not get them after 10 or
[51:17.440 --> 51:23.600]  something like that? The people who are out there who tend to get caught have more of this than,
[51:23.600 --> 51:28.080]  it's not even close to 30. It's sick how many numbers they have. So it does make me wonder how
[51:28.080 --> 51:34.000]  this guy at Google got flagged after what couldn't have been more than like a dozen photos. That
[51:34.000 --> 51:39.920]  seems like a second failing. Yeah. And not only that, but it doesn't, it would be a more clear
[51:41.440 --> 51:48.480]  cause for flagging if it was the fingerprints thing, because there wouldn't be any doubt
[51:48.480 --> 51:54.320]  about whether it was an AI issue or not. So it feels to me anyway, like the AI thing,
[51:54.320 --> 52:01.440]  while it would find novel material, that it wouldn't be as reliably vetted.
[52:01.440 --> 52:07.120]  Right. Yeah. And that sort of is what I'm thinking. And everybody can find this. And
[52:07.120 --> 52:12.160]  the AI stuff is getting so good, but it's always going to have holes, right? At some point,
[52:12.160 --> 52:17.840]  it's going to flag a dog as a cat and a cat as a dog in a way that a human wouldn't do. A human
[52:17.840 --> 52:22.960]  would laugh and say, that's crazy. That's so obviously a dog, not a cat. I can't even see why
[52:22.960 --> 52:28.720]  this AI system would think that dog is a cat. I don't know. The other thing I'm with you,
[52:28.720 --> 52:36.160]  I think, that I'm on the side of more end-to-end encrypted encryption. To take the trade-off of
[52:36.800 --> 52:44.000]  with end-to-end encryption, perhaps some stuff that would have been caught without it by a system
[52:44.000 --> 52:50.240]  like Google's will no longer be caught, but for the benefit of that with value and privacy,
[52:50.240 --> 52:55.840]  you're going to end up, some things are going to happen within the realm of one's individual
[52:55.840 --> 53:03.680]  privacy. Yeah, I basically take the stance that the technology existing to make law enforcement
[53:04.560 --> 53:10.880]  easier in some ways doesn't mean that's the right way to do it. And when people put up these
[53:10.880 --> 53:16.800]  arguments like, well, shouldn't the police have access to everybody's phone? I say, no,
[53:16.800 --> 53:25.200]  like make the police work harder, make the police find another way to get the bad guys. And in a way
[53:25.200 --> 53:32.640]  that doesn't involve having access to my phone. Right. It's a recurring theme of human psychology
[53:32.640 --> 53:39.040]  that I often come back to. I've talked about it with Facebook and the app tracking transparency
[53:39.760 --> 53:47.200]  and ad privacy in general, that these companies like Facebook in particular, who clearly is the
[53:47.200 --> 53:52.720]  big public objector to app tracking transparency and is the one whose stock has taken the biggest
[53:52.720 --> 53:58.240]  hit. And so I think it's very fair to hold Facebook up as the primary actor here. But
[53:59.680 --> 54:07.440]  even the secondary argument of that so many small businesses have grown and flourished by targeting
[54:07.440 --> 54:13.360]  ads through Facebook and Instagram, that wouldn't be possible to be targeted so accurately without
[54:13.360 --> 54:22.720]  widespread tracking. That once somebody has something like that, they truly feel entitled
[54:24.000 --> 54:30.080]  to have it forever. That by closing this loophole, you're taking something away from them.
[54:30.080 --> 54:35.360]  Even if that thing is something that was never really theirs to own, right? That the privacy
[54:35.360 --> 54:42.560]  of people who say, who click or tap the ask app not to track instead of the allow tracking
[54:42.560 --> 54:48.640]  button, they're the ones who own their personal privacy and should be able to declare whether
[54:48.640 --> 54:53.280]  they're being tracked or not. And the fact that these companies had that tracking without
[54:53.280 --> 54:59.920]  anybody's tacit agreement, even if it was something like you said earlier, seven pages
[54:59.920 --> 55:04.160]  down in a terms of service agreement that you just sort of scroll. I mean, everybody,
[55:04.160 --> 55:09.280]  that's one of the biggest jokes in all of computing. It goes back to the shrink wrap
[55:09.280 --> 55:13.840]  days where there was like a license on the box software you bought that says,
[55:13.840 --> 55:19.200]  as soon as you cut open this box, you've agreed to these terms, right? Right. I mean,
[55:19.200 --> 55:22.960]  in the early days of the web, people used to publish like funny things from terms of
[55:22.960 --> 55:27.600]  service agreements on box software, like how ridiculous it was and that you legally bound
[55:27.600 --> 55:32.400]  yourself to these terms that nobody reads just by opening the box. But that entitlement,
[55:32.400 --> 55:37.520]  like once you've got it, you feel entitled like with law enforcement and coming back to phones,
[55:37.520 --> 55:45.040]  like go back to the early days of the telephone, right? When the telephone went from something
[55:45.040 --> 55:49.520]  that was in the news that Alexander Graham Bell had invented. And now in addition to
[55:49.520 --> 55:53.920]  the telegraph there, it was only capable of sending Morse code. You could actually hear
[55:53.920 --> 55:58.240]  the voice of your loved ones from across town, across the state, across the country,
[55:58.240 --> 56:02.800]  even for obvious reasons was rapidly adopted by anybody who could afford it. And now everybody's
[56:02.800 --> 56:09.280]  got phones and everybody loved using them for generations, right? Like actual landline phones.
[56:09.280 --> 56:14.000]  But imagine if your law enforcement, how awesome it was that then you, all you had to do is get
[56:14.000 --> 56:20.240]  like a warrant for, you suspect Daniel Jalkitz, you know, and John Gruber are committing a crime
[56:20.240 --> 56:25.120]  and you get this warrant and then you just connect a pair of headphones with a piece of copper to the
[56:25.120 --> 56:30.000]  phone line outside my house. And you can listen, you can just listen to our phone calls, right?
[56:30.000 --> 56:36.000]  Like everybody's seen it. It's a trope, right? In movies, whether they're set in the
[56:36.640 --> 56:42.560]  forties or fifties or until very recently, you know, when, when it's no longer credible to,
[56:42.560 --> 56:47.600]  to think that people are using landline phones, but until just the last 10, 15 years,
[56:47.600 --> 56:52.480]  everybody knows it. But what a benefit to law enforcement. I don't think it was a mistake that,
[56:52.480 --> 56:57.760]  that it was legally permitted for the police with a search warrant to be able to tap somebody's
[56:57.760 --> 57:03.440]  phones. If they had a warrant that provided sufficient evidence that a crime might be
[57:03.440 --> 57:10.560]  committed, but then once they had it and they had it for so long, right? Like you and I were
[57:10.560 --> 57:14.720]  born in an era where that was already assumed to be something the police could have. We just grew.
[57:14.720 --> 57:18.720]  It was just part of the world around us that the police, if you're suspected of committing a crime,
[57:18.720 --> 57:22.960]  your phone might be tapped and they could just, they can hear you as clear as the person you're
[57:22.960 --> 57:29.680]  calling. Once that was taken away, that whole argument about the people who like Apple, who
[57:29.680 --> 57:35.520]  are making these phones should provide a backdoor for the good guys was sort of predicated on like,
[57:35.520 --> 57:40.720]  Hey, you're taking away something that's been an important part of our criminal process for decades.
[57:41.680 --> 57:47.360]  Yeah. And it's funny you saying like, you don't think it was wrong for them to do that. I
[57:47.360 --> 57:53.840]  basically agree. But then I wonder like in an alternative history where audio encryption
[57:54.800 --> 58:03.840]  was invented before the telephone and like every telephone call in history was encrypted into end.
[58:04.880 --> 58:10.240]  No, I wouldn't argue to give the police a decryptor. You know what I mean?
[58:10.240 --> 58:11.440]  Right. Right.
[58:11.440 --> 58:18.240]  So it's sort of where I think we're, you and I are both like very privacy oriented, but even us,
[58:18.240 --> 58:24.560]  we are sort of having our views on this a little colored by the circumstances of history. Like we
[58:24.560 --> 58:30.400]  think, yeah, it was fine when they did wiretaps because they always did. But I think maybe it
[58:30.400 --> 58:36.400]  wasn't fine. I mean, maybe it's not really fine. It's just circumstantially what they were able to
[58:36.400 --> 58:45.200]  do. And like, I think that might be the test. If the technology existed to prioritize telephone
[58:45.200 --> 58:52.880]  users' privacy over the needs and wants of law enforcement, would we have allowed that? And
[58:53.920 --> 58:58.720]  we wouldn't. I mean, a lot of people wouldn't. And I think I'd like to think that I would be back in
[58:59.600 --> 59:03.280]  whatever the fifties when the telephones happened out of forties, thirties.
[59:04.240 --> 59:05.760]  I don't know when it got widespread.
[59:05.760 --> 59:09.680]  Yeah, I don't really know, but I have to believe like in the same way, I don't think people
[59:11.120 --> 59:17.520]  really expect anybody to open their mail. There's certain expectations about,
[59:18.960 --> 59:23.280]  again, it's like, well, you don't expect it, but you also accept that the police might have a
[59:23.280 --> 59:29.520]  warrant and permission to do something like that. But I don't know. It's definitely, I empathize
[59:29.520 --> 59:36.080]  with the whole profession of law enforcement is definitely challenged by the empowerment of
[59:36.080 --> 59:43.120]  personal privacy that we have. But if you value privacy at all and you value the ability to ensure
[59:43.120 --> 59:48.720]  your own privacy, it's like even back with wiretaps, nobody was saying like criminals,
[59:48.720 --> 59:52.560]  you have to make a phone call if you're going to conspire with somebody. You're not allowed to go
[59:52.560 --> 59:58.160]  down to the river and meet with somebody behind a bush because police need to have access to your
[59:58.160 --> 01:00:04.080]  conversation. It's always been kind of like a question of try to catch the bad guys making
[01:00:04.080 --> 01:00:09.600]  mistakes with technology that we can control, that law enforcement can control. But there's always
[01:00:09.600 --> 01:00:18.400]  been a way for people to ensure or almost 99.999% ensure their privacy if they wanted to. And it's
[01:00:18.400 --> 01:00:23.040]  just gotten a lot easier now. Yeah, let's take another break here. And before we move on, I want
[01:00:23.040 --> 01:00:32.160]  to tell you about Memberful. You can monetize your passion with memberships. Memberful allows
[01:00:32.160 --> 01:00:38.720]  creators on the internet to build a sustainable recurring revenue. It is the easiest way to sell
[01:00:38.720 --> 01:00:43.600]  memberships to your audience. And it is used by some of the biggest creators on the whole web.
[01:00:43.600 --> 01:00:47.840]  And they have everything you need to run a membership program, including custom branding,
[01:00:47.840 --> 01:00:54.240]  gift subscriptions, Apple Pay, free trials, private podcasts, just for your paying members,
[01:00:54.240 --> 01:00:59.920]  and tons more. And they seamlessly integrate with the tools you already use things like WordPress,
[01:00:59.920 --> 01:01:04.160]  all sorts of stuff like that you have full control and ownership of your audience,
[01:01:04.160 --> 01:01:08.480]  your brand and your membership. Your members may not even know that they're going through
[01:01:08.480 --> 01:01:12.960]  Memberful. They're very much in the background, your brand is yours. If you ever do decide to
[01:01:12.960 --> 01:01:18.960]  leave, you can take your entire membership base with you. If you're not locked in to Memberful,
[01:01:18.960 --> 01:01:23.360]  you don't have to ask all of your members to unsubscribe and resubscribe to a new system.
[01:01:23.360 --> 01:01:27.840]  You can take them all with you. And they do it that way because it's the right way to do it.
[01:01:27.840 --> 01:01:31.520]  And it makes people think, well, that makes it more likely I'd sign up. And that's how confident
[01:01:31.520 --> 01:01:35.840]  they are that you're going to stay with Memberful once you sign up. They have a world class support
[01:01:35.840 --> 01:01:40.320]  team that is ready to help you simplify your memberships and grow your revenue. They know
[01:01:40.320 --> 01:01:46.320]  what works. They know what helps grow a membership. And they're willing to help you because they only
[01:01:46.320 --> 01:01:50.800]  make money when you make money. And they're only happy when you're happy. And you're only happy
[01:01:50.800 --> 01:01:56.320]  when your audience and your members are happy with what they're getting and what they're paying.
[01:01:56.320 --> 01:02:00.800]  And they really will. They'll help you every step of the way. You can get started for free
[01:02:00.800 --> 01:02:10.320]  with no credit card required upfront. Go to memberful.com slash talk show today. Once again,
[01:02:10.320 --> 01:02:16.960]  no credit card required upfront. Go to memberful.com slash talk show today.
[01:02:16.960 --> 01:02:20.400]  I've lost track of how many Memberfuls I'm subscribed to. I know I subscribe to Jason
[01:02:20.400 --> 01:02:27.200]  Snell's Six Colors. I subscribe to Relay FM, like the system-wide thing at Relay where they make a
[01:02:27.200 --> 01:02:31.040]  bunch of great podcasts. I don't know, dozens of others. I almost don't even want to look it up
[01:02:31.040 --> 01:02:37.840]  because I might rethink my monthly budget of my subscriptions. But that's how many people,
[01:02:37.840 --> 01:02:42.720]  individual creators on the web, I support personally through Memberful. It's a great
[01:02:42.720 --> 01:02:47.200]  experience as a customer. Moving on, one of the reasons I wanted to have you on the show, Daniel,
[01:02:47.200 --> 01:02:52.960]  I talked about it on my last episode with my esteemed friend, Mr. John Molt. And then I wrote
[01:02:52.960 --> 01:02:59.760]  about it on Daring Fireball fairly briefly, at least by my standards last week, of the current
[01:02:59.760 --> 01:03:09.360]  state of the all new rewritten system settings in macOS 13 Ventura. I always say macOS the number
[01:03:09.360 --> 01:03:15.360]  and then the name because the names, I cannot keep the name straight in hindsight. I think our
[01:03:15.360 --> 01:03:22.880]  old friend Wolf Wrench pointed this out back in the big cat days. So we're going back 15 years,
[01:03:22.880 --> 01:03:27.200]  but like back when it would be like, macOS 10.4 Lion?
[01:03:28.080 --> 01:03:30.560]  Puma. No, Tiger. 10.4 Tiger.
[01:03:30.560 --> 01:03:33.280]  Oh yeah, because that was the first really good one. That was the one where I thought,
[01:03:33.280 --> 01:03:38.400]  you know what, this macOS 10 thing is getting good. Yeah, 10.4 was Tiger. 10.5 was Lion.
[01:03:39.200 --> 01:03:40.800]  And then Mountain Lion was famous.
[01:03:41.360 --> 01:03:43.840]  10.5 was, I think, Panther. I'm embarrassed.
[01:03:43.840 --> 01:03:48.800]  No, because 10.6 was Mountain Lion, which was the one, the no new features.
[01:03:48.800 --> 01:03:52.240]  We're both wrong. We're both wrong. macOS 10.5 Leopard.
[01:03:53.600 --> 01:03:56.880]  And then Snow Leopard. You're getting ahead of yourself. The Lion and Mountain Lion was
[01:03:56.880 --> 01:04:00.720]  quite a bit later. It was like 10.10 or 10. something.
[01:04:00.720 --> 01:04:07.200]  All right. But it was true that 10.5 was some cat name and 10.6 was a slight.
[01:04:07.200 --> 01:04:09.520]  Snow Leopard. Yeah, Leopard and Snow Leopard.
[01:04:09.520 --> 01:04:13.840]  Yeah. Well, anyway, I just proved myself correct that I couldn't keep the cat names.
[01:04:13.840 --> 01:04:16.240]  I can't either, really. Some of them jump out at me.
[01:04:17.200 --> 01:04:27.680]  But at least the cat names let me associate. You know how like there's like people who do like
[01:04:27.680 --> 01:04:34.000]  memory tricks will teach you that there's like mnemonic tricks where if you imagine your house
[01:04:34.000 --> 01:04:41.920]  and that if you're supposed to remember the words green apple and typewriter, that if you imagine
[01:04:41.920 --> 01:04:46.400]  a place in your house where you've set down the typewriter with a green apple next to it,
[01:04:46.400 --> 01:04:49.760]  you can remember in a day later, someone say, what were you supposed to remember?
[01:04:49.760 --> 01:04:55.520]  And it's like that visual thing for many people would help them remember. I remember I put a
[01:04:55.520 --> 01:05:00.400]  typewriter on my dining room table with a green apple next to it because you've painted this
[01:05:00.400 --> 01:05:05.120]  picture. Whereas if you just tried to remember the words green apple and typewriter, maybe you'd
[01:05:05.120 --> 01:05:10.400]  forget them in a day. The cats gave me like a picture, right? Because I know what a tiger looks
[01:05:10.400 --> 01:05:17.040]  like. These California place names, number one, I didn't grow up in California. But number two,
[01:05:17.040 --> 01:05:22.480]  they all look the same to me. Like I guess Yosemite doesn't look like Monterey because
[01:05:22.480 --> 01:05:28.880]  it's not on the ocean, but it's all sort of places where you can take absolutely stunning,
[01:05:28.880 --> 01:05:34.240]  beautiful desktop wallpaper photos. Right? It's all a blur to me. Yeah. Well,
[01:05:34.240 --> 01:05:38.480]  they're only picking the names of places where they can find where they can associate with
[01:05:38.480 --> 01:05:42.960]  beautiful photos. So they do kind of all blur together because despite of people always joke,
[01:05:42.960 --> 01:05:50.000]  like, where's the Mac OS, like Folsom? Folsom has its place, but it's mostly associated with
[01:05:50.000 --> 01:06:00.640]  a prison Mac OS 17, the Castro. You're right. Yeah. So anyway, Mac OS 13, aka Ventura has a
[01:06:00.640 --> 01:06:07.440]  rewritten system settings app. Most I talked to I have so much more to say about it. But what I
[01:06:07.440 --> 01:06:13.760]  wrote, and I think pretty fairly, I think got out what I wanted to say with this with few words,
[01:06:13.760 --> 01:06:18.080]  but I think not because I was holding back but because I just wanted to make a 16 point that
[01:06:18.080 --> 01:06:24.800]  this seems to me like something has gone very wrong at Apple because these errors that have
[01:06:24.800 --> 01:06:29.680]  been pointed out, like all these little visual glitches and the fit and finish for lack of a,
[01:06:29.680 --> 01:06:33.440]  I mean, I can't think of a better way to put it. The fit and finish is clearly not there.
[01:06:33.440 --> 01:06:41.840]  The argument that, well, it's still in beta doesn't work for me because we've had betas of
[01:06:41.840 --> 01:06:49.120]  Mac OS versions all the way back to the late 90s before Mac OS 10 10.0 shipped. What was that?
[01:06:49.120 --> 01:06:54.320]  What was that cat? The first cat was a cheetah. No. Do they have a cat name? I don't know. Maybe
[01:06:54.320 --> 01:07:01.040]  10. I should know, I guess. I mean, I was there, but well, but we've had betas and they've been.
[01:07:01.040 --> 01:07:05.120]  Yeah, you're right. Yeah. Because it was, I remember it was a lie because the biggest
[01:07:05.120 --> 01:07:10.560]  problem with it was that it was also slow. Right, right, right, right. And they picked,
[01:07:10.560 --> 01:07:14.400]  they should have picked like Garfield, you know? Well, don't trust me on anything because I
[01:07:14.400 --> 01:07:21.280]  famously quit Apple after 10.2. I think it was maybe even right before 10.2 because I thought
[01:07:21.280 --> 01:07:29.680]  Mac OS 10 was basically done. I was like, I'm out of here. It's finished. We got it. Yep. We nailed
[01:07:29.680 --> 01:07:37.200]  it. There have been betas. In the old days, they weren't public betas, but there have certainly
[01:07:37.200 --> 01:07:41.280]  been developer betas for the obvious reason that developers are the people who need betas of new
[01:07:41.280 --> 01:07:46.800]  operating systems where old APIs have been deprecated and new APIs have been introduced.
[01:07:46.800 --> 01:07:52.240]  And it's in developers' interest to support new APIs and changes to the system and new features
[01:07:52.240 --> 01:07:58.080]  that Apple wants third-party developers to use before it actually ships. And it's in Apple's
[01:07:58.080 --> 01:08:04.160]  interest to be able to say, okay, this operating system we announced at WWDC, it's now, here we
[01:08:04.160 --> 01:08:09.600]  are five months later, it's ready to ship. And let's show you some of the great things developers
[01:08:10.160 --> 01:08:15.840]  have built that are only possible in this new operating system, right? It remains to this day.
[01:08:15.840 --> 01:08:20.560]  I mean, I guess they do less third-party demos and keynotes, but they still do sometimes. And
[01:08:20.560 --> 01:08:24.880]  they like talking about it. They did a bunch of them with the CAD. Remember with the Catalyst
[01:08:24.880 --> 01:08:29.120]  a couple of years ago, they had a bunch of developers who'd wanted to show how they'd
[01:08:29.120 --> 01:08:36.560]  turned their iOS apps into Mac apps. And in all those betas in the old days, there were bugs and
[01:08:36.560 --> 01:08:43.840]  there'd be, yeah, well, that's obviously a bug, but there wasn't like widespread fit and finish
[01:08:43.840 --> 01:08:50.480]  problems. And I think it's fair to say, I mean, and you said you were at Apple then. I mean,
[01:08:50.480 --> 01:08:56.800]  you've been using Cocoa for longer than most people. I'm not going to say as long as anybody,
[01:08:56.800 --> 01:09:03.360]  but longer than most people. And one of the big advantages of Cocoa that Apple, I can remember
[01:09:03.360 --> 01:09:07.280]  Steve Jobs saying it over and over again. Honestly, I can, I've seen videos of Steve
[01:09:07.280 --> 01:09:13.200]  Jobs talking about the next days when these frameworks were before they were at Apple,
[01:09:14.880 --> 01:09:22.720]  that it makes it easy to make a great looking UI, right? That, and conversely almost makes it,
[01:09:22.720 --> 01:09:29.520]  you have to do extra work to make a bad looking UI or a sloppy looking UI, right?
[01:09:30.480 --> 01:09:35.680]  There's a great art and I think I've done it. You do it all the time developing your software,
[01:09:35.680 --> 01:09:44.000]  but there's an art to properly laying out a preferences tab. And it sounds like boring work,
[01:09:44.000 --> 01:09:49.680]  but if you like making apps, it can be very fun, right? It's like, I'll go back to the IRS.
[01:09:49.680 --> 01:09:54.960]  Like every year they make a new version of the 1040 form and it doesn't seem like fun,
[01:09:54.960 --> 01:09:59.440]  but if you're the right type of graphic designer, that sort of, hey, you have eight and a half by
[01:09:59.440 --> 01:10:04.640]  11 inches. You have to have, here's a checklist of everything that needs to be on here. And here's
[01:10:04.640 --> 01:10:10.400]  the most important stuff. How do you lay this out? And so that the typical taxpayer looking at it
[01:10:10.400 --> 01:10:15.680]  will have the easiest time filling out this form. That's like what a preferences window is, right?
[01:10:15.680 --> 01:10:20.400]  And laying it out is an art and it's not like Interface Builder. You just said, I have seven
[01:10:20.400 --> 01:10:25.440]  check boxes and Interface Builder would just automatically stick them on the screen and do it.
[01:10:25.440 --> 01:10:29.280]  But if you knew what you wanted to look at, you could do it visually and you drag these things
[01:10:29.280 --> 01:10:33.920]  around, but, and they would snap into place. And the things like I'm talking about that
[01:10:33.920 --> 01:10:40.640]  Cocoa made easy, that from the pre-Coco days of Mac development that I'm most familiar with,
[01:10:40.640 --> 01:10:45.280]  you didn't get, or you didn't get it as well as they did it where it's like, okay, if you have
[01:10:45.280 --> 01:10:54.000]  three check boxes on top of each other, how far away do they go? Does check box two, how does it
[01:10:54.000 --> 01:11:00.400]  go 20 pixels below the first one? Or is it 22? And it's like, I think the older way, and maybe
[01:11:00.400 --> 01:11:05.840]  I'm throwing Code Warrior and some older things under the bus here. Maybe you'll correct me, but,
[01:11:05.840 --> 01:11:09.680]  you know, one way you could do it is you'd look up in the HIG and the HIG would have a thing that if
[01:11:09.680 --> 01:11:16.000]  you have multiple check boxes in a dialogue box, they should be 20 pixels apart. If you have an
[01:11:16.000 --> 01:11:22.480]  OK and a cancel button at the bottom of an alert, the OK button should be on the right. The cancel
[01:11:22.480 --> 01:11:30.000]  button should be right next to it on the left. They should be this far from the corner in pixels,
[01:11:30.000 --> 01:11:36.160]  this far from the bottom in pixels. And the two buttons should be exactly 24 pixels apart.
[01:11:36.160 --> 01:11:39.680]  Right. And there'd be those and you could look them up in the HIG and then you could
[01:11:40.240 --> 01:11:45.120]  do all your work knowing those numbers. Cocoa made it so that those things snapped into place
[01:11:45.120 --> 01:11:50.320]  and there'd be like a little visual indication like right here is the indicator. This is how
[01:11:50.320 --> 01:11:55.600]  far away it should be. If you want to nudge it up another couple pixels with the arrow key,
[01:11:56.160 --> 01:12:02.080]  you could do it. Right. But you know that you're doing it wrong. You're doing it against the HIG.
[01:12:02.080 --> 01:12:07.600]  And yeah, and to be precise, not Cocoa so much, but Interface Builder, the app.
[01:12:07.600 --> 01:12:10.800]  Right, right. But the whole system, right?
[01:12:10.800 --> 01:12:16.240]  Yeah. But it's funny you ask about that with all like MetroWorks, CodeWarrior,
[01:12:16.240 --> 01:12:23.760]  PowerPlants. I'm thinking also Resourcer, ResEdit, all the ways we used to design interfaces.
[01:12:23.760 --> 01:12:32.960]  I honestly cannot remember if they did anything to help you place the buttons and the controls.
[01:12:32.960 --> 01:12:37.680]  I don't think they did. Like as I recall, and ResEdit's the one I'm the most familiar with,
[01:12:37.680 --> 01:12:42.240]  because while I wasn't, I made little things, you know, it's same thing, same type of things
[01:12:42.240 --> 01:12:46.880]  I do now where I was never a professional Mac developer, but I make little hobbyist type things
[01:12:46.880 --> 01:12:52.240]  on the side. But you know, I was deeply into invested in opening up the apps I had from
[01:12:52.240 --> 01:12:58.480]  actual developers and hacking them with ResEdit. Yeah, I don't think that ResEdit had anything like
[01:12:58.480 --> 01:13:02.640]  that to help with alignment. The according to the HIG alignment, you were sort of on your own.
[01:13:02.640 --> 01:13:09.280]  There were ways to show an alert instead of drawing it visually as a, what was it,
[01:13:09.280 --> 01:13:12.080]  a DITL resource, D-I-T-L? Yeah.
[01:13:12.080 --> 01:13:18.400]  I mean, of all the stupid freaking things I'm wasting my brain. There was like a DITL
[01:13:18.400 --> 01:13:25.120]  resource, dialogue, dialogue, something list. Yeah. Well, everything that ended with a T-L
[01:13:25.120 --> 01:13:30.880]  I think was a, yeah, something list. But you know, there was a way to just call
[01:13:30.880 --> 01:13:37.040]  a toolbox function and say, just show an alert with this text with these two buttons. And then
[01:13:37.040 --> 01:13:41.120]  that thing would make the alert look like a standard alert with all the right layout.
[01:13:41.120 --> 01:13:47.040]  But if you had like a layout, a visually laid out dialogue in ResEdit, I don't think there
[01:13:47.040 --> 01:13:52.320]  were any kind of layout tools like that. Yeah. Well, it was, you know, I do remember
[01:13:52.320 --> 01:13:57.360]  Interface Builder in particular, and it used to be a separate app. It was a big, like,
[01:13:57.360 --> 01:14:03.760]  I would show it off to other people. I remember I worked for like a week as a contractor,
[01:14:03.760 --> 01:14:11.680]  did a short job at Fog Creek in New York, and this was like maybe 2005. And I remember showing
[01:14:11.680 --> 01:14:18.000]  like Joel Spolsky, the Interface Builder, and I'm just like, look at this. Now hold on to your hat.
[01:14:18.000 --> 01:14:22.400]  I'm going to place a button here and it's going to tell me where to put it. I think you're right
[01:14:22.400 --> 01:14:28.320]  that the old stuff, the Mac classic stuff didn't do that because I wouldn't have been so excited
[01:14:28.320 --> 01:14:33.840]  about showing off Interface Builder if it was something that had already been there in the past.
[01:14:33.840 --> 01:14:39.760]  Right. It was groundbreaking and it allowed, again, I played around with Interface Builder
[01:14:39.760 --> 01:14:46.000]  far more than I did Project Builder, which was that that was where you actually wrote the code.
[01:14:46.000 --> 01:14:52.080]  And they got sort of wrapped into one with the renaming of Xcode. But Xcode is,
[01:14:52.080 --> 01:14:55.280]  I think it's fair to say, I mean, and this is why I'm so glad to have you here,
[01:14:55.280 --> 01:15:00.240]  because I think you correct me if maybe it's not fair to say, is Xcode is really more like
[01:15:00.240 --> 01:15:07.440]  an evolution of Project Builder. It's extended deeply into the future and it is truly a real
[01:15:07.440 --> 01:15:14.800]  crown jewel in Apple's intellectual property. It's hard to imagine where Apple would be if
[01:15:14.800 --> 01:15:19.440]  Xcode weren't as good and capable as it is, even though every developer I know has a whole pet list
[01:15:19.440 --> 01:15:24.720]  of things they wish Xcode did better. But it's really Project Builder brought forward. There
[01:15:24.720 --> 01:15:29.680]  really is no Interface Builder anymore. Well, yeah. I mean, they really just
[01:15:31.520 --> 01:15:36.880]  basically componentized Interface Builder so that there's a mode in which you can
[01:15:36.880 --> 01:15:44.240]  mode in Xcode when you're editing a zib file, which is the Interface Builder format these days.
[01:15:44.880 --> 01:15:49.200]  It basically transforms the app. It's pretty clever. I mean, the complexity that Xcode
[01:15:49.760 --> 01:15:56.640]  tackles is pretty impressive. But I would say there is as much of an Interface Builder
[01:15:57.200 --> 01:16:02.720]  interface as there ever was, but it just doesn't live independently of Xcode. Yeah.
[01:16:02.720 --> 01:16:10.080]  So here, I'll just imagine as you might, if you were making a blog editor app and that you have
[01:16:10.080 --> 01:16:16.560]  an idea, like you sketch it out on paper and you think it's going to be a standard document window.
[01:16:16.560 --> 01:16:22.560]  There'll be a toolbar at the top, like a standard Cocoa app, a Mac OS X app with a toolbar at the
[01:16:22.560 --> 01:16:26.960]  top. For now, I'll just worry about what those toolbar buttons will be later, but there'll be
[01:16:26.960 --> 01:16:31.760]  a standard toolbar at the top and there'll be at the top of the window, something that looks like
[01:16:31.760 --> 01:16:43.840]  mail, where instead of two CC subject, there'll be these blog fields like title, keywords, tags.
[01:16:44.560 --> 01:16:50.080]  And then underneath that, like a mail app, there'll just be a big text area where you type
[01:16:50.080 --> 01:16:54.960]  the text of your post. You're really making me stretch my imagination here.
[01:16:55.840 --> 01:17:00.480]  Really, I don't know if I can keep this all in my mind here. Let's slow down a little bit.
[01:17:00.480 --> 01:17:06.000]  But whether you're a one, one person developer shop, or if you have colleagues and maybe one
[01:17:06.000 --> 01:17:12.400]  of the colleagues is purely their role is just as a designer, the UI designer, and they don't know
[01:17:13.120 --> 01:17:18.800]  objective C from JavaScript. They don't write code. They're not programmers at all,
[01:17:18.800 --> 01:17:23.360]  but they're, they are designers and they know they do good UI design. They wouldn't,
[01:17:23.360 --> 01:17:29.280]  you wouldn't just mock it up and show exactly what it looks like in Photoshop.
[01:17:29.280 --> 01:17:35.040]  And then render out a pain and give it to the developer to make a designer could use interface
[01:17:35.040 --> 01:17:40.320]  builder to just make it directly to what used to be called nib files. And now there's zib.
[01:17:40.320 --> 01:17:44.640]  Is that how we pronounce it? I think so. Yeah. X I B it's basically an XML based
[01:17:45.280 --> 01:17:50.960]  version of the same thing. Right. Cause the old nib format was like a binary blob that you,
[01:17:50.960 --> 01:17:57.360]  yeah, it was like a don't look inside and they're still like famously difficult to deal with like
[01:17:57.360 --> 01:18:04.080]  source control collisions and merges and all that. But you stand a chance since it's text-based at
[01:18:04.080 --> 01:18:11.280]  the core. Right. But a designer could just do this all visually and drag out the label for the title.
[01:18:11.280 --> 01:18:16.880]  That's a text label. That's a standard control and select it. And J just like I'll bet everybody
[01:18:16.880 --> 01:18:23.280]  listening to this podcast, whether you've ever done UI design work or used interface builder,
[01:18:23.280 --> 01:18:28.880]  you've used apps that work like this, right? Drawing apps of any kind, things that you'd
[01:18:28.880 --> 01:18:37.440]  use to make any kind of drawing like Photoshop or illustrator or, or like a presentation software,
[01:18:37.440 --> 01:18:43.600]  like keynote or yep. Keynote's a fantastic example or what's Microsoft's version of keynote called.
[01:18:45.040 --> 01:18:48.240]  We are the funniest Mac centric people in the world right now.
[01:18:48.240 --> 01:18:54.560]  Powerpoint. There you go. I really did draw. I did draw a blank too. I'm like,
[01:18:55.360 --> 01:18:59.840]  I think Microsoft has something that's kind of like an imitation of Keynote.
[01:18:59.840 --> 01:19:06.960]  I've used, I like anybody, especially with my writing, I've used Microsoft word and I definitely
[01:19:06.960 --> 01:19:12.560]  used and used to really like Excel was always to me, the proof that Microsoft could do good Mac
[01:19:12.560 --> 01:19:18.720]  software and really sort of the old versions, like, like in the nineties of Microsoft Excel
[01:19:18.720 --> 01:19:23.600]  on the Mac were extraordinarily good software. I don't think I've ever used PowerPoint. I think
[01:19:23.600 --> 01:19:27.200]  I've maybe I've had to open it at some point. Cause I was using a work machine or something
[01:19:27.200 --> 01:19:30.880]  that had it installed and somebody gave me a deck, but I don't think I ever actually made anything.
[01:19:30.880 --> 01:19:35.840]  But yeah, like Keynote's probably the, maybe the most used example in the audience, but you know,
[01:19:35.840 --> 01:19:39.840]  it's the same type of thing. You have standard elements where in Keynote, you do, if you want
[01:19:39.840 --> 01:19:46.240]  to put a title at the top, you draw a text box and you want to insert video in the middle. And then
[01:19:46.240 --> 01:19:52.080]  you select that video after you've dragged it in. And then you can set properties on it. Like
[01:19:52.080 --> 01:19:56.240]  there'll be like a little info palette where you can set a property, like should this video
[01:19:56.800 --> 01:20:03.280]  start playing as soon as this slide is shown, should it start three seconds later? Should we
[01:20:03.280 --> 01:20:07.840]  wait till you manually advance the, instead of going to the next slide, the next time you hit
[01:20:07.840 --> 01:20:13.120]  the clicker, it'll then it'll play the video. And then you have a visual way of specifying all that
[01:20:13.120 --> 01:20:17.840]  interface builder was like that for layout and doing something like, I think you'll agree doing
[01:20:17.840 --> 01:20:24.880]  something like the Mars edit standard editing window for a blog post is right down the middle
[01:20:24.880 --> 01:20:30.400]  could have been an example of the sort of thing you would that interface builder would make right.
[01:20:30.400 --> 01:20:35.440]  And again, it's not just that you can drag out those texts labels and then the editing field
[01:20:35.440 --> 01:20:40.480]  for where the user types the title and types the keywords, but the fact that they could be
[01:20:40.480 --> 01:20:46.960]  positioned the exact right distance from each other, according to the human interface guidelines,
[01:20:46.960 --> 01:20:53.760]  so that they were both worried for the good of the platform adhering to the platform's standard
[01:20:53.760 --> 01:20:59.120]  idioms for how things should be laid out. And then that you as a individual developer could
[01:20:59.120 --> 01:21:04.400]  count on Apple's expertise of trust us. This is the right amount of distance from like a
[01:21:04.400 --> 01:21:10.320]  accessibility and usability perspective. Yeah. Right. Yeah. It makes it a lot faster.
[01:21:10.320 --> 01:21:14.560]  I mean, I kind of like you were saying earlier, like there's a certain kind of like satisfaction
[01:21:14.560 --> 01:21:20.560]  and just laying out a UI like that. And for whatever reason, I didn't really become a UI
[01:21:20.560 --> 01:21:25.440]  based developer until after I left Apple, because I used to always work on
[01:21:26.160 --> 01:21:30.800]  OS level stuff in my early career. But once I started working on apps,
[01:21:30.800 --> 01:21:36.560]  kind of got into that, the idea of like just figuring out how to make it work and the tools
[01:21:36.560 --> 01:21:41.120]  helping you with the alignment and you kind of learn some basics from Apple about like
[01:21:41.120 --> 01:21:45.280]  balancing. There's a standard since we're talking about preferences, there's a standard
[01:21:45.280 --> 01:21:51.280]  in the Coco design guidelines. I think it's called like a center weight balance. You know,
[01:21:51.280 --> 01:21:57.120]  if you look at any traditional preferences, like I like to look at Safari and you open up Safari's
[01:21:57.120 --> 01:22:02.160]  preferences because they have a lot of different panels in there that in their own way exemplify.
[01:22:02.880 --> 01:22:09.840]  The idea is if you look at the different pains in Safari, the labels, where the labels line up,
[01:22:09.840 --> 01:22:14.640]  every pain more or less, the labels are on the left and the values are on the right.
[01:22:14.640 --> 01:22:22.960]  And where that split happens is different in every panel. And it's because of this kind of
[01:22:22.960 --> 01:22:30.560]  philosophy of a center weight. So we want the overall layout of the preferences is to have
[01:22:31.200 --> 01:22:36.800]  the weight of content on the left and right be approximately the same. So it's not centered,
[01:22:36.800 --> 01:22:45.120]  but the stuff that extends out from the left side from the labels is sort of like counterweighted by
[01:22:45.120 --> 01:22:50.000]  the stuff that extends out on the right side. And that is, I mean, it's interesting to point
[01:22:50.000 --> 01:22:54.480]  that out. It's kind of one of the things, it's one of the tools knowing that's a guideline is
[01:22:54.480 --> 01:23:00.400]  one of the tools that helps you then use tool like the interface builder aspect of Xcode.
[01:23:00.400 --> 01:23:04.240]  But it's also pretty pertinent, I think, to what we're sort of, we're sort of dancing around. We
[01:23:04.240 --> 01:23:10.800]  haven't dived into it. The system settings on Ventura, Ventura, and 13 Mac OS, Mac OS,
[01:23:10.800 --> 01:23:16.800]  1013 Ventura. No, it's not 1013. Jesus. It's just 1014. Oh, 13. Yeah. Okay. Well,
[01:23:16.800 --> 01:23:21.520]  we don't trust either of us for anything version-based, but it's funny. I'm looking
[01:23:21.520 --> 01:23:25.360]  at this ever since you brought it up. I've I opened it up immediately when you mentioned it,
[01:23:25.360 --> 01:23:32.560]  I opened up system settings because I'm recording this on Mac OS Ventura. And the first thing,
[01:23:32.560 --> 01:23:37.760]  the very first thing, I almost just tried to do it again. I want to resize the window. I want to
[01:23:37.760 --> 01:23:43.920]  make it wider. And it's the very first thing I try to do. And it's infuriating to me that I can't do
[01:23:43.920 --> 01:23:48.880]  it because it's just seems too narrow. And that it's an interesting, it's interesting in light of
[01:23:48.880 --> 01:23:55.920]  what I just said about the whole like center weight thing, because everything about the design
[01:23:55.920 --> 01:24:03.840]  of the new system settings, this whole like iOS style of like, in the blog post I wrote
[01:24:03.840 --> 01:24:10.560]  recently about this, I called it the table view style of an interface because that whole
[01:24:10.560 --> 01:24:17.520]  interface of like a round wrecked with rows that you can tap in and it like brings you to a new
[01:24:18.400 --> 01:24:25.440]  view. That whole iOS basically like the best like exemplifies the iOS interface. And that is based
[01:24:25.440 --> 01:24:32.960]  on a class in UI kit called UI table view. And this looking at it right now, I'm looking at the
[01:24:32.960 --> 01:24:38.880]  general tab of system settings. It's very much that it looks like it could have been
[01:24:38.880 --> 01:24:46.880]  transplanted from an iOS device right into my Mac. And it's like the inversion of the center
[01:24:46.880 --> 01:24:54.720]  weight thing I'm talking about, because as opposed to on the Mac or traditionally everything sort of
[01:24:54.720 --> 01:25:02.960]  like the gravity, so to speak, is at the center of the panel, the gravity in an iOS layout like this
[01:25:02.960 --> 01:25:09.440]  is like double gravity at both edges of the screen. Right. And everything about this design
[01:25:09.440 --> 01:25:17.840]  is antagonistic to the idea of how you would design it as a traditional Mac interface.
[01:25:17.840 --> 01:25:25.120]  And I'm not even saying that you might think people listening might think I'm just slamming
[01:25:25.120 --> 01:25:30.640]  on system settings. I'm not even really doing that. I think it actually kind of works in some
[01:25:30.640 --> 01:25:42.160]  ways, but it's a big transition from having this like standard for how almost all settings
[01:25:42.160 --> 01:25:47.360]  based interfaces on the Mac should behave. Like it really begs the question, like, how
[01:25:47.360 --> 01:25:53.680]  are all of Apple's own apps going to change how they do their settings? And that, like I said,
[01:25:53.680 --> 01:25:59.280]  I want to make a window wider, which is weird because one of the main criticisms of this system
[01:25:59.280 --> 01:26:06.080]  settings change is, you know, unlike on the traditional Mac interface, the label being
[01:26:06.080 --> 01:26:10.880]  close to the value is useful because you can associate it with the value more easily.
[01:26:10.880 --> 01:26:18.080]  And the wider if Apple let me make this window wider, it would exacerbate the problem of the
[01:26:18.080 --> 01:26:24.720]  iOS style table layout, putting the label really far at the left and the value really far at the
[01:26:24.720 --> 01:26:29.600]  right. I don't know. I want to say one thing about the system settings before I forget and
[01:26:29.600 --> 01:26:34.480]  before, in case I don't get a chance to say it. And you mentioned this, like in the historically,
[01:26:34.480 --> 01:26:39.840]  like Apple doesn't have like glaring UI issues in betas. And so you argued that they shouldn't
[01:26:39.840 --> 01:26:47.680]  be able to use that as a defense for this. And I'm reminded of that debacle two years ago,
[01:26:47.680 --> 01:26:52.720]  maybe with Safari. Remember the Safari tabs? Oh, I remember it well. And it was only one
[01:26:52.720 --> 01:26:58.960]  year ago. Oh, it's only one year ago, but we're living in an era. Time is an illusion.
[01:26:58.960 --> 01:27:04.320]  Yeah. Where time is an illusion. It has been a very long year. It has been a long year.
[01:27:04.320 --> 01:27:11.600]  Remember that time sunny back when we had to Safari tabs. Anyway, that was a, uh, an example
[01:27:11.600 --> 01:27:18.800]  where the elephant in the room sort of became apparent to everybody to the extent that they
[01:27:18.800 --> 01:27:23.600]  to the extent that they actually pulled back and they decided not to ship that. Right. And
[01:27:24.160 --> 01:27:26.960]  I have been thinking about the system settings thinking,
[01:27:29.760 --> 01:27:34.960]  I'm conflicted because I think it's horrible. And you mentioned on your blog post, you mentioned
[01:27:34.960 --> 01:27:42.640]  how it was kind of a short blog post you made. You leaned heavily on this tweet thread by Nikki,
[01:27:42.640 --> 01:27:49.920]  Nikki Tonsky. Yeah. And that, I mean, that, I think that's part of the reason you were able
[01:27:49.920 --> 01:27:55.360]  to make your posts so short was that you could lean on that. It just says so much,
[01:27:55.360 --> 01:28:01.600]  all of the things that are wrong with this, all of that said, I don't, I'm conflicted.
[01:28:01.600 --> 01:28:07.760]  I think there are some things about the new system settings that are better. But like I said,
[01:28:07.760 --> 01:28:13.680]  in the blog post, I wrote that I feel like they're just, they're trying to change too much at once.
[01:28:13.680 --> 01:28:20.800]  And, but here's the problem. The system settings fixes some real issues in a way that the Safari
[01:28:20.800 --> 01:28:27.200]  tabs didn't fix real issues. So I don't think I would be comfortable with them backing out. Like,
[01:28:27.200 --> 01:28:31.040]  I think this is the kind of, it's kind of like a scenario right now, where you might imagine
[01:28:31.040 --> 01:28:35.120]  Apple saying, Oh, well, we were a little, we jumped the gun a little too quick on the trigger
[01:28:35.120 --> 01:28:40.720]  with this. Let's just go back to the old system preferences, let it cook for another year, but
[01:28:40.720 --> 01:28:47.680]  they fixed some things in here that I don't want to lose now. And so it's like, they've invested
[01:28:47.680 --> 01:28:53.840]  in like, there's this whole thing with login items. Have you noticed this? Like for years,
[01:28:53.840 --> 01:29:00.880]  we've had like, login items only included the items that the user had specifically chosen to
[01:29:00.880 --> 01:29:07.120]  launch at login time. So the problem was over time, Apple's discouraged developers from using
[01:29:07.120 --> 01:29:13.520]  that mechanism and started encouraging developers to use another mechanism where their stuff runs
[01:29:13.520 --> 01:29:18.720]  in the background is like a launch agent or a launch demon or something. And, but there was
[01:29:18.720 --> 01:29:25.120]  no user control over that. So now I'm looking at my login items and it has, well, fast scripts.
[01:29:25.120 --> 01:29:31.840]  My own app is up at the top. It's still using the old fashioned mechanism in part because
[01:29:31.840 --> 01:29:39.840]  I protest against this, the fact that they didn't expose the new system via system preferences,
[01:29:39.840 --> 01:29:45.920]  but now, and right below that there's this allow in the background section that gives users access
[01:29:45.920 --> 01:29:50.320]  to enable or disable all of these different apps that are using the newer mechanism.
[01:29:50.320 --> 01:29:53.200]  And I think it still shows your old fashioned login items too.
[01:29:53.200 --> 01:29:56.240]  It does. Yeah. They're both there. So now it's great. If this was,
[01:29:56.240 --> 01:30:02.640]  if this was the only thing they changed in system preferences for Ventura,
[01:30:02.640 --> 01:30:06.720]  I would be singing its praises, but here's the problem is I don't think,
[01:30:07.920 --> 01:30:13.840]  I don't think I want them to back out of this and I don't think they have time to fix all the issues.
[01:30:13.840 --> 01:30:18.480]  So I think it's just going to be a slow, I hope it's just going to be a slow
[01:30:18.480 --> 01:30:23.840]  fix. Like they'll have to fix this over time, but it's not great. It's not the fact that things are,
[01:30:23.840 --> 01:30:32.960]  as they stand. This Nicky Tonski tweet thread really exemplifies like how bad so many things
[01:30:32.960 --> 01:30:38.480]  are. You know, I think what you were getting at though, with your post that I latched onto was
[01:30:38.480 --> 01:30:43.280]  just the idea in general, that it seems to be harder for people to make Swift UI stuff
[01:30:43.280 --> 01:30:49.200]  look good or to not have like little defects. And that's, there's a little irony in that assessment,
[01:30:49.200 --> 01:30:55.920]  because one of the big selling points of Swift UI, especially I think for iOS is it empowers you to
[01:30:55.920 --> 01:31:01.360]  make things look beautiful, like with very little work and the whole tutorial and the introduction
[01:31:01.360 --> 01:31:07.840]  to Swift UI, which I guess is now like two years old. I think we saw it introduced right before
[01:31:07.840 --> 01:31:15.600]  the WWDC in person, before the pandemic 2019. Yeah. Like everything it's aging and it's,
[01:31:15.600 --> 01:31:22.240]  but from the beginning it was impressive because it allowed you to make these beautiful iOS
[01:31:22.240 --> 01:31:28.320]  interfaces that in contrast to what you and I are saying about the problems on the Mac,
[01:31:28.320 --> 01:31:33.760]  it actually kind of cinched up and like prevented certain UI defects. So there's something to,
[01:31:33.760 --> 01:31:40.880]  I think some people out there will rightly listen to us saying like, Swift UI has all
[01:31:40.880 --> 01:31:48.080]  these rough edges and it makes it hard to make a refined Mac app. And they will rightly object
[01:31:48.080 --> 01:31:54.080]  to the assessment that Swift UI has that problem. There's something to be said for the idea that
[01:31:54.080 --> 01:31:59.040]  if you just declare what your interface should contain, the system can make it look good. And
[01:31:59.040 --> 01:32:07.040]  I think it does do that only at a very limited level and far more impressively on iOS than
[01:32:07.040 --> 01:32:13.520]  on the Mac. All right. You brought up so much there that it was so wonderful. Let's see if
[01:32:13.520 --> 01:32:18.560]  I can come back to everything. All right. Number one, your point about the login items. I love
[01:32:18.560 --> 01:32:25.680]  that point. And it is absolutely one of my favorite new things in Ventura and the new
[01:32:25.680 --> 01:32:30.640]  system settings is where it lives. Now, the old way, for people who don't know, the old
[01:32:30.640 --> 01:32:36.560]  way that's been in Mac OS X and probably was by the thing in Next back before then, but
[01:32:36.560 --> 01:32:46.000]  you went to the users and groups system preferences panel, which is by name, users and groups.
[01:32:46.000 --> 01:32:50.480]  And we've had it for so long. And I know I don't want to go on a sidetrack about why
[01:32:50.480 --> 01:32:55.840]  the iPad doesn't have multiple users yet. But going back to the early days of Mac OS
[01:32:55.840 --> 01:33:03.360]  X, the ability to have multiple users on one Mac was groundbreaking. And I know that for
[01:33:03.360 --> 01:33:07.440]  people who are younger and have just grown up knowing that's possible on the Mac, but
[01:33:07.440 --> 01:33:13.360]  that a family could have an account for mom, dad, brother, sister, and all have the four
[01:33:13.360 --> 01:33:19.120]  different accounts with all their preferences and their own email. And everybody could have
[01:33:19.120 --> 01:33:26.480]  the same app for email, but only your email was in your account was huge for Mac users.
[01:33:26.480 --> 01:33:30.480]  A classic Mac didn't have anything like that. I mean, there was some kind of ham-fisted
[01:33:30.480 --> 01:33:36.480]  attempt at it in a very late era, but maybe Mac OS 8 had something, but it doesn't matter
[01:33:36.480 --> 01:33:41.280]  what. But anyway, that's what you think users and groups is. That's where you go to make
[01:33:41.280 --> 01:33:48.400]  these user accounts. And most Macs in use have one user, the owner of the device. And
[01:33:48.400 --> 01:33:53.840]  you can create more than one. Even for me with devices that only I use, I always create
[01:33:53.840 --> 01:33:59.200]  a test account with standard preferences. And I delete it once in a while just so I
[01:33:59.200 --> 01:34:04.640]  can get like, hey, what does a brand new user account on Mac OS look like now? And it's
[01:34:04.640 --> 01:34:08.160]  an account with none of my real data in it, but I can throw it away. That's where you
[01:34:08.160 --> 01:34:13.120]  go to manage it. And you can create it in users and groups. And groups, I guess, people
[01:34:13.120 --> 01:34:17.280]  don't use as much anymore. That used to be more of a thing that was in the past.
[01:34:17.280 --> 01:34:20.800]  It used to be more of a thing that was in the Unix days. But then there's other things
[01:34:20.800 --> 01:34:24.400]  in there, and they've always been there, like the login options. Do you have a little
[01:34:24.400 --> 01:34:28.560]  thing up at the top in the menu bar that lets you switch users quickly? But then the other
[01:34:28.560 --> 01:34:33.920]  thing is when you select a user, there's two tabs. I'm looking at an older version
[01:34:33.920 --> 01:34:39.120]  of Mac OS 10 or Mac OS, but there's the password tab, which is the one most people use.
[01:34:39.120 --> 01:34:43.440]  But then there's a second tab there, login items. And that's what you were talking about
[01:34:43.440 --> 01:34:49.360]  was the only place that was a list of these. This is the label. These items will open
[01:34:49.360 --> 01:34:54.880]  automatically when you log in. And you can, if you don't know, this is maybe it's a
[01:34:54.880 --> 01:34:59.360]  tip of the day. You can put any app you want in there. I don't need to do that because
[01:34:59.360 --> 01:35:04.160]  I have also have the system wide setting on where whenever I restart, I just want everything
[01:35:04.160 --> 01:35:09.920]  that I left open the last time to reopen again. But that's a new, relatively new feature
[01:35:09.920 --> 01:35:17.120]  of the Mac OS. And 20 years ago when it was new, if you always use Mars edit and you always
[01:35:17.120 --> 01:35:24.160]  use BB edit every time you log BB edit, Mars edit, mail, maybe, and Safari have those four
[01:35:24.160 --> 01:35:28.560]  apps open automatically. As soon as I log in, you can just drag. How do you add an item?
[01:35:28.560 --> 01:35:32.240]  You just, well, there's a plus button where you can choose one or you could just drag
[01:35:32.240 --> 01:35:36.480]  it in. And then if you feel like there was too much stuff happening automatically when
[01:35:36.480 --> 01:35:40.640]  you log in, you'd go there and take them out. But it sort of goes back. The other thing
[01:35:40.640 --> 01:35:44.800]  that it sort of goes back and you brought up working on very early versions of Mac OS
[01:35:44.800 --> 01:35:51.200]  10, one way that the system has evolved tremendously over two decades is that in the early days,
[01:35:51.920 --> 01:35:58.320]  everything was sort of an app, right? Even dot pref pane files, like the things that
[01:35:58.320 --> 01:36:03.840]  like if a third party developer, like I don't think Hazel, which is a great app is a pref
[01:36:03.840 --> 01:36:08.160]  pane anymore because they sort of discourage it. But like when, if you were a developer
[01:36:08.160 --> 01:36:13.280]  making a third party utility that instead of you'd run from the applications folder,
[01:36:13.280 --> 01:36:17.760]  you wanted to be in system preferences, it was really just a different, you have different
[01:36:17.760 --> 01:36:22.960]  APIs to call to integrate with system preferences and to answer things that as a pref panel,
[01:36:22.960 --> 01:36:27.840]  you're expected to answer from system preferences. But it was really just a different project type
[01:36:27.840 --> 01:36:32.640]  in X code and a different file extension on the bundle. Instead of a dot app, you'd compile
[01:36:32.640 --> 01:36:37.280]  and build and compile and you'd get a dot pref pane. Everything was sort of an app.
[01:36:37.280 --> 01:36:45.760]  And so anything that you might run like circa 2002, 2003, everything that might be in login
[01:36:45.760 --> 01:36:50.560]  items was just an app, even if it was just a faceless thing that didn't have a dock icon
[01:36:50.560 --> 01:36:56.080]  that ran into menu bar, right? So, but then Apple evolved the system over the years and
[01:36:56.080 --> 01:37:02.240]  made things that could run in the background have be very different from an app. And that's
[01:37:02.240 --> 01:37:07.280]  where we ran, we've run into this problem in recent years where now you can have software
[01:37:07.280 --> 01:37:12.000]  that does things automatically and that if the user really wants to use, it should be
[01:37:12.000 --> 01:37:18.800]  running in the background, but it's exactly the sort of thing that makes me so passionate.
[01:37:19.760 --> 01:37:27.840]  Always going back to the early days of classic Mac, that the Mac let an enthusiast user who
[01:37:27.840 --> 01:37:32.400]  wanted to understand how their computer worked, but without being technical, that you could
[01:37:32.400 --> 01:37:38.080]  learn how it works. And you wouldn't be worried that because your computer was 18 months old,
[01:37:38.080 --> 01:37:43.200]  that you had all sorts of shit running in the background automatically, and that you don't
[01:37:43.200 --> 01:37:48.160]  even know what it is. You don't know how to tell what it is. And even if you know what it is,
[01:37:48.160 --> 01:37:52.400]  because it's popping up a dialogue box once in a while, you're like, I didn't launch that.
[01:37:52.400 --> 01:37:58.560]  It's clearly launching automatically every time I restart. How do I turn this off? How do I stop
[01:37:58.560 --> 01:38:04.320]  this thing from whatever company installed it from running automatically? And being able to
[01:38:04.320 --> 01:38:09.760]  have that list was great. And now that they've modernized it to account for all the modern ways
[01:38:09.760 --> 01:38:15.440]  things can come in the background, it truly exemplifies to me the best of the Mac spirit.
[01:38:15.440 --> 01:38:22.880]  Right. And it's very Mac-like specifically, not Apple specifically, because iOS and iPadOS,
[01:38:22.880 --> 01:38:29.600]  and certainly watchOS and tvOS, to go further down the list of where this would be so bizarre,
[01:38:29.600 --> 01:38:34.080]  they don't have the concept of shit running in the background. And that's the whole sandboxing thing
[01:38:34.080 --> 01:38:40.000]  in the App Store. Like you can be the most enthusiastic user of I'm going to try a new
[01:38:40.000 --> 01:38:44.400]  app from the App Store every day, I'm just going to pick a random app and install it on my iPhone.
[01:38:44.400 --> 01:38:50.560]  And do that for three years, you're not going to have any shit running in the background
[01:38:50.560 --> 01:38:55.040]  when you restart your phone fresh, because it just isn't part of the OS or the concept. And that's
[01:38:55.040 --> 01:38:59.440]  too, it's a whole different podcast episode to talk about whether Apple of all companies should
[01:38:59.440 --> 01:39:06.480]  be the one to make a mode for the iPhone or a Mac phone, where there's an enthusiast version
[01:39:06.480 --> 01:39:11.280]  of the iPhone where this unbelievably powerful software could let you run things in the
[01:39:11.280 --> 01:39:15.200]  background. Because I've run all sorts of stuff in the background on my Mac. And if I could do
[01:39:15.200 --> 01:39:19.840]  it on the phone, I would. It'd be fantastic if Rogue Amoeba could make sound source for
[01:39:20.640 --> 01:39:27.200]  iOS. But the fact that the Mac does allow you to do that, and yes, they've made it harder for
[01:39:27.200 --> 01:39:32.560]  security reasons and privacy reasons, that it's more of a hassle than the old days when everything
[01:39:32.560 --> 01:39:36.640]  was just an app and anything could be in your login items. But to bring that back where you
[01:39:36.640 --> 01:39:43.600]  can inspect what happens automatically from all third party software. Fantastic. Huge win. Can't
[01:39:43.600 --> 01:39:51.600]  say enough about it. It's so good that we can't allow the return to the old system preferences
[01:39:51.600 --> 01:40:00.480]  if we lose this. Where is the new list in Ventura? It's under general. So this is also confusing to
[01:40:00.480 --> 01:40:09.040]  me the whole like stack based iOS thing. And I totally accept it and agree that the old system
[01:40:09.040 --> 01:40:14.240]  preferences were a nightmare as well. Like this organizationally, there were lots of like,
[01:40:15.360 --> 01:40:21.760]  nested like things you'd have to go and like advanced and then well, even the login items
[01:40:21.760 --> 01:40:26.000]  being in users as groups was sort of counterintuitive. I see what once you understand
[01:40:26.000 --> 01:40:31.680]  it. Oh, it's per user. So you can see which login items another user has to. It makes some sense.
[01:40:31.680 --> 01:40:38.160]  And yeah, I'm searching right now in Mac OS 10.15. The old I'm running an old version of Mac OS here
[01:40:38.160 --> 01:40:43.040]  on this podcast machine. If I search for login, yes, login items shows up and I hit return and
[01:40:43.040 --> 01:40:48.160]  it takes me there. So search at least works now. Yeah, as for years, but yeah, but you know what,
[01:40:48.160 --> 01:40:52.080]  you know what, this is another little bug, though, that really bugged me for years. I can't believe
[01:40:52.080 --> 01:40:57.840]  Apple never fixed it years and years. If you type too fast in the system preferences search,
[01:40:57.840 --> 01:41:03.760]  have you ever? Yes. It's so infuriating. It'll like lose a keystroke or something. Yeah,
[01:41:03.760 --> 01:41:08.240]  because it's like doing something like running some sort of query after every keystroke.
[01:41:08.240 --> 01:41:14.720]  But the query can take longer than Yeah. So anyway, to give Apple full credit, I'm also
[01:41:14.720 --> 01:41:20.320]  very excited that as far as I can tell, in the system settings and Ventura, that is fixed.
[01:41:20.320 --> 01:41:26.560]  Finally, that bothered me so much. I thought in my more bored times, I thought of like,
[01:41:27.440 --> 01:41:34.320]  figuring out a way to like inject code into system preferences to fix that. But yeah, so in the
[01:41:34.320 --> 01:41:39.360]  Ventura system settings, it's under general. And then there's all this good stuff. It looks
[01:41:39.360 --> 01:41:45.200]  a lot like iOS, I can see like Craig Federighi's argument about it being an improvement to the
[01:41:45.200 --> 01:41:52.400]  organization and being familiar to iOS developers. That all makes sense. General login items,
[01:41:52.400 --> 01:41:58.160]  and then it lists open at login, and then below that allow in background, and it's all fairly
[01:41:58.160 --> 01:42:06.320]  well laid out. It's just totally different from Mac, typical Mac UI. And I don't know some something
[01:42:06.320 --> 01:42:14.000]  about this. I don't think I'm okay with it. But I'll get used to it. It's like, I doesn't seem
[01:42:14.000 --> 01:42:20.640]  good. It doesn't seem right. Some of the things about this change seem great. The fact that they
[01:42:20.640 --> 01:42:25.920]  have fixed the search field, and they have login items, and there's something about the overall
[01:42:25.920 --> 01:42:34.320]  cohesiveness of the new system settings that does feel good. And I want to give full credit to Apple
[01:42:34.320 --> 01:42:45.280]  for the good work that has gone into this. But the imposition of a very iOS style UI, I don't know if
[01:42:45.280 --> 01:42:49.200]  that's where we're going. And in general, in the broader sense, if that's where we're going with
[01:42:49.200 --> 01:42:59.680]  Swift UI, I just feel like this is not the right UI for a mouse and desktop monitor computer.
[01:42:59.680 --> 01:43:11.280]  Right. I tried to make that point with Molt's last episode that it's a mouse pointer and keyboard
[01:43:11.280 --> 01:43:16.880]  computer. We used to call them WIMP interface, Windows icons, mouse pointer. Was that what the P
[01:43:16.880 --> 01:43:26.480]  was? I think it was Netflix. But the Mac with the precise pointer can work with a UI seemingly
[01:43:26.480 --> 01:43:33.840]  designed for touch in a way that the iPhone inherently designed only for touch with nothing
[01:43:33.840 --> 01:43:39.200]  more precise than your fat finger point would not have been good. I don't think it would have been
[01:43:39.200 --> 01:43:43.920]  a success or certainly wouldn't be the success that it was if they had made some sort of Mac
[01:43:43.920 --> 01:43:49.200]  style interface for the original iPhone. That the way they rethought everything really was
[01:43:49.200 --> 01:43:56.720]  necessary for the lack of precision in pointing and was also meant for this scrollable interface that
[01:43:56.720 --> 01:44:01.840]  responds to your touch right away. Because one of the things, and I'll emphasize this to anybody
[01:44:01.840 --> 01:44:08.720]  out there listening, you're bringing up Safari, Mac Safari as an exemplar of a somewhat complex
[01:44:08.720 --> 01:44:16.720]  preferences window that is well laid out because I've been tapping around these tabs in Safari
[01:44:16.720 --> 01:44:22.400]  ever since you brought it up. And I'm noticing this and that, and I'm like, boy, that is a nice
[01:44:22.400 --> 01:44:27.840]  touch. Safari's preferences also though, the current ones right now exemplify the fact though
[01:44:27.840 --> 01:44:33.520]  that each of those tabs at the top, general, literally the next one is tabs, autofill,
[01:44:33.520 --> 01:44:40.240]  passwords. The contents of each of those tabs easily and naturally fit in a window without any
[01:44:40.240 --> 01:44:45.360]  scrolling. Although the window does nicely, it is one of those things that seemed like magic in the
[01:44:45.360 --> 01:44:52.160]  early days of Mac OS X, the window automatically resizes because like the autofill preferences are
[01:44:52.160 --> 01:44:58.400]  only four check boxes high, right? It's a very short list of preferences. And so the whole window
[01:44:59.280 --> 01:45:05.840]  contracts to just fit what's necessary. But then when you go to privacy, it grows a little bit,
[01:45:05.840 --> 01:45:10.320]  and then you go to websites and it grows a lot because there's a lot of lists. But it's really
[01:45:10.320 --> 01:45:14.160]  thoughtful. I've always said this, I'd say this again, and it's lost and it's a whole
[01:45:14.160 --> 01:45:20.400]  nother discussion about Safari versus other web browsers on the Mac and WebKit versus these
[01:45:20.400 --> 01:45:25.600]  browsers and what features are in there or whatever. But putting aside the web developer's
[01:45:25.600 --> 01:45:30.880]  perspective about differences in WebKit versus Chromium and the problems they might encounter
[01:45:30.880 --> 01:45:37.200]  where Chromium is much faster to adopt new web standards than WebKit and whether that's political
[01:45:37.840 --> 01:45:41.520]  because Apple wants to have people make apps instead of websites, blah, blah, blah.
[01:45:41.520 --> 01:45:47.200]  Just put that aside. If you just look at Safari as a whole, corner to corner, menu bar down,
[01:45:47.200 --> 01:45:52.320]  it is a wonderful Mac app. You could teach a whole course, not just like a single lecture,
[01:45:52.320 --> 01:45:58.320]  but base a whole course on Mac UI design around Safari and all these details. And the preferences
[01:45:58.320 --> 01:46:02.640]  window is one of them. But the preferences window also is really where the difference
[01:46:02.640 --> 01:46:07.520]  between Safari and all other browsers today on the Mac, at least the ones from the big
[01:46:07.520 --> 01:46:13.120]  companies, is exemplified because Chrome and everybody else follows Chrome's lead just makes
[01:46:13.120 --> 01:46:21.120]  the preferences content within a web browser. It's completely un-Mac-like. It's just Chrome
[01:46:21.120 --> 01:46:27.520]  in its own universe of interface. It's a very junk drawer style of, yeah. And I think it's
[01:46:27.520 --> 01:46:32.800]  an interesting contrast with system preferences as a whole for the whole system where in the
[01:46:32.800 --> 01:46:39.200]  early days of Mac OS X, when it really was Mac OS X, I think it's fair to say that every one
[01:46:39.200 --> 01:46:45.600]  of those preference panels fit in the model of this one window. And the window, again,
[01:46:45.600 --> 01:46:49.840]  in system preferences grows and shrinks as needed depending on the panel. But the biggest
[01:46:49.840 --> 01:46:55.920]  one that was necessary was fit within a window that didn't need to scroll, which was important
[01:46:55.920 --> 01:47:00.960]  because the window didn't scroll, right? But then you could put sub-views in. And again,
[01:47:00.960 --> 01:47:06.240]  that's, it said this last week, Federighi argued it extremely well on stage with me at my talk
[01:47:06.240 --> 01:47:14.320]  show back at WWDC, that those things have grown significantly over the years. And there's so much
[01:47:14.320 --> 01:47:20.640]  stuff now that is undoubtedly, I would argue, as somebody who loves the old system preferences
[01:47:20.640 --> 01:47:26.400]  and sort of feels like maybe they've rushed this change to system settings one year too soon,
[01:47:26.400 --> 01:47:31.840]  that the team should have been full steep ahead on exactly what we see. But maybe this was a thing
[01:47:31.840 --> 01:47:37.920]  that would have been best announced next year. But I totally, and again, I could sing the praises
[01:47:37.920 --> 01:47:42.880]  and lecture and try to make a lecture or a talk at a conference about the things that are little
[01:47:42.880 --> 01:47:48.160]  details of UI design that have done so well in the classic system preferences. A lot of it is
[01:47:48.160 --> 01:47:55.120]  just horrible at this point because it's trying to do too much, right? You go to security and
[01:47:55.120 --> 01:48:03.280]  privacy alone, just security and privacy alone. It could be an app or several apps unto itself,
[01:48:03.280 --> 01:48:09.120]  and you're down there within privacy. Now there's four tabs at the part, general file vault is
[01:48:09.120 --> 01:48:15.520]  simple, right? That's a nice, easy tab, but it's already a sub-tab in security and privacy. You get
[01:48:15.520 --> 01:48:22.920]  to privacy and here's where you're off in crazy land, where you've got location services, contacts,
[01:48:22.920 --> 01:48:28.800]  calendars, reminders, photos, camera, microphone, speed trick. It goes on and on, full disk access.
[01:48:28.800 --> 01:48:34.480]  And every one of those things, I could name all of them. Every one of those things seems like a
[01:48:34.480 --> 01:48:40.880]  reasonable thing that Apple should have in the privacy settings for the macOS. But boy, that's
[01:48:40.880 --> 01:48:48.800]  a lot to cram into a list inside a tab, inside a prep pane. And then some of those or many of
[01:48:48.800 --> 01:48:54.320]  them themselves, once you select them, have their own view over to the side of the apps that have
[01:48:54.320 --> 01:49:01.600]  those privileges like location services access, right? It is a lot to cram in there. And I,
[01:49:01.600 --> 01:49:07.680]  as a diehard Mac user who prides myself on paying attention to this stuff, even I forget where the
[01:49:07.680 --> 01:49:11.920]  hell the preference for something something is. So I think it's a win. I haven't forgotten your
[01:49:11.920 --> 01:49:18.080]  other very keen point, your ambivalence about what Apple should do. Specifically, this tab's
[01:49:18.080 --> 01:49:28.640]  controversy with Safari last year, which is, I can't talk about it without naming myself as an
[01:49:28.640 --> 01:49:38.000]  actor. I am. I wrote about it extensively. And honestly, I did not try to trash it. I didn't take
[01:49:38.000 --> 01:49:46.560]  any, but I felt like I had much to say. I felt like I was right. And I said it. And as close as
[01:49:46.560 --> 01:49:53.440]  I can come to say, I'm not saying that I will not say that I, John Gruber deserve credit for Safari's
[01:49:53.440 --> 01:50:03.200]  tabs being scrapped. But I can say that my public arguments against it were highly influential
[01:50:04.080 --> 01:50:11.200]  within Apple at taking the unusual step of just scrapping what was a featured
[01:50:11.200 --> 01:50:16.400]  big change from the OS that year. And there, you know, especially, you know, in the last two weeks,
[01:50:16.400 --> 01:50:21.760]  since this has come out, I've had people, reader and listener feedback along the lines of I've
[01:50:21.760 --> 01:50:27.600]  been waiting for you to say more about system settings. And I hope you do to system settings,
[01:50:27.600 --> 01:50:35.200]  what you did for Safari tabs last year. And I, because I feel so much more like you, I don't feel
[01:50:35.200 --> 01:50:41.280]  it's similar in that there are things that are clearly wrong that there's clearly intending to
[01:50:41.280 --> 01:50:46.000]  ship, but I don't feel as strong. Like I was certain I was dead certain last year. I didn't
[01:50:46.000 --> 01:50:50.640]  know if what I could write would change things, but it felt like I was right that I should at
[01:50:50.640 --> 01:50:56.480]  least publicly put it out when I had time to give Apple time to consider it and change their mind.
[01:50:57.120 --> 01:51:01.680]  I don't feel that way about system settings. Again, I think you said it very well, you know,
[01:51:01.680 --> 01:51:08.880]  that there are so many good things about it, right? But exactly as it is, it is sort of,
[01:51:08.880 --> 01:51:15.280]  I think that's where it gets at. It's not about system settings. It's about this underlying,
[01:51:16.080 --> 01:51:23.680]  how much do you force the familiarity and conventions of iOS UI design on the Mac in
[01:51:23.680 --> 01:51:30.160]  general? Like who cares system settings, even though I said, like, I considered hacking the
[01:51:30.160 --> 01:51:38.800]  app to fix the search field, I don't use system settings as much as Safari. So like the tabs issue
[01:51:38.800 --> 01:51:45.680]  in Safari could have been much more impactful on my day-to-day enjoyment of my Mac. Right.
[01:51:46.560 --> 01:51:53.440]  And so system settings, I mean, like also, like we've said, we both agree the old system
[01:51:53.440 --> 01:52:00.480]  preferences is not, it's not like this wonderful, perfect thing. Or it's not the wonderful,
[01:52:00.480 --> 01:52:07.200]  nearly perfect thing at once was. It really was wonderful. And perfect is a hard word to bite,
[01:52:07.200 --> 01:52:12.400]  especially for perfection and someone like you who loves hunting bugs. But it was pretty close
[01:52:12.400 --> 01:52:18.640]  to the best imaginable system settings thing. It was a lot of stuff that was organized at the time
[01:52:18.640 --> 01:52:23.760]  pretty well. It's not that it's aged poorly. It's just that the complexity of the system
[01:52:23.760 --> 01:52:27.600]  and the things that are now considered important, I mean, full disk access, that's,
[01:52:27.600 --> 01:52:34.000]  that's everything that ran on your system had full disk access, or at least full disk access
[01:52:34.000 --> 01:52:39.760]  to your user account. There's so much stuff that's just wasn't an issue then. And it's outgrown it.
[01:52:39.760 --> 01:52:42.960]  I don't want to leave the topic, but I do want to take a break here and thank our third and final
[01:52:42.960 --> 01:52:47.280]  sponsor today. And it fits right in with the idea of tools that make development of,
[01:52:47.280 --> 01:52:54.720]  of software easier. It's our friends at RevenueCat. In-app subscriptions are a pain.
[01:52:54.720 --> 01:52:59.040]  The code can be hard to write, time-consuming to maintain, and full of edge cases.
[01:52:59.040 --> 01:53:06.000]  I have never made an app with in-app subscriptions, but I have many friends who have.
[01:53:06.000 --> 01:53:10.560]  And I can say for a fact that I don't know a single one of them that thinks that right out
[01:53:10.560 --> 01:53:18.960]  of the box in-app subscriptions are easy in any way possible. RevenueCat makes it simple so that
[01:53:18.960 --> 01:53:25.200]  you as the developer can focus on building features, not in-app purchase infrastructure.
[01:53:25.200 --> 01:53:29.840]  With RevenueCat, you also get out of the box subscription metrics and charts that you can't
[01:53:29.840 --> 01:53:35.760]  get from App Store Connect. Plus pre-built integrations and web hooks make it easy to
[01:53:35.760 --> 01:53:40.800]  sync customer events and revenue data to every tool in your stack.
[01:53:42.320 --> 01:53:47.920]  Here's where you go to find out more. RevenueCat.com. No special URL. Just learn more
[01:53:47.920 --> 01:53:55.040]  at RevenueCat.com and see why thousands of the world's best apps trust RevenueCat to
[01:53:55.040 --> 01:54:02.480]  power subscriptions on iOS, Android, and the web. RevenueCat.com. My thanks to them for sponsoring
[01:54:02.480 --> 01:54:09.360]  the show. They're also sponsoring Daring Fireball this week. It's a nice, rare twofer that generally
[01:54:09.360 --> 01:54:12.480]  I think only happens by coincidence, but it's nice when it happens.
[01:54:13.600 --> 01:54:21.360]  Three sponsors and I am a customer slash patron, whatever, of all three. So I guess I'm on the
[01:54:21.360 --> 01:54:25.920]  right show. Linode, RevenueCat. What was the second one?
[01:54:27.040 --> 01:54:27.920]  Memberful.
[01:54:27.920 --> 01:54:32.800]  Memberful. Right. I use all these products. So hey, good sponsors.
[01:54:32.800 --> 01:54:38.640]  I often tell sponsors it's the ground troops who encourage their company if they work at a larger
[01:54:38.640 --> 01:54:45.600]  company. Maybe you should sponsor Daring Fireball or the talk show. And at a company where there's
[01:54:45.600 --> 01:54:50.720]  a dedicated marketing team, they may not be familiar with me or my work, but it can sometimes
[01:54:50.720 --> 01:54:56.400]  be hard to explain, especially like my sponsorships because they don't work like most web ads at all.
[01:54:56.400 --> 01:55:00.400]  And in fact, as time has gone on, they're less and less like most web ads.
[01:55:00.400 --> 01:55:06.240]  And then I haven't been running any analytics on Daring Fireball for, I think, a year and a half,
[01:55:06.240 --> 01:55:14.080]  something like that. And that sometimes doesn't seem like not only have they never heard that,
[01:55:14.080 --> 01:55:19.200]  but it doesn't seem to make any sense to them. But when they ask questions about the audience,
[01:55:19.200 --> 01:55:24.160]  I say, I don't have analytics and I don't do polls. I never say never. Maybe I'll do
[01:55:24.160 --> 01:55:30.720]  a reader poll someday. But my best description of who's a successful sponsor of my site is to
[01:55:30.720 --> 01:55:35.280]  look at my archived list of sponsors, and especially the list of repeat sponsors who
[01:55:35.280 --> 01:55:40.240]  clearly were happy with the results that they got. But that in terms of my audience, it's not,
[01:55:40.240 --> 01:55:45.440]  is it designers? Is it programmers? Is it tech people? And I say it's all of the above.
[01:55:45.440 --> 01:55:49.680]  And really the best way I can encapsulate it is people with good taste.
[01:55:49.680 --> 01:55:54.480]  Jared Ranerelle Yeah. Yeah, we have a similar problem on Core Intuition. It's just like,
[01:55:55.200 --> 01:56:00.720]  we don't do any work to try to make ourselves marketable. It's just, if you want to reach our
[01:56:00.720 --> 01:56:03.760]  people, whoever they are, then let us know. Pete Turner
[01:56:03.760 --> 01:56:07.440]  We'll throw out another shout out to Core Intuition at the end. Let me say this before
[01:56:07.440 --> 01:56:14.000]  we sign off. I want to talk about, because I sort of threw SwiftUI under the bus in my,
[01:56:15.040 --> 01:56:19.040]  more so than I threw the new system settings itself under the bus.
[01:56:19.040 --> 01:56:25.120]  One thing that I think is fair to say is you could pretty much do any interface you want in AppKit.
[01:56:25.760 --> 01:56:30.240]  I think that's part of the appeal and the basic idea. You may have to start customizing at a
[01:56:30.240 --> 01:56:34.320]  certain level, right? And at some level, every good app has something in it that's custom,
[01:56:34.320 --> 01:56:39.440]  because if it was really just all built into AppKit, you just got text editor preview,
[01:56:39.440 --> 01:56:43.520]  which they actually preview is more than just standard AppKit, I guess, but you could.
[01:56:43.520 --> 01:56:50.400]  So you could have used AppKit to make an iOS style, iPadOS style redesign of settings.
[01:56:51.600 --> 01:56:55.360]  I guess you could have also definitely, it might have even been easier if the
[01:56:55.360 --> 01:57:02.480]  one of the stated goals is to make it iOS like in its layout and appearance for reasons scroll
[01:57:02.480 --> 01:57:08.480]  ability being a big one. That's one of the key points really is that makes this idea better
[01:57:08.480 --> 01:57:14.480]  than every thing fitting into views within sub views in a fixed size window that you could have
[01:57:14.480 --> 01:57:20.000]  used UIKit to now with catalyst. They certainly did a fantastic job. I always bring it up with
[01:57:20.000 --> 01:57:27.440]  messages, right? I'm sure everybody who isn't a nerd has no idea that two years ago or three
[01:57:27.440 --> 01:57:33.280]  years ago, I don't know how many years ago that one was, but that Apple didn't throw out, but
[01:57:33.280 --> 01:57:40.640]  more or less redid the Mac messages app as a catalyst port from the messages app on iPad and
[01:57:40.640 --> 01:57:45.440]  iPhone. And it has everything you could have wanted, including Apple script support, which
[01:57:45.440 --> 01:57:50.160]  I really thought like, Oh, I don't use Apple script and messages very often, but when I do,
[01:57:50.160 --> 01:57:53.360]  I was really nice to have, and there's no way that's going to make it because that's not part
[01:57:53.360 --> 01:57:57.840]  of UIKit and it's there. They really knocked it out. I think if they had done a settings
[01:57:57.840 --> 01:58:02.640]  redesign that the way that this new Ventura settings is supposed to look like, if we ignore
[01:58:02.640 --> 01:58:06.320]  all of the glitches and layout things, you can sort of see what it's supposed to look like.
[01:58:07.040 --> 01:58:10.560]  If they were using UIKit or AppKit, these glitches would not be there.
[01:58:11.600 --> 01:58:16.160]  I really believe that's true. And because they've never been there before, right? Like when they
[01:58:16.160 --> 01:58:24.320]  totally redesigned iOS 7, when it went from the old lickable 3D textured interface to the
[01:58:24.320 --> 01:58:30.000]  Scott Forstall's gone, Johnny Ive is in charge of UI now, more consistent across apps,
[01:58:30.000 --> 01:58:35.760]  throw out the textures. We don't need buttons that look 3D. They can just be text labels,
[01:58:35.760 --> 01:58:42.000]  look of iOS 7. There were lots of problems in the iOS 7 beta because it was all new and it was all
[01:58:42.960 --> 01:58:47.280]  surprisingly fast. You can look back at the date when they announced that Forstall was
[01:58:47.280 --> 01:58:52.640]  being forced out of the company and that the UI design team would now report to Johnny Ive.
[01:58:52.640 --> 01:58:57.920]  But that's effectively when the iOS 7 look and feel project started. And here it was in June,
[01:58:57.920 --> 01:59:02.800]  like seven months later or eight months, something like that. Not a lot of time for a project like
[01:59:02.800 --> 01:59:06.560]  that. There were lots of things that were glitches, lots of things they sort of, okay,
[01:59:06.560 --> 01:59:11.920]  now that it's in public. Remember that Mail in particular used a very thin weight of Helvetica
[01:59:11.920 --> 01:59:17.920]  for lots of stuff that maybe looked elegant in screenshots, but was actually hard to read. It
[01:59:17.920 --> 01:59:22.000]  was such a thin weight and they just bumped it back up to a regular weight of Helvetica.
[01:59:22.560 --> 01:59:27.120]  But all the things that were wrong in the beta, because so much had happened in a short period
[01:59:27.120 --> 01:59:34.720]  of time, none of them were these egregious, just bizarro things like buttons that are half cut off.
[01:59:34.720 --> 01:59:40.640]  Yeah, it took me a while, even living full time on Ventura, it took me a while to notice that
[01:59:40.640 --> 01:59:47.520]  another like really problematic change in the system is the print panel. I don't know if you
[01:59:47.520 --> 01:59:55.600]  noticed this. I made a tweet about it. Basically the print panel is also completely transformed
[01:59:55.600 --> 02:00:04.000]  into this iOS scrollable table view style. And again, it's a good example where the print panel
[02:00:04.000 --> 02:00:10.240]  has so many problems. It's easy to imagine why somebody was excited to tackle this and try to
[02:00:10.240 --> 02:00:16.080]  make it better. And it is better in some ways, but it's just specifically when you talk about
[02:00:16.080 --> 02:00:23.360]  the cutoff thing, like I don't know why they are affecting, I guess this is Swift UI, I'm assuming,
[02:00:23.360 --> 02:00:30.160]  I don't know for sure. I don't know, but the system settings, I think you maybe confirmed it
[02:00:30.160 --> 02:00:34.880]  or close to confirmed that it is Swift UI. Or at least parts of it, right? Yeah. And it's,
[02:00:34.880 --> 02:00:40.080]  I know a lot of this stuff, you can make it mostly Swift UI and call out to app or UI kit when you
[02:00:40.080 --> 02:00:45.440]  need to, or app kit or whatever, you know, that it's not, there is no such thing. And there's no
[02:00:45.440 --> 02:00:53.120]  need to be a religious dogmatic purist that it's all Swift UI no matter what. But yeah,
[02:00:53.120 --> 02:00:56.800]  but Swift UI is definitely involved. Yeah. So I don't know. It's weird.
[02:00:56.800 --> 02:01:02.240]  Cause like I said earlier, in many ways, at least on iOS, I think Swift UI has
[02:01:02.240 --> 02:01:10.720]  sealed up the rough edges so that it's harder to make things look inadvertently wrong. I don't have
[02:01:10.720 --> 02:01:16.560]  enough experience myself using Swift UI to know what the people who are developing this stuff in
[02:01:16.560 --> 02:01:22.480]  Swift UI are running up against the, what makes it unpredictable in this way. Looking now,
[02:01:22.480 --> 02:01:28.800]  I'm looking at my Mac at the print panel and there's just a lot of, well, a computer decided
[02:01:28.800 --> 02:01:34.080]  how to lay this out and not a person. And there's something wonderful about that. Like the web,
[02:01:34.960 --> 02:01:44.480]  the basic fact that like multiple paragraphs on a webpage can flow across a page without any human
[02:01:45.600 --> 02:01:50.640]  designing that it works really well. So there's something to be said for declarative
[02:01:50.640 --> 02:01:57.360]  design where like standards can be applied to make it look right all the time. And I guess
[02:01:57.360 --> 02:02:04.880]  there's just this rough edge between what can be made to look right all the time and what needs
[02:02:04.880 --> 02:02:11.920]  a human eye to finesse it. And some of this Swift UI stuff on the Mac, at least either it needs
[02:02:11.920 --> 02:02:20.000]  better programmatic rules at the Apple end, or it needs to allow more developer interaction
[02:02:20.000 --> 02:02:25.360]  with making it look perfect. I thought you made such a keen point. I really liked it. And it was
[02:02:25.360 --> 02:02:32.800]  really, it was like, I read your post on bitsplitting.org and I just, I thought I got
[02:02:32.800 --> 02:02:36.880]  to have Jalkyd on to talk about this. And you were riffing off my post about this and you have
[02:02:36.880 --> 02:02:40.960]  a screenshot in there, but you brought up the story that I've told a few times. I think you
[02:02:40.960 --> 02:02:46.320]  told a few times. I've talked to people firsthand. I don't think it's public knowledge, but we do
[02:02:46.320 --> 02:02:53.760]  know that the M1 original Macs, the MacBook Air and the 13-inch MacBook Pro and the Mac Mini
[02:02:54.720 --> 02:03:00.800]  that were announced when the first Apple Silicon Macs in November of 2020, that they were form
[02:03:00.800 --> 02:03:06.560]  factor identical to the last generation Intel versions of all three. And that you'd have to
[02:03:06.560 --> 02:03:11.440]  look at the actual serial numbers to be able or product numbers underneath the little small print
[02:03:11.440 --> 02:03:20.400]  to tell whether a MacBook Air was an Intel one from earlier in 2020 or the late 2020 that was
[02:03:20.400 --> 02:03:26.720]  shifted to Apple Silicon. And that this was a deliberate strategy. This is what I can say from
[02:03:27.360 --> 02:03:32.480]  multiple sources at Apple, but they planned that out years in advance to get the last generation
[02:03:32.480 --> 02:03:37.440]  Intel ones to a point that they'd be good enough to use as the first generation of Apple Silicon
[02:03:38.480 --> 02:03:44.080]  for multiple strategic reasons. They wanted it to be secret from the supply chain so that if
[02:03:44.080 --> 02:03:50.080]  anything did go wrong, that they didn't want Intel to know until as late as possible because it's
[02:03:50.080 --> 02:03:55.440]  strategy, right? That's the way you work with a company that's part partner, part adversary
[02:03:55.440 --> 02:04:02.640]  with negotiating. But then also, and engineering wise, let's get them to a point where we change
[02:04:02.640 --> 02:04:11.840]  as little as possible because transplanting the entire architecture is a big deal. It might sound
[02:04:11.840 --> 02:04:16.080]  like a big deal to the lay person out there listening. And trust me, as expert as I am,
[02:04:16.080 --> 02:04:20.560]  I can say it's a big deal. And I think you would agree. And somebody who's even more expert,
[02:04:20.560 --> 02:04:24.720]  like people who actually work on Johnny Suruji's team at Apple at a high level would say,
[02:04:24.720 --> 02:04:30.960]  oh yeah, you have no idea. It was incredibly complex. So change as little as possible,
[02:04:30.960 --> 02:04:35.920]  right? So that nothing would go wrong. And I think this, I don't know for a fact, but I think it's
[02:04:35.920 --> 02:04:42.720]  part of the reason that they fixed the keyboards to the new no longer using butterfly switches
[02:04:42.720 --> 02:04:49.040]  things. I think in 2019, that was maybe it was 2018 at the latest, but it was in the last year
[02:04:49.040 --> 02:04:56.480]  or so of Apple's Intel MacBooks. But let's fix this freaking keyboard now so that we can have
[02:04:56.480 --> 02:05:01.520]  it in a while. And then when we go to Apple Silicon, the keyboard is off our list of things
[02:05:01.520 --> 02:05:05.520]  that we know we have to look at. And part of it too, is that the whole keyboard situation had
[02:05:05.520 --> 02:05:09.920]  gone on for years at that time anyway. But you brought up that they could have done something
[02:05:09.920 --> 02:05:15.680]  similar, right? If you're going to make a big change, try to change as few things as possible.
[02:05:15.680 --> 02:05:19.920]  Only change one thing. Don't even change the display or the webcam or the speakers or the
[02:05:19.920 --> 02:05:25.280]  keyboard or the size of the case. Let's just change from Intel to Apple Silicon. And that's
[02:05:25.280 --> 02:05:29.200]  enough change for an entire product generation. And if we pull it off, that'll be great. And then
[02:05:29.200 --> 02:05:34.720]  we'll make new MacBook Airs a year later that have an all new design from the ground up meant
[02:05:34.720 --> 02:05:38.880]  for Apple Silicon, which we just saw a couple months ago. Couldn't they have done that with
[02:05:38.880 --> 02:05:45.280]  Swift UI? And if they're going to switch to Swift UI as a truly foundational change to how system
[02:05:45.280 --> 02:05:50.560]  preferences is made, couldn't they have tried to make it look exactly like system preferences?
[02:05:50.560 --> 02:05:56.640]  We know. And change just that one thing. And then once you know Swift UI is capable
[02:05:56.640 --> 02:06:02.000]  of building something like that, then you know it's ready to make a new UI with it.
[02:06:02.880 --> 02:06:07.520]  That's really interesting that you connected that strongly to the system
[02:06:08.320 --> 02:06:13.280]  settings. Because in my own mind, I didn't even think about it in that specific way.
[02:06:13.280 --> 02:06:17.680]  I thought about it in the broader, more general sense of like,
[02:06:19.360 --> 02:06:28.080]  Swift UI as a technology, make it replicate the cocoa, the app kit and the UI kit controls
[02:06:28.080 --> 02:06:32.960]  and the behavior of all of them. Exactly. So it's a little bit of a different angle
[02:06:32.960 --> 02:06:39.760]  what you're extrapolating. But I, yeah, I think it's, I think I said in the piece,
[02:06:39.760 --> 02:06:44.320]  it's like it wouldn't have been less exciting, but it would have been better, ultimately, if
[02:06:46.240 --> 02:06:50.240]  you know, I do this all the time in my own work. I'm currently working on Mars Edit,
[02:06:50.240 --> 02:06:54.480]  on the next major version of Mars Edit. And I'm working on the syntax highlighting and
[02:06:55.440 --> 02:07:01.680]  I am dramatically changing the infrastructure of the syntax highlighting. And the temptation is
[02:07:01.680 --> 02:07:08.560]  there to add new features and to dramatically enhance the way syntax highlighting works.
[02:07:08.560 --> 02:07:14.080]  And my boring ambition is first and foremost, to get it to work exactly the same
[02:07:14.800 --> 02:07:20.320]  as the previous version. And I'm not going to hold myself up as somebody who always makes the right
[02:07:20.320 --> 02:07:26.080]  choice technologically or business wise or anything. But as soon as I saw your piece
[02:07:26.080 --> 02:07:33.520]  about Swift UI, it sort of unlocked this feeling I've had about Swift UI over the past few years.
[02:07:33.520 --> 02:07:37.040]  I mean, I started off like everybody else. I think I was just so excited about it. I was like,
[02:07:37.040 --> 02:07:43.760]  this is neat. This looks fun. It looks exciting. It's fun to program. And to your point, you made
[02:07:43.760 --> 02:07:50.000]  a point a few minutes ago about like with AppKit, you could customize any aspect of UI. I think you
[02:07:50.000 --> 02:07:55.440]  can do the same with Swift UI. I'm not experienced with it myself, but I think if you want to like
[02:07:55.440 --> 02:08:01.040]  rebuild the earth from the ground up with Swift UI, I think you can do that as a developer.
[02:08:01.040 --> 02:08:08.000]  The things people complain about and are, I think, rightfully annoyed by are the ways in which Swift
[02:08:08.000 --> 02:08:14.560]  UI offers you the promise of a certain system standard behavior and then doesn't follow through
[02:08:14.560 --> 02:08:21.440]  on it. So you say like, I want a table, I want a list, or I want a text view, or I want to control
[02:08:22.160 --> 02:08:28.080]  with a label and a value. And you get 90% of it maybe, but you don't get 100%.
[02:08:28.080 --> 02:08:37.760]  And I think it is such a major transition that if they had said, similarly with the M1,
[02:08:37.760 --> 02:08:43.680]  if they had said, hey developers, here's the deal. Swift UI is here. The bad news is you're
[02:08:43.680 --> 02:08:49.840]  not going to get any new functionality. The good news is it's going to be like easier to write
[02:08:49.840 --> 02:08:57.200]  bulletproof UI code that works exactly as you expect. Basically, one of the vectors of the
[02:08:57.200 --> 02:09:03.680]  change of Swift UI is that it is essentially a replacement for Interface Builder. Like if you're
[02:09:03.680 --> 02:09:09.920]  developing a Swift UI app, you don't use Interface Builder. So just coming from that point of view
[02:09:09.920 --> 02:09:16.720]  and saying, hey developers, we're going to give you an all new way to develop UI that is like
[02:09:17.360 --> 02:09:22.480]  Interface Builder, except for you write it all out in code. And I think people would have been
[02:09:22.480 --> 02:09:27.360]  excited by that. I mean, I'm sure there would be debates about which is better, but it would have
[02:09:27.360 --> 02:09:33.360]  been like, oh, okay, well, I can either lay all my radio buttons and check boxes and labels out
[02:09:33.360 --> 02:09:40.000]  in Interface Builder, or I can specify them with Swift UI in this data-driven mechanism,
[02:09:40.000 --> 02:09:45.280]  but they still look the same in the end. But what's the story then for somebody who like
[02:09:45.280 --> 02:09:52.960]  the prototypical designer who doesn't code producing something for production using Swift UI?
[02:09:52.960 --> 02:09:56.960]  I don't think it's good. It's a good question. I don't think it's good. I don't think there
[02:09:56.960 --> 02:10:03.440]  is a story for them. I mean, it's... You can imagine an interface style visual tool
[02:10:04.000 --> 02:10:09.840]  that looks visual and allows a visually oriented designer to do something. And then when you hit
[02:10:09.840 --> 02:10:17.040]  save, it's saving Swift UI. I mean, in theory, but that tool doesn't exist.
[02:10:17.600 --> 02:10:22.880]  I think that, and again, this is, I have to concede, I don't have a lot of experience
[02:10:22.880 --> 02:10:27.120]  with Swift UI. I played with it around the introduction and every once in a while I get
[02:10:27.120 --> 02:10:35.680]  back into trying it. But I think the interface for working the Swift UI previews in Xcode,
[02:10:35.680 --> 02:10:42.400]  I know they allow a certain amount of editing in the preview that then maps back into the Swift UI
[02:10:42.400 --> 02:10:49.680]  source code, but it's very integrated with the source code in a way that I don't know how much
[02:10:49.680 --> 02:10:56.640]  you could hand Xcode to a designer and say, just mess around with this in the UI, in the preview,
[02:10:56.640 --> 02:11:02.800]  and we'll take care of it from there. I hope that's something that's high on Apple's
[02:11:02.800 --> 02:11:07.520]  list for the future and we just haven't heard about it yet. And if not, I find that very sad
[02:11:07.520 --> 02:11:12.400]  and disappointing. Like you even said, like when you left Apple and started making apps on your
[02:11:12.400 --> 02:11:17.120]  own, that using Interface Builder was something that you found fun, right? It's a way of thinking
[02:11:17.120 --> 02:11:23.760]  about UI that even if you could do it all in code, doing it visually appeals to a part of your brain
[02:11:23.760 --> 02:11:28.320]  and in some ways is faster and easier and easier to know exactly that it's going to be right.
[02:11:28.320 --> 02:11:33.920]  This has been such a great episode and I've actually changed my mind a bit just by talking
[02:11:33.920 --> 02:11:39.280]  to you that I think I've come around to, no, I'm just going to say fully on board, but mostly on
[02:11:39.280 --> 02:11:44.560]  board with Apple forging ahead and shipping this and hopefully fixing as much as they can as
[02:11:44.560 --> 02:11:50.240]  frequently as they can to make it better. And that I guess it was if the bigger impetus was that
[02:11:50.240 --> 02:11:54.560]  they're going to do a big rewrite and they want to use Swift UI for it, it would have been a waste
[02:11:54.560 --> 02:12:01.600]  of time to recreate the old interface if they wanted to do a new interface too. You know,
[02:12:01.600 --> 02:12:09.680]  like I guess the way to do it would have been to do an app kit slash UI kit rewrite that implements
[02:12:09.680 --> 02:12:18.160]  the new interface and then start re-implementing it in Swift UI with going forward. But again,
[02:12:18.160 --> 02:12:23.280]  I can see that I don't have to have Craig Federighi back on the show to hear how,
[02:12:23.280 --> 02:12:28.720]  isn't that a waste of time too? If the goal, the twofold goal was we want a visual redesign
[02:12:28.720 --> 02:12:34.480]  where it's laid out and looks more like iPadOS and iOS and internally developer wise, we're so
[02:12:34.480 --> 02:12:39.040]  committed and think Swift UI, we're so convinced ourselves that Swift UI is the future that the
[02:12:39.040 --> 02:12:44.720]  sooner we switch to it, the better. The long future that still remains unbelievably ahead
[02:12:44.720 --> 02:12:52.880]  of the Mac, right? That wasn't finished in 2002. So I get it, but it is ambitious. And I know
[02:12:52.880 --> 02:12:57.200]  that's one of the things that I keep coming back to that I wonder how many people listening and
[02:12:57.200 --> 02:13:03.360]  reading. This is very ambitious and I know it must seem maybe to a lay person that the system
[02:13:03.360 --> 02:13:09.360]  settings app is kind of boring and it's just a bunch of check boxes and radio buttons and popups.
[02:13:09.360 --> 02:13:18.240]  But doing that well is intricate work. So it's no surprise to me that since early June,
[02:13:18.240 --> 02:13:24.400]  when they first showed this to us, to now nearing the end of August, that there hasn't been that
[02:13:24.400 --> 02:13:29.760]  much progress. And there's definitely been some, right? There's a lot of things that look better
[02:13:29.760 --> 02:13:34.240]  than the first developer build from June. I mean, it's definitely moving in the right direction.
[02:13:34.240 --> 02:13:40.080]  Yeah. But at the end of the day, we're going to have this iOS style UI,
[02:13:41.440 --> 02:13:46.240]  even if it's perfect, it's going to be a completely different style of UI than everything
[02:13:46.240 --> 02:13:49.600]  else on the Mac. And getting back to what I was saying and what you agreed with that
[02:13:50.400 --> 02:13:56.560]  Safari's, for instance, Safari's preferences is exemplary in like just kind of showing how to
[02:13:56.560 --> 02:14:02.080]  make a Mac preference panel. But that would be a good thing to say, let's rewrite the Safari
[02:14:02.080 --> 02:14:09.600]  preferences in Swift UI and make it exactly the same. Exactly. Well, but that's where I get back
[02:14:09.600 --> 02:14:14.160]  to this idea that they're changing too many things at once because they're changing not only like how
[02:14:14.160 --> 02:14:18.640]  things are laid out, but you know, you said like system preferences is boring. It's a bunch of
[02:14:18.640 --> 02:14:25.040]  check boxes and radio buttons, but there actually aren't any check boxes or radio buttons in the,
[02:14:25.040 --> 02:14:29.600]  in the new iOS style. I mean, there's some, there's some radio buttons, but there's some radio
[02:14:29.600 --> 02:14:35.440]  buttons. Yeah. But I'm looking right now on my Mac again, I'm running the Ventura beta and I'm
[02:14:35.440 --> 02:14:42.640]  looking at the Apple system preferences and then side by side with the Safari preferences. And then
[02:14:42.640 --> 02:14:50.880]  in the finder, like if there's a second settings on the Mac that is like as widespread, you know,
[02:14:50.880 --> 02:14:57.680]  is globally known and should be like a standard look and feel, it would be the finder settings
[02:14:57.680 --> 02:15:05.680]  and you open up the finder settings and they're all classic toolbar based with check boxes. And
[02:15:06.640 --> 02:15:12.320]  you know, it's, it's the old app kit style. And so I I'm just frustrated. It's been a lot of years
[02:15:12.320 --> 02:15:19.920]  now that there's been a lot of split personality in Apple's software, right? Like there's been a
[02:15:19.920 --> 02:15:24.320]  lot of how do you make Mac software? How do you make, I mean, it's a little more obvious how to
[02:15:24.320 --> 02:15:35.040]  make iOS software, I think, but that I'm tired of like years and years go by and it got especially
[02:15:35.040 --> 02:15:40.080]  bad when it was like to make a Mac app, you can either make a Mac app or you can make a Swift UI
[02:15:40.080 --> 02:15:45.120]  app, or you can make a catalyst app. And they all look different and they all behave differently.
[02:15:45.120 --> 02:15:52.880]  And now even at the system level, we're seeing the same thing. It's just not cohesive. And for
[02:15:52.880 --> 02:16:00.080]  a company that's so design centered as Apple is to be looking right now as I am at the system
[02:16:00.080 --> 02:16:06.640]  settings app next to Safari settings next to finder settings. And they don't look like they
[02:16:06.640 --> 02:16:14.560]  belong on the same system. And I don't know if that means like finder and Safari just need to
[02:16:14.560 --> 02:16:20.960]  catch up to where Apple's going with system settings, or if this is all going to work itself
[02:16:20.960 --> 02:16:27.840]  out and there'll be some compromise UI that everything adopts, but right now it's not great.
[02:16:28.640 --> 02:16:32.320]  You know, and I'll go back to the iOS seven comparison where they redesigned the whole
[02:16:32.320 --> 02:16:37.440]  look of the operating system and obviously third party apps aside, but if you just had a fresh
[02:16:37.440 --> 02:16:43.600]  iPhone and a fresh installation of iOS seven, everything was redesigned for the new look.
[02:16:43.600 --> 02:16:48.000]  It wasn't like, okay, we've done this new thing. We've got a new look for iOS seven,
[02:16:48.000 --> 02:16:56.080]  and you can see it in mail, Safari and settings, but the calendar and the notes app still looked
[02:16:56.080 --> 02:17:02.720]  like the skeuomorphic leather at the top and ripped paper. And that would have been bizarre.
[02:17:03.440 --> 02:17:09.520]  Yeah. And I think this is bizarre, but the Mac being the Mac and then being so much broader,
[02:17:09.520 --> 02:17:13.920]  it makes it seem less bizarre. And again, it would be worse. It's clearly with all the
[02:17:13.920 --> 02:17:17.360]  problems that still remain in system settings. The last thing I'm going to do is say they should
[02:17:17.360 --> 02:17:22.000]  have done this for the settings and preferences window in every single app that Apple ships in
[02:17:22.000 --> 02:17:27.280]  the system. But I guess to close out, to just go back to the term dog fooding, right? And I know
[02:17:27.280 --> 02:17:31.920]  that sounds gross, but there's no better term for it, but that the company making a thing should
[02:17:31.920 --> 02:17:39.360]  use their own shit to do it. Steve Jobs emphasized that all the time about cocoa even. And then even
[02:17:39.360 --> 02:17:42.880]  when the app store and the software developer kit launched a year after the original iPhone,
[02:17:42.880 --> 02:17:48.240]  the third party developers get to use the same frameworks and tools and X code as Apple itself,
[02:17:48.240 --> 02:17:54.240]  the same things Apple used to make iOS 1.0, anybody else can use to make their software.
[02:17:54.240 --> 02:18:00.400]  And that was the big problem in hindsight with the original watch kit for the Apple Watch,
[02:18:00.400 --> 02:18:05.840]  where third party developers had an entirely different set of APIs than what Apple used to
[02:18:05.840 --> 02:18:13.600]  make the original watch OS system. And the reason why was simply because the watch hardware was so
[02:18:13.600 --> 02:18:17.840]  underpowered and limiting third party apps so that they couldn't run in the background and couldn't
[02:18:17.840 --> 02:18:23.280]  even use the CPU. It was necessary for battery life, but I think in hindsight, what they should
[02:18:23.280 --> 02:18:27.600]  have done is just not have third party apps for the first year like they did with the iPhone.
[02:18:27.600 --> 02:18:32.400]  But the fact that the thing for third party developers wasn't the thing that Apple itself
[02:18:32.400 --> 02:18:36.480]  internally used to make the things that were great about even the original Apple Watch,
[02:18:36.480 --> 02:18:41.040]  it just sort of proved that dog fooding is an important concept. It really is important
[02:18:41.040 --> 02:18:47.360]  for Apple to be using the things that they're saying that third party developers should use,
[02:18:47.360 --> 02:18:53.360]  right? And if the idea is that system settings is the first really big project for the Mac,
[02:18:53.360 --> 02:18:56.880]  where we're going to make an important app, I mean, literally that everybody has to use at
[02:18:56.880 --> 02:19:02.240]  some point. And when you do need to use it, it's often for something very important that you don't
[02:19:02.240 --> 02:19:10.080]  want to futz around with. If they can make a great system settings app with Swift UI, then that's a
[02:19:10.080 --> 02:19:16.000]  great testing ground. And it is a great proof of concept that if as much as possible was written
[02:19:16.000 --> 02:19:23.920]  in Swift UI, and the fit and finish is to Apple's highest standards, even if you disagree, you know,
[02:19:23.920 --> 02:19:29.600]  you don't like the actual style of the iOS style on the Mac, that's a subjective argument.
[02:19:29.600 --> 02:19:35.440]  At least you can say, well, if you're going to go that way, this looks perfect. It looks perfect
[02:19:35.440 --> 02:19:40.800]  from the top corner to the bottom corner. Everything does look deliberate. And whether I
[02:19:40.800 --> 02:19:46.160]  like this style or not, or think this style is appropriate for the Mac, at least if somebody
[02:19:46.160 --> 02:19:52.960]  does think this is the right way to do it, this is an extremely well done fit and finish version of
[02:19:52.960 --> 02:19:58.240]  that idea. Yeah, Swift UI should be able to do that. If Swift UI is going to be used in the
[02:19:58.240 --> 02:20:02.720]  future to make everything as they're saying, that's the future, then at least being able
[02:20:02.720 --> 02:20:08.800]  to do system settings is a fantastic stepping stone or along the way. And I guess that's sort
[02:20:08.800 --> 02:20:14.800]  of the thinking. Yeah, well, I guess there's so much in system settings that it was such a
[02:20:14.800 --> 02:20:20.640]  monumental undertaking. Everything in system settings had to be redesigned to work with this.
[02:20:20.640 --> 02:20:25.520]  And I guess it sort of makes me wonder, like, if it's so comprehensive, and like you said,
[02:20:25.520 --> 02:20:32.480]  it is ambitious. Maybe they should have included all of the other Apple apps in that, like, you
[02:20:32.480 --> 02:20:37.760]  know, had the finder settings and Safari settings and everything make the same transition at the
[02:20:37.760 --> 02:20:42.640]  same time. But it's sort of telling that they didn't. I don't know. It's like, at the same time,
[02:20:42.640 --> 02:20:47.200]  it's like really ambitious and an amazing amount of work just to get system settings
[02:20:48.560 --> 02:20:52.400]  going with this. And I can understand how maybe it would have been too much to try to do everything
[02:20:52.400 --> 02:20:59.360]  else at the same time. The standard shouldn't be, there should be no internal, well, but this is a
[02:20:59.360 --> 02:21:03.120]  new thing. So, you know, if our standards are a little lower on fish and fit and finish, that's
[02:21:03.120 --> 02:21:08.880]  fine. That should never happen, right? And it's like, I say this all the time, but the fact that
[02:21:08.880 --> 02:21:13.120]  I say it all the time means that I do actually say it all the time, which is that I'm reluctant
[02:21:13.120 --> 02:21:19.040]  to play the if Steve Jobs were still around card. But I do try to be very reluctant about playing
[02:21:19.040 --> 02:21:25.920]  that card. But if you had to demo this new system settings as it stands today in the current beta of
[02:21:25.920 --> 02:21:32.640]  Ventura to Steve Jobs, and he doesn't personally give a shit about the comp sci reasons that Swift
[02:21:32.640 --> 02:21:39.680]  UI and declarative UI is actually a great idea and is the foundation of this going, all he wants is
[02:21:39.680 --> 02:21:45.200]  a great looking system settings app that he can understand and that he thinks looks up to his
[02:21:45.200 --> 02:21:50.320]  quality. If you demoed this to him today and you had all those bugs that Nicky Tonski picks out in
[02:21:50.320 --> 02:21:58.000]  that Twitter thing, it's impossible to imagine that he wouldn't erupt. And so there is that sort
[02:21:58.000 --> 02:22:04.880]  of my concern behind the scenes is where who's that person in Apple, whose standard is so high
[02:22:04.880 --> 02:22:09.280]  that you don't have to erupt, I guess, you know, there's all sorts of ways to enforce a good
[02:22:09.280 --> 02:22:15.200]  standard, but that one way or the other, you're, if this is what you're demoing, and all and you
[02:22:15.200 --> 02:22:21.360]  see that this meeting is going to go with the person looking through every single panel and
[02:22:21.360 --> 02:22:25.600]  poking at everything in there. And they're going to see all the bugs you know about in the layout
[02:22:25.600 --> 02:22:29.440]  issues that, you know, they're going to say, this is an unacceptable, this is completely
[02:22:29.440 --> 02:22:34.160]  unacceptable. You know, why are you showing this to me? That's how high the standard should be.
[02:22:34.160 --> 02:22:42.640]  Yeah. Well, John, I've been looking passively here at my Mac. I want to leave people on a little
[02:22:42.640 --> 02:22:49.840]  upbeat. All right. That's so that's music to my ears. So if you want to feel good about system
[02:22:49.840 --> 02:22:58.960]  settings, just go into mail.app and look at the mail preferences. As much as we hailed Safari for
[02:22:58.960 --> 02:23:07.360]  having like beautiful exemplary Mac preferences, something has been wrong with mail preferences
[02:23:08.000 --> 02:23:15.760]  forever. Like for instance, the print settings are now changed to this new format, but like
[02:23:15.760 --> 02:23:21.760]  Finder, Safari, et cetera, are not changed. I kind of wondered like, is mail, I haven't looked at
[02:23:21.760 --> 02:23:30.080]  mail in a while. Has mail changed? And no, mail is the same. And it's not good. It's really not good.
[02:23:31.040 --> 02:23:36.160]  It's I like mail. I like and use Apple mail, but I've thought, I've thought for ever since I've
[02:23:36.160 --> 02:23:41.440]  been using it, that its preferences are... Its preferences are weirdly bad. And that whole
[02:23:41.440 --> 02:23:45.840]  like center gravity thing I was talking about earlier. If you just click through the tabs on
[02:23:45.840 --> 02:23:53.760]  mail, there's no, it's like, there's no consideration of that strategy.
[02:23:53.760 --> 02:24:01.280]  Well, and again, again, there's a whole tab. There's one, two, three, four, five, six, seven
[02:24:01.280 --> 02:24:08.000]  tabs. One of them is called fonts and colors, but a lot of the font settings are over in
[02:24:08.000 --> 02:24:12.800]  composing and viewing. It's a very weird, it's a very strange thing.
[02:24:12.800 --> 02:24:17.360]  It's, it's slightly better. At one point, I remember at one point they had like, they,
[02:24:17.360 --> 02:24:22.080]  they introduced some new feature. Like I think when they, when they changed to the, the three
[02:24:22.080 --> 02:24:29.120]  pane, like layout, like right now, you know, at one point they, in distant memory, they had like
[02:24:29.120 --> 02:24:35.120]  the list of mail messages up top and then the content below, and they switched to this new
[02:24:35.120 --> 02:24:41.920]  to this new layout. And I remember at one point they just like select all indent right on the
[02:24:42.560 --> 02:24:47.840]  preferences and then put like a checkbox above it. I don't know. It's just a mess. I don't
[02:24:47.840 --> 02:24:52.560]  understand it. I'm sorry, mail team. I know you're doing your best work, but
[02:24:53.840 --> 02:24:59.360]  perhaps the most, the biggest contribution you're making right now is to make system settings on
[02:24:59.360 --> 02:25:09.120]  Ventura look inspired. Maybe mail should have been ground zero for the Swift UI, iOS. Well,
[02:25:09.120 --> 02:25:14.320]  speaking of good work, let me thank you for your good work. I use your software every day,
[02:25:14.320 --> 02:25:20.080]  fast scripts and a Mars edit. You've also got black ink, your crossword app. What else do we
[02:25:20.080 --> 02:25:25.120]  want to promote? Oh, that's probably good for my, my apps. People can main things.
[02:25:25.120 --> 02:25:33.280]  People can get those at red sweater dot. What is it? Dot com dot com. It's commerce, baby.
[02:25:33.280 --> 02:25:39.680]  It's now commerce. Well, it used to be red dash sweater for about 20, 20 years,
[02:25:39.680 --> 02:25:45.040]  most red dash sweater. And then I finally managed to acquire red sweater without the hyphen.
[02:25:45.600 --> 02:25:50.160]  And one of my favorite things now is just saying red sweater.com without having to
[02:25:50.160 --> 02:25:56.560]  either say red dash sweater when I mean hyphen, or you just don't want to clarify. You don't want to
[02:25:56.560 --> 02:26:01.760]  have to clarify it at all. And so red sweater.com the same way you would spell the color and the
[02:26:01.760 --> 02:26:10.480]  thing that in America, at least we wear to a warm up on a brisk fall evening. Maybe in the same way
[02:26:10.480 --> 02:26:17.040]  that Jason Snell has registered six colors. Oh yeah. With the, you perhaps you should register
[02:26:17.040 --> 02:26:21.840]  red jumper.com. I should. Well, now I'm going to look at that and it's going to be, yeah. Oh,
[02:26:21.840 --> 02:26:28.400]  this domain is for sale. $3,295. And then when you contact them and you're like, screw it,
[02:26:28.400 --> 02:26:32.960]  I'm spending $3,000 on this domain. And the guy is like, I've been waiting for you.
[02:26:34.480 --> 02:26:40.160]  Well, ultimately I ended up, it was years and years and years of trying to get red sweater
[02:26:40.160 --> 02:26:45.440]  dot com. And ultimately I will say I paid a good amount of money for it, but it was less than
[02:26:45.440 --> 02:26:55.040]  $3,295. I think I paid $2,000 for it, which is not too bad for a custom domain, but the investment
[02:26:55.040 --> 02:27:00.880]  wasn't the money. It was the years and years of trying to get one person who owned it that whole
[02:27:00.880 --> 02:27:06.960]  time to give me the time of day. And they finally did. And they finally sold it to me. So it's a
[02:27:06.960 --> 02:27:13.280]  happy time. Somebody had long, I mean, this is like 1994 or five somewhere around there was when
[02:27:13.280 --> 02:27:17.360]  I first thought maybe I should, this domain name thing seems to be here to stay. Let's look at
[02:27:17.360 --> 02:27:22.000]  Gruber dot com and then the company that had it, I believe it's the same company, but now I'm
[02:27:22.000 --> 02:27:26.880]  looking at Gruber dot com. They welcome to the Gruber companies. I think it's the same company
[02:27:26.880 --> 02:27:30.320]  because they've always used. Gruber Motor Company. I've looked at this before for some reason.
[02:27:31.120 --> 02:27:35.760]  Well, that's new. The new one is the Gruber Motor Company, which is very disappointing to me with
[02:27:35.760 --> 02:27:42.560]  my plans to turn the latter decades of my career into a modern day John DeLorean. I'm going to have
[02:27:42.560 --> 02:27:48.880]  to come up with a new name. Although I suppose Gruber Motor Company doesn't work as GMC either.
[02:27:48.880 --> 02:27:50.720]  Oh, right. No, it certainly does not.
[02:27:51.360 --> 02:27:56.560]  Sort of, sort of take it. So I'll have to, I'll have to come up with something. It's probably the
[02:27:56.560 --> 02:27:58.480]  Daring Fireball Motor Company.
[02:27:58.480 --> 02:28:02.560]  Daring Fireball. Everyone wants to drive a car called the Daring Fireball.
[02:28:02.560 --> 02:28:05.120]  Yeah. Oh, now that one's out too. Son of a bitch.
[02:28:06.560 --> 02:28:09.200]  Don't worry about it. We got safety under control.
[02:28:09.200 --> 02:28:15.280]  I will post a link. I promise. I know I always promise this to your post on titled Disciplined
[02:28:15.280 --> 02:28:21.280]  Innovation about this that we've referenced throughout the show at bitsplitting.org,
[02:28:21.280 --> 02:28:25.440]  which is your blog. And we also mentioned Core Intuition, the show that we do with our mutual
[02:28:25.440 --> 02:28:34.240]  good friend, Manton Reese, which is at coreint.org. C-O-R-E-I-N-T.org.
[02:28:34.240 --> 02:28:39.760]  Right. And if, you know, you guys mostly largely talk about developers stuff.
[02:28:39.760 --> 02:28:46.160]  Yeah. Well, it's funny. We try to frame it like we talk about indie business challenges. We don't
[02:28:46.160 --> 02:28:51.760]  really talk about developing. And that's why I try to emphasize to people because we never talk
[02:28:51.760 --> 02:28:58.400]  about programming, really. We just talk about what it's like to be in the Apple ecosystem as an
[02:28:58.400 --> 02:29:03.840]  indie developer. So it can be fun just to say, you know, when you're talking about like, oh,
[02:29:03.840 --> 02:29:12.640]  what is your audience? Like, are they designers? Are they developers? We have like product managers.
[02:29:12.640 --> 02:29:17.280]  Everybody wants to listen to this show because it's not about development per se. It's about
[02:29:17.280 --> 02:29:21.120]  getting by in an Apple world, I guess, is a good way to summarize it.
[02:29:21.120 --> 02:29:24.800]  That is, as a listener, I can say that is an excellent way to summarize it.
[02:29:24.800 --> 02:29:31.600]  Your self-awareness remains astute. I thank you so much, Daniel, for your time. You are
[02:29:31.600 --> 02:29:37.520]  my friend and I appreciate that very much. I will also throw out a thanks to our three sponsors of
[02:29:37.520 --> 02:29:42.080]  this show. Again, Linode, where you can host your website, Memberful, where you can monetize your
[02:29:42.080 --> 02:29:50.640]  passion with membership, and Revenue Cat. You can make in-app purchases and subscriptions easy.
[02:29:52.480 --> 02:29:57.920]  All of these products are endorsed by your guest again. Gotta love it when that works out.
[02:29:57.920 --> 02:30:01.680]  No cheating. There's no fudging on the schedule, I swear. I didn't even know.
[02:30:01.680 --> 02:30:26.640]  Well, thank you, Daniel. Thank you so much for having me.
